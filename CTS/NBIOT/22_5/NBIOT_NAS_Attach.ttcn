// ***************************************************************************
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3 v15.3.0
// * $Date: 2018-12-13 17:59:42 +0100 (Thu, 13 Dec 2018) $
// * $Rev: 23483 $
// ***************************************************************************

module NBIOT_NAS_Attach {

  import from NBIOT_RRC_ASN1_Definitions language "ASN.1:2002" all with {encode "UNALIGNED_PER_OctetAligned"};
  import from CIOT_NASTemplates all;
  import from Common4G5G_Templates all;
  import from CommonDefs all;
  import from EPS_NAS_Constants all;
  import from EPS_NAS_MsgContainers all;
  import from EPS_NAS_Templates all;
  import from EPS_NAS_TypeDefs all;
  import from EUTRA_NB_AuxiliaryFunctions all;
  import from EUTRA_NB_CommonDefs all;
  import from EUTRA_NB_NASSteps all;
  import from EUTRA_NB_RRC_Templates all;
  import from NAS_AuxiliaryDefsAndFunctions all;
  import from NAS_CommonTemplates all;
  import from NAS_CommonTypeDefs all;
  import from NBIOT_ASP_SrbDefs all;
  import from NBIOT_CellInfo all;
  import from NBIOT_CellInfoFrequency all;
  import from NBIOT_CommonDefs all;
  import from NBIOT_CommonProcedures all;
  import from NBIOT_Component all;
  import from NBIOT_ConfigurationSteps all;
  import from NBIOT_Imported_EUTRA_ASN1_Types all;
  import from NBIOT_NASSteps all;
  import from NBIOT_Paging all;
  import from NBIOT_Parameters all;
  import from NBIOT_RRCSteps all;
  import from NBIOT_RRC_Templates all;
  import from NBIOT_SRB_DRB_Templates all;
  import from NBIOT_SecurityFunctions all;
  import from NBIOT_SysInfo_Templates all;
  import from NBIOT_Timing all;
  import from Parameters all;
  import from UpperTesterFunctions all;

  template (present) NAS_UL_Message_Type cdr_CIOT_ATTACH_REQUEST_WithExtdDRXParams_T3324(template AdditionalUpdateType p_AdditionalUpdateType,
                                                                                         template (present) MobileIdentity p_MobileId := f_Imsi2MobileIdentity(px_IMSI_Def),
                                                                                         template GPRS_Timer2 p_T3324 := omit,
                                                                                         template TrackingAreaId p_Tai := omit,
                                                                                         template ExtdDRXParams p_EDRX := cr_ExtdDRXParamsAny)
    modifies cr_CIOT_ATTACH_REQUEST :=
  { /* @status    APPROVED (NBIOT) */
    aTTACH_REQUEST := {
      nasKeySetId              := cr_NAS_KeySetIdentifier(?, tsc_Spare1), // @sic R5s170496 sic@
      epsMobileIdentity        := p_MobileId,
      lastVisitedRegisteredTai := p_Tai,
      t3324Value               := p_T3324,
      extendedDRXParams        := p_EDRX
    }
  };

  template (present) NAS_UL_Message_Type cdr_TAU_Request_MSNetworkFeatureSupport_T3324(template (present) EPS_UpdateTypeValue p_EpsUpdate_TypeValue,
                                                                                       NAS_KsiValue p_KsiValue,
                                                                                       template DRXparameter p_DRXparameter := cr_DRXparameter_Any ('5C'O) ifpresent,
                                                                                       template AdditionalUpdateType p_AdditionalUpdateType,
                                                                                       template (present) MobileIdentity p_OldGuti,
                                                                                       template MS_NetworkFeatureSupport p_MS_NetworkFeatureSupport := cr_MS_NetworkFeatureSupport('C'H) ifpresent,
                                                                                       template GPRS_Timer2 p_T3324 := omit,
                                                                                       template GPRS_Timer2 p_T3412Ext := omit)
    modifies cr_508_TAU_Request :=
  { /* @status    APPROVED (NBIOT) */
    tRACKING_AREA_UPDATE_REQUEST := {
      oldGuti := p_OldGuti,
      msNetworkFeatureSupport  := p_MS_NetworkFeatureSupport,
      t3324Value               := p_T3324,
      t3412ExtdValue           := p_T3412Ext
    }
  };

  /*
   * @desc      To initialise SIB5 for the specific requirements of test case 22.5.13
   * @param     p_CellId
   * @param     p_NB_OperationMode
   * @param     p_FrequencyBand     (default value: px_ePrimaryFrequencyBand)
   * @return    template (value) SystemInformationBlockType5_NB_r13
   * @status    APPROVED (NBIOT)
   */
  function fl_InitSIB5Info_22513(NBIOT_CellId_Type p_CellId,
                                 NB_OperationMode_Type p_NB_OperationMode,
                                 integer p_FrequencyBand := px_ePrimaryFrequencyBand)
    return template (value) SystemInformationBlockType5_NB_r13
  {
    var NBIOT_Frequency_fList_Type v_Frequency_PrimaryBand := f_NBIOT_InitFrequency_f1Tof3(p_FrequencyBand, p_NB_OperationMode);
    var template (value) InterFreqCarrierFreqList_NB_r13 v_InterFreqCarrierList;
    
    select (p_CellId) {
      case (nbiot_Cell50, nbiot_Cell51, nbiot_Cell52) {
        v_InterFreqCarrierList := {
          cs_NB_InterFreqCarrierFreq(v_Frequency_PrimaryBand.f2),
          cs_NB_InterFreqCarrierFreq(v_Frequency_PrimaryBand.f3)
        };
      }
      case (nbiot_Cell57, nbiot_Cell59) {
        v_InterFreqCarrierList := {
          cs_NB_InterFreqCarrierFreq(v_Frequency_PrimaryBand.f1),
          cs_NB_InterFreqCarrierFreq(v_Frequency_PrimaryBand.f2)
        };
      }
      case(nbiot_Cell55, nbiot_Cell56, nbiot_Cell54) {
        v_InterFreqCarrierList := {
          cs_NB_InterFreqCarrierFreq(v_Frequency_PrimaryBand.f1),
          cs_NB_InterFreqCarrierFreq(v_Frequency_PrimaryBand.f3)
        };
      }
      case else {
        FatalError (__FILE__, __LINE__, "invalid CellId");
      }
    }
    return cs_508_SystemInformationBlockType5_NB_Def(v_InterFreqCarrierList);
  }

  /*
   * @desc      Steps 2 - 13 of the generic procedure from TS 36.508 subclause 8.1.5.2.3 are performed
   * @param     p_CellId
   * @param     p_T3324             (default value: omit)
   * @param     p_EDRX              (default value: omit)
   * @param     p_NoPSM_and_eDRX    (default value: false)
   * @param     p_Guti_Params
   * @param     p_Tai
   * @status    APPROVED (NBIOT)
   */
  function fl_NBIOT_InitialRegistration2to13_eDRX_PSM(NBIOT_CellId_Type p_CellId,
                                                      template (omit) GPRS_Timer2 p_T3324 := omit,
                                                      template (omit) ExtdDRXParams p_EDRX := omit, //paramaters used for the attach accept message only
                                                      boolean p_NoPSM_and_eDRX := false,  // indicates whether only eDRX params are taken into account on the attach accept message
                                                      GutiParameters_Type p_Guti_Params,  // @sic R5s170496 sic@
                                                      template TrackingAreaId p_Tai)      // @sic R5s170496 sic@
    runs on NBIOT_PTC
  {
    var template (present) NAS_UL_Message_Type v_ESMMessage;
    var NAS_UL_Message_Type v_ESMMessageRxd;
    var template (present) NAS_UL_Message_Type v_AttachReq;
    var template (present) B3_Type v_PDNTypeRxd := (f_GetPdnType(), '101'B);
    var NAS_MSG_Indication_Type v_NasInd;
    
    //Steps 1-4 of the generic procedure specified in TS 36.508 subclause 8.1.5.2.3 are performed
    if (px_DoAttachWithoutPDN) {
      v_ESMMessage := cr_ESM_DUMMY_MESSAGE;
    } else {
      v_ESMMessage := cr_CIOT_PDN_CONNECTIVITY_REQUEST(tsc_PdnRequest_InitialAttach, v_PDNTypeRxd);
    }
    
    // @sic R5s170496 sic@
    v_AttachReq := cdr_CIOT_ATTACH_REQUEST_WithExtdDRXParams_T3324(cr_AdditionalUpdateType_CIOT,
                                                                   f_GutiParameters2MobileIdentity(omit, p_Guti_Params),
                                                                   cr_GPRS_Timer2_3('6A'O) ifpresent,
                                                                   p_Tai); //All Att. Request messages on this test have "Any Value" as specific message contents
    
    // Receive RRC Connection Setup Complete with NAS
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(p_CellId,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected,
                                                                                 v_AttachReq,
                                                                                 v_ESMMessage));
    v_ESMMessageRxd := v_NasInd.Pdu.PiggybackedPduList[0].Msg;
    //Do Steps 5-12
    f_NBIOT_InitialRegistration_Step5_12(p_CellId, CONTROL_PLANE, STATE3_NB_IDLEUPDATED, v_NasInd);
       
    // CP
    if (p_NoPSM_and_eDRX) {
      p_T3324 := omit; // case of TP13, the UE receives the ATTACH ACCEPT message including the extended DRX parameters but not the T3324 IE
    }
    
    //Step 13 of UE Registration acc. to 36.508 cl. 8.1.5.2
    f_NBIOT_InitialRegistration_Step13(nbiot_Cell1,
                                       CONTROL_PLANE,
                                       v_NasInd,
                                       -,
                                       omit,
                                       omit,
                                       omit,
                                       omit,
                                       cs_GprsTimer_v_deact,
                                       omit,
                                       omit,
                                       p_T3324,
                                       omit,
                                       omit,
                                       p_EDRX); // @sic R5s170597 sic@
    //Step 14
    //f_NBIOT_InitialRegistration_Step14(nbiot_Cell1, CONTROL_PLANE, tsc_EpsDefaultBearerId);
    // not done as following step is done to Rx. Att. Accept message
  }

  /*
   * @desc      Steps 24 .. 54 of test case 22.5.4
   * @param     p_ESMMessage
   * @param     p_Guti_Params
   * @param     p_NAS_CauseValue
   * @param     p_NAS_PlmnId
   * @status    APPROVED (NBIOT)
   */
  function f_NBIOT_TC_22_5_4_Step24_54(template (present) NAS_UL_Message_Type p_ESMMessage,
                                       GutiParameters_Type p_Guti_Params,
                                       NAS_CauseValue_Type p_NAS_CauseValue,
                                       NAS_PlmnId p_NAS_PlmnId) runs on NBIOT_PTC
  {
    var NAS_MSG_Indication_Type v_NasInd;
    var float v_NoReactionTime := 30.0;
    var NBIOT_SecurityParams_Type v_SecurityParams;

    //@siclog "Step 24" siclog@
    //Check: Does the UE transmit an RRCConnectionRequest-NB message?
    f_NBIOT_RRC_ConnectionRequest_Def(nbiot_Cell12, mo_Signalling);
    if (p_NAS_CauseValue == tsc_EmmCause_IllegalUe){
      f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 24");
    }
    
    //@siclog "Step 25" siclog@
    //SS transmits an RRCConnectionSetup-NB.
    f_NBIOT_RRC_ConnectionSetup_Def();
    
    //@siclog "Step 26" siclog@
    //EXCEPTION: Steps 26a1 and 26b1 describe behaviour that depends on UE capabilities;
    //the "lower case letter" identifies a step sequence that take place depending on whether the UE is configured to do Attach Without PDN or not.
    //IF px_DoAttachWithoutPDN THEN
    //Check: Does the UE transmit an RRCConnectionSetupComplete-NB message containing an ATTACH REQUEST message (not including any GUTI, last visited registered TAI nor KSI), and an ESM DUMMY MESSAGE?
    v_NasInd := f_NBIOT_RRCConnectionSetupComplete_Def(nbiot_Cell12,
                                                       cr_508_RRCConnectionSetupComplete_NB,  // @sic R5s170256 sic@
                                                       cr_NAS_IndicationWithPiggybacking(tsc_SHT_NoSecurityProtection,
                                                                                         cdr_CIOT_ATTACH_REQUEST_WithIMSINoTai(cr_AdditionalUpdateType_CIOT),
                                                                                         p_ESMMessage));
    if (p_NAS_CauseValue == tsc_EmmCause_IllegalUe) {
      f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 26");
    }
    
    //@siclog "Step 27-36b1" siclog@
    //Steps 5-14b1 from the Generic procedure 'NB-IoT UE Attach, Connected mode (State 2-NB)' as described in TS 36.508 [18], clause 8.1.5.2 take place.
    f_NBIOT_InitialRegistration_Step5_14(nbiot_Cell12, CONTROL_PLANE, STATE2_NB_CONNECTED_UPDATED, v_NasInd);
    
    //@siclog "Step 37" siclog@
    //The SS transmits an RRCConnectionRelease-NB message to release RRC connection and move to RRC_IDLE.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell12);
    
    //@siclog "Step 38" siclog@
    //Switch off the UE.
    f_UT_SwitchOffUE(UT, false);
    
    //@siclog "Step 39" siclog@
    //The UE transmit an RRCConnectionRequest-NB message.
    f_NBIOT_RRC_ConnectionRequest_Def(nbiot_Cell12, mo_Signalling);
    
    //@siclog "Step 40" siclog@
    //SS transmits an RRCConnectionSetup-NB.
    f_NBIOT_RRC_ConnectionSetup_Def();
       
    //@siclog "Step 41-42" siclog@
    v_NasInd := f_NBIOT_RRCConnectionSetupComplete_Def(nbiot_Cell12,
                                                       cr_508_RRCConnectionSetupComplete_NB,  // @sic R5s170256 sic@
                                                       cr_NAS_Indication(tsc_SHT_IntegrityProtected,  // @sic R5s170256 sic@
                                                                         cr_508_DETACH_REQUEST_MO(cr_NAS_KeySetIdentifier (?, ?),
                                                                                                  f_GutiParameters2MobileIdentity(omit, p_Guti_Params), //GUTI 2
                                                                                                  cr_DetachType('1'B, tsc_DetachMO_EpsOnly))));
    if (p_NAS_CauseValue == tsc_EmmCause_IllegalUe) {
      f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 42");
    }

    //@siclog "Step 43" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell12);
    
    //@siclog "Step 44" siclog@
    //The UE is switched on.
    f_UT_SwitchOnUE(UT, true);
    
    v_SecurityParams := f_NBIOT_Security_Get();
    
    //@siclog "Step 45" siclog@
    //Check: Does the UE transmit an RRCConnectionRequest-NB message?
    f_NBIOT_RRC_ConnectionRequest_Def(nbiot_Cell12, mo_Signalling);
    if (p_NAS_CauseValue == tsc_EmmCause_IllegalUe) {
      f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 45");
    }
    
    //@siclog "Step 46" siclog@
    //SS transmits an RRCConnectionSetup-NB..
    f_NBIOT_RRC_ConnectionSetup_Def();
    
    //EXCEPTION: Steps 47a1 and 47b1 describe behaviour that depends on UE capabilities;
    //the "lower case letter" identifies a step sequence that take place depending on whether the UE is configured to do Attach Without PDN or not.
    //@siclog "Step 47a1-47b1" siclog@
    //IF px_DoAttachWithoutPDN THEN
    //Check: Does the UE transmit an RRCConnectionSetupComplete-NB message containing an ATTACH REQUEST message (indicating GUTI, last visited registered TAI and KSI as per the registration which happened in steps 23-32b1), and, an ESM DUMMY MESSAGE?
    //ELSE
    //Check: Does the UE transmit an RRCConnectionSetupComplete-NB message containing an ATTACH REQUEST message (indicating GUTI, last visited registered TAI and KSI as per the registration which happened in steps 23-32b1), and, a PDN CONNECTIVITY REQUEST?
    // receive RRC Connection Setup Complete with piggy-backed NAS message on SRB1 (DCCH):
    v_NasInd := f_NBIOT_RRCConnectionSetupComplete_Def(nbiot_Cell12,
                                                       cr_508_RRCConnectionSetupComplete_NB,  // @sic R5s170256 sic@
                                                       cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected,  // @sic R5s170256 sic@
                                                                                         cdr_CIOT_ATTACH_REQUEST_WithGuti(cr_AdditionalUpdateType_CIOT,
                                                                                                                          v_SecurityParams.KSIasme, // @sic R5s170256 sic@
                                                                                                                          f_GutiParameters2MobileIdentity(omit, p_Guti_Params), // GUTI2
                                                                                                                          cr_TAI(p_NAS_PlmnId, tsc_TAC1)), // @sic R5s170256 sic@
                                                                                         p_ESMMessage));
    if (p_NAS_CauseValue == tsc_EmmCause_IllegalUe) {
      f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 47");
    }
    
    //@siclog "Step 48" siclog
    //The SS transmits an ATTACH REJECT message with EMM cause = "Illegal UE" or "Illegal ME".
    SRB.send(cas_NB_SRB1bis_NasPdu_REQ(nbiot_Cell12,
                                       cs_TimingInfo_Now,
                                       cs_NAS_Request(f_GetEPS_SecurityHeaderForReject(p_NAS_CauseValue), // @sic R5-174501 sic@
                                                      cs_508_AttachReject(cs_EMM_Cause_v(p_NAS_CauseValue)))));
    
    //@siclog "Step 49" siclog@
    //The SS transmits an RRCConnectionRelease-NB message to release RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell12);

    //@siclog "Step 50" siclog@
    //Check: Does the the UE respond to paging by transmitting an RRCConnectionRequest-NB message in the next 30 seconds
    f_NBIOT_UE_Page_NoReaction(nbiot_Cell12,
                               cs_NB_Paging_OneRecord(cs_PagingUE_Identity_S_TMSI(p_Guti_Params.MME_Code, p_Guti_Params.M_TMSI)),
                               v_NoReactionTime);
    
    //@siclog "Step 51" siclog@
    //The operator initiates an UE attach by MMI or by AT command.
    f_UT_TriggerAttach(UT);
    
    //@siclog "Step 52" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST message in the next 30 seconds?
    if (p_NAS_CauseValue == tsc_EmmCause_IllegalUe) {
      f_NBIOT_CheckNoAttachOn1Cell(nbiot_Cell12, 30.0, "Step 52");
    } else {
      f_NBIOT_CheckNoAttachOn1Cell(nbiot_Cell12, 30.0, "Step 83");
    }
    //@siclog "Step 53" siclog@
    //If possible (see ICS) switch off is performed or the USIM is removed.
    //Otherwise the power is removed.
    f_UT_SwitchOffUE(UT, true);
    
    //@siclog "Step 54" siclog@
    //The UE is brought back to operation or the USIM is inserted.
    f_UT_SwitchOnUE(UT, true);
  }

  /*
   * @desc      This function is used for Steps 4, 7, 11, 15, 19, 54 and 85 to handle ATTACH REQ/REJ
   * @param     p_CellId
   * @param     p_StepNo            (default value: "")
   * @param     p_NAS_CauseValue    (default value: tsc_EmmCause_IllegalUe)
   * @status    APPROVED (NBIOT)
   */
  function fl_TC_22_5_6_ReceiveAttachREQ(NBIOT_CellId_Type p_CellId,
                                         charstring p_StepNo := "",
                                         NAS_CauseValue_Type p_NAS_CauseValue := tsc_EmmCause_IllegalUe) runs on NBIOT_PTC
  {
    var NAS_MSG_Indication_Type v_NAS_Ind;
    
    v_NAS_Ind := f_NBIOT_InitialRegistration_Step2_4(p_CellId, CONTROL_PLANE, PREAMBLE); // @sic R5s170770 sic@
    
    if (p_StepNo != ""){
      f_NBIOT_PreliminaryPass (__FILE__, __LINE__, p_StepNo);
    }
    
    if (p_NAS_CauseValue != tsc_EmmCause_IllegalUe) {
      SRB.send(cas_NB_SRB1bis_NasPdu_REQ(p_CellId,
                                         cs_TimingInfo_Now,
                                         cs_NAS_Request(f_GetEPS_SecurityHeaderForReject(p_NAS_CauseValue), // @sic R5-174501 sic@
                                                        cs_508_AttachReject(cs_EMM_Cause_v(p_NAS_CauseValue)))));
    }
    
    if (p_StepNo == "Step 19"){
      //The attach procedure is completed by executing steps 5 to 14b1 of the UE registration procedure in TS 36.508 sub clause 8.1.5.2.
      //This is as per 36523-1 Sec 22.5.6.3.2 Steps 20 - 29b1 of the expected test sequence.
      //Check that lastvisited/registeredTai is not present
      if (ispresent(v_NAS_Ind.Pdu.Msg.aTTACH_REQUEST.lastVisitedRegisteredTai)) {
        f_NBIOT_SetVerdictFailOrInconc(__FILE__, __LINE__, "Step 19 : lastVisitedRegisteredTai received in attach req");
      }
      //Check that lepsmobileidentity is set to IMSI
      if (not match (v_NAS_Ind.Pdu.Msg.aTTACH_REQUEST.epsMobileIdentity, f_Imsi2MobileIdentity(px_IMSI_Def))) {
        f_NBIOT_SetVerdictFailOrInconc(__FILE__, __LINE__, "Step 19 : Incorrect MobileIdentity");
      }
      //Check that naskeysetidentifier is not present
      if (not match (v_NAS_Ind.Pdu.Msg.aTTACH_REQUEST.nasKeySetId, cr_NAS_KeySetIdentifier(tsc_NasKsi_NoKey, tsc_Spare1))) {
        f_NBIOT_SetVerdictFailOrInconc(__FILE__, __LINE__, "Step 19 : Incorrect NasKeysetIdentifier");
      }
      f_NBIOT_InitialRegistration_Step5_14 (p_CellId, CONTROL_PLANE, STATE2_NB_CONNECTED_UPDATED, v_NAS_Ind);
    }
  }

  /*
   * @desc      This function is used to transmit ATTACH ACCEPT at Steps 44, 66, 72, 74, 76 and 98
   * @param     p_CellId
   * @param     p_NAS_Ind
   * @param     p_TaiList           (default value: omit)
   * @param     p_Guti              (default value: omit)
   * @param     p_SecurityHeader    (default value: tsc_SHT_IntegrityProtected_Ciphered)
   * @param     p_MacErr            (default value: false)
   * @param     p_IOT_State         (default value: CONTROL_PLANE)
   * @status    APPROVED (NBIOT)
   */
  function fl_TC_22_5_6_AttachAccept(NBIOT_CellId_Type p_CellId,
                                     NAS_MSG_Indication_Type p_NAS_Ind,
                                     template (omit) TrackingAreaIdList p_TaiList := omit,
                                     template (omit) MobileIdentity p_Guti := omit,
                                     SecurityHeaderType p_SecurityHeader := tsc_SHT_IntegrityProtected_Ciphered,
                                     boolean p_MacErr := false,
                                     IOT_STATE_Type p_IOT_State := CONTROL_PLANE) runs on NBIOT_PTC
  {
    var GutiParameters_Type v_GutiParams := f_NBIOT_CellInfo_GetGuti(p_CellId);
    var template (value) NAS_MSG_Request_Type v_NAS_MSG_Request;
    var template (value) MobileIdentity v_Guti;
    var NAS_PlmnId v_PLMN := f_Asn2Nas_PlmnId (v_GutiParams.PLMN_Identity);
    var NAS_UL_Message_Type v_ESMMessage := p_NAS_Ind.Pdu.PiggybackedPduList[0].Msg;
    var EUTRA_ASN1_TrackingAreaCode_Type v_TAC := f_NBIOT_CellInfo_GetTAC(p_CellId);
    var EPS_BearerIdentity v_EpsDefaultBearerId := tsc_EpsDefaultBearerId;
    var template (value) EPS_NetworkFeatureSupport v_NtwkFeatSupport;
    var boolean v_IPv4AllocationViaNasFlag := true;
    var template (omit) ExtdProtocolConfigOptions v_PcoToUE := omit;
    var template (omit) ExtdProtocolConfigOptions v_PcoFromUE := omit;
    var NBIOT_PDN_Type v_PDN;
    var template (value) PDN_Address v_PDN_Address;
    var template (omit) AdditionalUpdateResult v_AdditionalUpdateResult;
    var template (omit) HeaderCompressConfig v_HeaderCompressConfigTX := omit;
    var template (value) TrackingAreaIdList v_TaiList;
    
    if (isvalue(p_TaiList)) {
      v_TaiList := valueof(p_TaiList);
    } else {
      v_TaiList := cs_TAIListNonConsecutive_lv(v_PLMN, {bit2oct(v_TAC)});
    }
    if (isvalue(p_Guti)) {
      v_Guti := valueof(p_Guti);
    } else {
      v_Guti := f_GutiParameters2MobileIdentity(tsc_IEI_Guti, v_GutiParams);
    }
    v_NtwkFeatSupport := f_GetNBIOTNetworkFeatureSupport(p_IOT_State);
    v_AdditionalUpdateResult  := f_GetNBIOTAdditionalUpdateResult(p_NAS_Ind.Pdu.Msg.aTTACH_REQUEST.addUpdateType);
    if (f_NBIOT_MobileInfo_GetNoOfPDNsConfigured() > 0) { // PDN Requested
      v_PDN := f_NBIOT_MobileInfo_GetAssignedPdn (0);  // This is registration, so this is the first PDN
      v_PDN.pti := v_ESMMessage.pDN_CONNECTIVITY_REQUEST.procedureTransactionIdentifier; // @sic R5s180057 sic@
      v_PcoFromUE := v_PDN.protocolConfigurationOptions; // @sic R5s170597 sic@
      if (isvalue(v_PcoFromUE)) { // @sic R5s170597 sic@
        v_IPv4AllocationViaNasFlag := f_CheckExtdPCOforIPallocationViaNas(v_PcoFromUE);
      }
      v_PDN_Address := f_CIOT_GetPDNAddress(v_PDN.assignedPdnType, v_IPv4AllocationViaNasFlag, -, pdnTypeAsSupportedByUE); // @sic R5s170597 sic@
      v_PcoToUE := f_GetDefaultExtdProtocolConfigOptions(v_PcoFromUE); // @sic R5s170597 sic@
    }
    
    if (ischosen(v_ESMMessage.eSM_DUMMY_MESSAGE)) { //@sic R5s170770 sic@
      v_NAS_MSG_Request := cs_NAS_RequestWithPiggybacking(p_SecurityHeader,
                                                          cs_CIOT_ATTACH_ACCEPT(v_TaiList,
                                                                                v_Guti,
                                                                                v_NtwkFeatSupport,
                                                                                v_AdditionalUpdateResult),
                                                          cs_ESM_DUMMY_MESSAGE(v_ESMMessage.eSM_DUMMY_MESSAGE.procedureTransactionIdentifier));
    } else {
      v_NAS_MSG_Request := cs_NAS_RequestWithPiggybacking(p_SecurityHeader,
                                                          cs_CIOT_ATTACH_ACCEPT(cs_TAIListNonConsecutive_lv(v_PLMN, {bit2oct(v_TAC)}),
                                                                                v_Guti,
                                                                                v_NtwkFeatSupport,
                                                                                v_AdditionalUpdateResult),
                                                          cs_CIOT_ActivateDefEpsBearerContextRequest(v_EpsDefaultBearerId,
                                                                                                     v_PDN.pti,
                                                                                                     v_PDN.accessPointName,
                                                                                                     v_PDN_Address,
                                                                                                     v_PcoToUE,
                                                                                                     -,
                                                                                                     -,
                                                                                                     -,
                                                                                                     v_HeaderCompressConfigTX,
                                                                                                     cs_ControlPlaneInd,
                                                                                                     cs_ServingPLMNRateControl('FFFF'O)));
    }
    if (p_MacErr) {
      v_NAS_MSG_Request.SecurityProtection.ForceMacError := true; // force an integrity MAC error
    }

    SRB.send(cas_NB_SRB_NasPdu_REQ(p_CellId,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   v_NAS_MSG_Request));
  }

  /*
   * @desc      REFERENCE TS 36.523-1 clause 22.5.4
   * @status    APPROVED (NBIOT)
   */
  function f_TC_22_5_4_NBIOT() runs on NBIOT_PTC
  {
    //NB-IoT / Attach to new PLMN GUTI reallocation / Network reject with Extended Wait Timer
    //Paging with IMSI / Attach Rejected Illegal ME/UE / Detach upon switch-off
    var GutiParameters_Type v_Guti_Old_Params;

    f_NBIOT_Init(c1, CONTROL_PLANE, LTE_CellsOnDifferentPLMN);
    
    v_Guti_Old_Params := f_NBIOT_CellInfo_GetGuti (nbiot_Cell1);
    // create cell and send out system information
    f_NBIOT_CellConfig_Def(nbiot_Cell1, CONTROL_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell12, CONTROL_PLANE);
    
    // Preamble: The UE is in State 1-NB "Switched OFF"
    // ==========================================================================
    f_NBIOT_Preamble(nbiot_Cell1, CONTROL_PLANE);
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell1, CONTROL_PLANE, RRC_CONNECTED);
    
    f_NBIOT_TestBody_Set(true);
       
    fl_TC_22_5_4_Body(v_Guti_Old_Params);
    
    // Postamble
    f_NBIOT_TestBody_Set(false);
    f_NBIOT_Postamble (nbiot_Cell12, CONTROL_PLANE, N1_IDLE); // @sic R5s170256 sic@
  }

  /*
   * @desc      test body of TC_22_5_4
   * @param     p_GutiOldParams
   * @status    APPROVED (NBIOT)
   */
  function fl_TC_22_5_4_Body(GutiParameters_Type p_GutiOldParams) runs on NBIOT_PTC
  {
    // ==========================================================================
    // initialize constant test case data structures
    // ==========================================================================
    var NAS_MSG_Indication_Type v_NasInd;
    var template (present) B3_Type v_PDNType := (f_GetPdnType(), '101'B);
    var template (present) NAS_UL_Message_Type v_ESMMessage;
    var NAS_PlmnId v_NAS_Old_PlmnId := f_Asn2Nas_PlmnId(p_GutiOldParams.PLMN_Identity);
    var GutiParameters_Type v_Guti_Params := f_NBIOT_CellInfo_GetGuti (nbiot_Cell12);
    var NAS_PlmnId v_NAS_PlmnId := f_Asn2Nas_PlmnId(v_Guti_Params.PLMN_Identity);
    var template (value) NB_CellPowerList_Type v_CellPowerList;
    var float v_T3346Val;
    
    //@siclog "Step 1" siclog@
    //The SS configures:
    //- Ncell 1 as a "Non-Suitable cell".
    //- Ncell 12 as the "Serving cell".
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell12, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell1, tsc_NonSuitableNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 2" siclog@
    //Switch on the UE.
    f_UT_SwitchOnUE(UT, true);
    
    //@siclog "Step 3" siclog@
    //Check: Does the UE transmit an RRCConnectionRequest-NB message?
    // receive RRC Connection Request on SRB0 (CCCH):
    f_NBIOT_RRC_ConnectionRequest_Def(nbiot_Cell12, mo_Signalling);
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 3");
    
    //@siclog "Step 4" siclog@
    //SS transmits an RRCConnectionSetup-NB.
    f_NBIOT_RRC_ConnectionSetup_Def();
    
    //EXCEPTION: Steps 5a1 and 5b1 describe behaviour that depends on UE capabilities;
    //the "lower case letter" identifies a step sequence that take place depending on whether the UE is configured to do Attach Without PDN or not.
    //@siclog "Step 5a1-5b1" siclog@
    //IF px_DoAttachWithoutPDN THEN
    //Check: Does the UE transmit an RRCConnectionSetupComplete-NB message containing an ATTACH REQUEST message (indicating GUTI, last visited registered TAI and KSI as per the registration which happened in the preamble), and, an ESM DUMMY MESSAGE?
    //ELSE
    //Check: Does the UE transmit an RRCConnectionSetupComplete-NB message containing an ATTACH REQUEST message (indicating GUTI, last visited registered TAI and KSI as per the registration which happened in the preamble), and, a PDN CONNECTIVITY REQUEST?
    if (px_DoAttachWithoutPDN) {
      v_ESMMessage := cr_ESM_DUMMY_MESSAGE;
    } else {
      v_ESMMessage := cr_CIOT_PDN_CONNECTIVITY_REQUEST(tsc_PdnRequest_InitialAttach, v_PDNType);
    }
    // receive RRC Connection Setup Complete with piggy-backed NAS message on SRB1 (DCCH):
    v_NasInd := f_NBIOT_RRCConnectionSetupComplete_Def(nbiot_Cell12,
                                                       cr_508_RRCConnectionSetupComplete_NB(-, -, -, ?),
                                                       cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected,
                                                                                         cdr_CIOT_ATTACH_REQUEST_WithGuti(cr_AdditionalUpdateType_CIOT,
                                                                                                                          ?,
                                                                                                                          f_Imsi2MobileIdentity(px_IMSI_Def), // @sic R5s170256 sic@
                                                                                                                          cr_TAI(v_NAS_Old_PlmnId, tsc_TAC1)ifpresent) , // @sic R5s170256 sic@
                                                                                         v_ESMMessage));
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 5");
    
    //@siclog "Step 6" siclog@
    //The SS transmits an RRCConnectionRelease-NB message including the IE "Extended Wait Time"
    f_NBIOT_RRC_ConnectionRelease_Common(nbiot_Cell12, CONTROL_PLANE, cs_RRCConnectionRelease_NB(tsc_RRC_TI_Def, -, -, 25));// @sic R5-174460 sic@
    
    //@siclog "Step 7" siclog@
    //The SS waits 25 seconds (T3346)
    v_T3346Val := f_NBIOT_SetTimerToleranceMin(nasTimer, int2float(25)) - (int2float(tsc_NBIOT_DelayAfterRRCConnectionRelease) / 1000.0); // @sic R5s170256, R5-174460 sic@
    f_Delay(v_T3346Val);
    
    //@siclog "Step 8" siclog@
    //Check: Does the UE transmit an RRCConnectionRequest-NB message?
    f_NBIOT_RRC_ConnectionRequest_Def(nbiot_Cell12, mo_Signalling);
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 8");
    
    //@siclog "Step 9" siclog@
    //SS transmits an RRCConnectionSetup-NB.
    f_NBIOT_RRC_ConnectionSetup_Def();
    
    //@siclog "Step 10" siclog@
    //EXCEPTION: Steps 10a1 and 10b1 describe behaviour that depends on UE capabilities;
    //the "lower case letter" identifies a step sequence that take place depending on whether the UE is configured to do Attach Without PDN or not.
    //IF px_DoAttachWithoutPDN THEN
    //Check: Does the UE transmit an RRCConnectionSetupComplete-NB message containing an ATTACH REQUEST message (indicating GUTI, last visited registered TAI and KSI as per the registration which happened in the preamble), and, an ESM DUMMY MESSAGE?
    //ELSE
    //Check: Does the UE transmit an RRCConnectionSetupComplete-NB message containing an ATTACH REQUEST message (indicating GUTI, last visited registered TAI and KSI as per the registration which happened in the preamble), and, a PDN CONNECTIVITY REQUEST?
    v_NasInd := f_NBIOT_RRCConnectionSetupComplete_Def(nbiot_Cell12,
                                                       cr_508_RRCConnectionSetupComplete_NB(-, -, -, ?),
                                                       cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected,
                                                                                         cdr_CIOT_ATTACH_REQUEST_WithGuti(cr_AdditionalUpdateType_CIOT,
                                                                                                                          ?,
                                                                                                                          f_Imsi2MobileIdentity(px_IMSI_Def), // @sic R5s170256 sic@
                                                                                                                          cr_TAI(v_NAS_Old_PlmnId, tsc_TAC1)ifpresent) , // @sic R5s170256 sic@
                                                                                         v_ESMMessage));
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 10");
    
    //@siclog "Step 11-20b1" siclog@
    //Steps 5-14b1 from the Generic procedure 'NB-IoT UE Attach, Connected mode (State 2-NB)' as described in TS 36.508 [18], clause 8.1.5.2 take place.
    f_NBIOT_InitialRegistration_Step5_14 (nbiot_Cell12, CONTROL_PLANE, STATE2_NB_CONNECTED_UPDATED, v_NasInd);
    
    //@siclog "Step 21" siclog@
    //The SS transmits an RRCConnectionRelease-NB message to release RRC connection and move to RRC_IDLE.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell12);
    
    //@siclog "Step 22" siclog@
    //SS sends a Paging message indicating IMSI as the UE identity.
    //NOTE: Upon reception of paging with IMSI the UE shall locally deactivate any EPS bearer context(s), locally detach from EPS and delete the GUTI. After local detach the UE shall perform an EPS attach procedure.
    f_NBIOT_UE_Page(nbiot_Cell12,
                    cs_NB_Paging_OneRecord(cs_PagingUE_Identity_IMSI(f_ConvertImsi2ASN(px_IMSI_Def))));
    
    //@siclog "Step 23a1" siclog@
    //EXCEPTION: Steps 23a1 describes a behaviour which depends on the UE capability
    //IF NOT pc_Automatic_EPS_Re_Attach, the user initiates an attach by MMI or by AT command.
    if(not pc_Automatic_EPS_Re_Attach){
      f_UT_TriggerAttach (UT);
    }
    
    f_NBIOT_TC_22_5_4_Step24_54(v_ESMMessage, v_Guti_Params, tsc_EmmCause_IllegalUe, v_NAS_PlmnId);
    
    //@siclog "Step 55-85" siclog@
    //Steps 24-54 are repeated with the only difference that the reject reason in the ATTACH REJECT message sent in step 44 is set to 'Illegal ME'.
    f_NBIOT_TC_22_5_4_Step24_54(v_ESMMessage, v_Guti_Params, tsc_EmmCause_IllegalMe, v_NAS_PlmnId);
    
    //@siclog "Step 86" siclog@
    //Check: Does the UE transmit an RRCConnectionRequest-NB message?
    f_NBIOT_RRC_ConnectionRequest_Def(nbiot_Cell12, mo_Signalling);
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 86");
    
    //@siclog "Step 87" siclog@
    //SS transmits an RRCConnectionSetup-NB.
    f_NBIOT_RRC_ConnectionSetup_Def();
    
    //@siclog "Step 88" siclog@
    //EXCEPTION: Steps 89a1 and 89b1 describe behaviour that depends on UE capabilities;
    //the "lower case letter" identifies a step sequence that take place depending on whether the UE is configured to do Attach Without PDN or not.
    //IF px_DoAttachWithoutPDN THEN
    //Check: Does the UE transmit an RRCConnectionSetupComplete-NB message containing an ATTACH REQUEST message (not indicating GUTI, last visited registered TAI and KSI as per the registration ), and, an ESM DUMMY MESSAGE?
    //ELSE
    //Check: Does the UE transmit an RRCConnectionSetupComplete-NB message containing an ATTACH REQUEST message (indicating GUTI, last visited registered TAI and KSI as per the registration ), and, a PDN CONNECTIVITY REQUEST?
    // receive RRC Connection Setup Complete with piggy-backed NAS message on SRB1 (DCCH):
    v_NasInd := f_NBIOT_RRCConnectionSetupComplete_Def(nbiot_Cell12,
                                                       cr_508_RRCConnectionSetupComplete_NB,  // @sic R5s170256 sic@
                                                       cr_NAS_IndicationWithPiggybacking(tsc_SHT_NoSecurityProtection,
                                                                                         cdr_CIOT_ATTACH_REQUEST_WithIMSINoTai(cr_AdditionalUpdateType_CIOT),
                                                                                         v_ESMMessage));
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 89");
    
    //@siclog "Step 90-99b1" siclog@
    //Steps 5-14b1 from the Generic procedure 'NB-IoT UE Attach, Connected mode (State 2-NB)' as described in TS 36.508 [18], clause 8.1.5.2 take place.
    f_NBIOT_InitialRegistration_Step5_14 (nbiot_Cell12, CONTROL_PLANE, STATE2_NB_CONNECTED_UPDATED, v_NasInd);
    
    //@siclog "Step 100" siclog@
    //The SS transmits an RRCConnectionRelease-NB message to release RRC connection and move to RRC_IDLE.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell12);
  }

  /*
   * @desc      REFERENCE TS 36.523-1 clause 22.5.5
   * @status    APPROVED (NBIOT)
   */
  function f_TC_22_5_5_NBIOT() runs on NBIOT_PTC
  { // NB-IoT / Attach Procedure / Success / List of equivalent PLMNs in the ATTACH ACCEPT message / Attach / Rejected / PLMN not allowed
    
    f_NBIOT_Init(c3, CONTROL_PLANE, LTE_CellsOnDifferentPLMN);
    
    // create cell and send out system information
    f_NBIOT_CellConfig_Def(nbiot_Cell50, CONTROL_PLANE);//PLMN1 HPLMN
    f_NBIOT_CellConfig_Def(nbiot_Cell55, CONTROL_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell59, CONTROL_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell60, CONTROL_PLANE);
    
    // Preamble: The UE is in State 1-NB "Switched OFF"
    // ==========================================================================
    f_NBIOT_Preamble(nbiot_Cell50, CONTROL_PLANE);
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell50, CONTROL_PLANE, RRC_CONNECTED);
    
    f_NBIOT_TestBody_Set(true);
    
    fl_TC_22_5_5_Body();
    
    // Postamble
    f_NBIOT_TestBody_Set(false);
    f_NBIOT_Postamble_N5Manual (nbiot_Cell59, nbiot_Cell50, CONTROL_PLANE);
  }

  /*
   * @desc      test body of TC_22_5_5
   * @status    APPROVED (NBIOT)
   */
  function fl_TC_22_5_5_Body() runs on NBIOT_PTC
  {
    var template (value) NB_CellPowerList_Type v_CellPowerList;
    var NAS_MSG_Indication_Type v_NAS_Ind;
    var template (present) NAS_UL_Message_Type v_ESMMessage;
    var template (present) B3_Type v_PDNTypeRxd := (f_GetPdnType(), '101'B);
    var GutiParameters_Type v_Guti_Params_Cell50 := f_NBIOT_CellInfo_GetGuti (nbiot_Cell50);
    var GutiParameters_Type v_Guti_Params_Cell55 := f_NBIOT_CellInfo_GetGuti (nbiot_Cell55);
    var GutiParameters_Type v_Guti_Params_Cell59 := f_NBIOT_CellInfo_GetGuti (nbiot_Cell59);
    var EUTRA_ASN1_TrackingAreaCode_Type v_TAC_Cell50 := f_NBIOT_CellInfo_GetTAC (nbiot_Cell50);
    var EUTRA_ASN1_TrackingAreaCode_Type v_TAC_Cell55 := f_NBIOT_CellInfo_GetTAC (nbiot_Cell55);
    var NAS_PlmnId v_PLMN_Cell50 := f_Asn2Nas_PlmnId (v_Guti_Params_Cell50.PLMN_Identity );
    var NAS_PlmnId v_PLMN_Cell55 := f_Asn2Nas_PlmnId (v_Guti_Params_Cell55.PLMN_Identity );
 
    //@siclog "Step 1" siclog@
    //The SS configures:
    //- Ncell 59 as the "Serving cell".
    //- Ncell 60 as a "Suitable Neighbour cell".
    //- Ncell 55 as a "Non-Suitable Off cell".
    //- Ncell 50 as a "Non-Suitable Off cell".
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell50, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell55, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell59, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell60, tsc_Suitable_NeighbourIntraFreq_CellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //The following messages are to be observed on Ncell 59 unless explicitly stated otherwise.
    //@siclog "Steps 2-5" siclog@
    f_NBIOT_AttachReject(nbiot_Cell59, tsc_Cause_PLMN_NotAllowed);
    
    //@siclog "Step 6" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST message on Ncell 59 or 60 in the next 30 seconds?
    f_NBIOT_CheckNoAttachOn2Cells(nbiot_Cell59, nbiot_Cell60, 30.0, "Step 6");
    
    //@siclog "Step 7" siclog@
    //If possible (see ICS) switch off is performed or the USIM is removed.
    //Otherwise the power is removed.
    f_UT_SwitchOffUE(UT, true);
    
    //@siclog "Step 8" siclog@
    //The UE is brought back to operation or the USIM is inserted.
    f_UT_SwitchOnUE(UT, true);
    
    //@siclog "Step 9" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST message in the next 90 seconds?
    f_NBIOT_CheckNoAttachOn2Cells(nbiot_Cell59, nbiot_Cell60, 90.0, "Step 9");

    //@siclog "Step 10" siclog@
    //The SS configures:
    //- Ncell 59 as the " Suitable neighbour intrafrequency cell"
    //- Ncell 60 as a "Non-Suitable Off cell"
    //- Ncell 55 as a "Serving cell".
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell55, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell59, tsc_Suitable_NeighbourIntraFreq_CellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell60, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    if (px_DoAttachWithoutPDN) {
      v_ESMMessage := cr_ESM_DUMMY_MESSAGE;
    } else {
      v_ESMMessage := cr_CIOT_PDN_CONNECTIVITY_REQUEST(tsc_PdnRequest_InitialAttach, v_PDNTypeRxd);
    }
    //@siclog "Step 11" siclog@
    //The following messages are to be observed on Ncell 55 unless explicitly stated otherwise.
    //@siclog "Step 12" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST message?
    v_NAS_Ind := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell55,
                                                cr_EstablishmentCause_NB_Any,
                                                cr_NAS_IndicationWithPiggybacking(tsc_SHT_NoSecurityProtection, // @sic R5s170511 sic@
                                                                                  cdr_CIOT_ATTACH_REQUEST_WithIMSINoTai(cr_AdditionalUpdateType_CIOT),// IMSI-1
                                                                                  v_ESMMessage));
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 12");
    
    //@siclog "Step 13-27" siclog@
    //The attach procedure is completed and the RRC connection is released by executing steps 5-14b1 of the UE registration procedure in TS 36.508 clause 8.1.5.2.3.
    f_NBIOT_InitialRegistration_Step5_14(nbiot_Cell55, CONTROL_PLANE, STATE2_NB_CONNECTED_UPDATED, v_NAS_Ind);
    
    //@siclog "Step 28-29" siclog@
    //If possible (see ICS) switch off is performed or the USIM is removed.
    //Otherwise the power is removed.
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell55, CONTROL_PLANE, RRC_CONNECTED);
    
    //@siclog "Step 30" siclog@
    //The SS configures:
    //- Ncell 50 as the "Serving cell".
    //- Ncell 55 as a "Non-Suitable cell".
    //- Ncell 59 as a "Non-Suitable cell".
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell50, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell55, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell59, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //The following messages are to be observed on Ncell 50 unless explicitly stated otherwise.
    //@siclog "Step 31" siclog@
    //The UE is switched on.
    f_UT_SwitchOnUE(UT, true);
    
    //@siclog "Step 32-49" siclog@
    //The following messages are to be observed on Ncell 50 unless explicitly stated otherwise.
    //Steps 2-14b1 of the generic procedure for UE registration specified in TS 36.508 subclause 8.1.5.2.3 are performed.
    v_NAS_Ind := f_NBIOT_InitialRegistration_Step2_4(nbiot_Cell50, CONTROL_PLANE, NORMAL);
    f_NBIOT_InitialRegistration_Step5_12(nbiot_Cell50, CONTROL_PLANE, STATE3_NB_IDLEUPDATED, v_NAS_Ind);
    
    f_NBIOT_InitialRegistration_Step13(nbiot_Cell50,
                                       CONTROL_PLANE,
                                       v_NAS_Ind,
                                       -,
                                       -,
                                       -,
                                       -,
                                       -,
                                       -,
                                       -,
                                       -,
                                       -,
                                       -,
                                       cs_PLMN_List_3PLMNs(tsc_PLMN2, tsc_PLMN3, tsc_PLMN4)); // @sic R5s170597 sic@
                                       
    f_NBIOT_InitialRegistration_Step14(nbiot_Cell50, CONTROL_PLANE, tsc_EpsDefaultBearerId);
    
    //@siclog "Step 50-51" siclog@
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell50, CONTROL_PLANE, RRC_CONNECTED);
    
    //@siclog "Step 52" siclog@
    //The SS configures:
    //- Ncell 50 as the "Non-Suitable cell".
    //- Ncell 55 as a "Non-Suitable cell ".
    //- Ncell 59 as a "Serving cell".
    //Note: Ncell 59 belongs to the forbidden PLMN.
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell50, tsc_NonSuitableCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell55, tsc_NonSuitableCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell59, tsc_ServingCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 53" siclog@
    //The UE is brought back to operation or the USIM is inserted.
    f_UT_SwitchOnUE(UT, true);
    
    //@siclog "Step 54" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST message in the next 60 seconds?
    f_NBIOT_CheckNoAttachOn1Cell(nbiot_Cell59, 60.0, "Step 54");
    
    //@siclog "Step 55" siclog@
    //The SS configures:
    //- Ncell 50 as the "Non-Suitable cell".
    //- Ncell 55 as a "Serving cell".
    //- Ncell 59 as a "Non-Suitable cell".
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell50, tsc_NonSuitableNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell55, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell59, tsc_NonSuitableNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //The following messages are to be observed on Ncell 55 unless explicitly stated otherwise.
    //@siclog "Step 56" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST message?
    v_NAS_Ind := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell55,
                                                cr_EstablishmentCause_NB_Any,
                                                cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected,
                                                                                  cr_CIOT_ATTACH_REQUEST(cr_AdditionalUpdateType_CIOT),
                                                                                  v_ESMMessage));
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 56");
    
    //EXCEPTION: Steps 57 to 71 describe behaviour that depends on UE configuration;
    //the "lower case letter" identifies a step sequence that take place if the UE has ESM information which needs to be transferred.
    //@siclog "Step 57-71" siclog@
    //Steps 5-14b1 of the generic procedure for UE registration specified in TS 36.508 subclause 8.1.5.2.3 are performed.
    f_NBIOT_InitialRegistration_Step5_14(nbiot_Cell55, CONTROL_PLANE, STATE2_NB_CONNECTED_UPDATED, v_NAS_Ind);//EquivalentPlmnList omit
    
    //@siclog "Step 72" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell55);
    
    //@siclog "Step 73" siclog@
    //The SS configures:
    //- Ncell 50 as a "Serving cell".
    //- Ncell 55 as a "Non-Suitable cell".
    //- Ncell 59 as a "Non-suitable "Off cell".
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell50, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell55, tsc_NonSuitableNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell59, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //The following messages are to be observed on Ncell 50 unless explicitly stated otherwise.
    //@siclog "Step 74" siclog@
    //Check: Does the UE transmit a TRACKING AREA UPDATE REQUEST message?
    v_NAS_Ind := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell50,
                                                cr_EstablishmentCause_NB_Any,
                                                cr_NAS_Indication(tsc_SHT_IntegrityProtected,
                                                                  cdr_TAU_Request_OldGuti(tsc_EpsUpdate_TaUpdate,
                                                                                          f_NBIOT_SecurityKSIasme_Get(),
                                                                                          cr_DRXparameter_Any ('5C'O) ifpresent,
                                                                                          cr_AdditionalUpdateType_CIOT ifpresent, // @sic R5-176872 sic@
                                                                                          f_GutiParameters2MobileIdentity(omit, v_Guti_Params_Cell55),
                                                                                          cr_TAI(v_PLMN_Cell55, bit2oct(v_TAC_Cell55)))));
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 74");
    
    //@siclog "Step 75" siclog@
    //SS responds with TRACKING AREA UPDATE ACCEPT message.
    SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell50,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   cs_NAS_Request(tsc_SHT_IntegrityProtected_Ciphered,
                                                  cs_TAU_Accept_Common(tsc_EpsUpdate_TaUpdate, // @sic R5s170769 sic@
                                                                       f_GutiParameters2MobileIdentity(tsc_IEI_Guti, v_Guti_Params_Cell50),
                                                                       cds_TAIListNonConsecutive_tlv (v_PLMN_Cell50, {tsc_TAC1}),
                                                                       v_NAS_Ind.Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.epsBearerContextStatus,//EPS bearer context status
                                                                       omit,//Lai
                                                                       omit,//MSId
                                                                       f_GetNBIOTAdditionalUpdateResult(v_NAS_Ind.Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.addUpdateType),
                                                                       -,
                                                                       -,
                                                                       -,
                                                                       f_GetNBIOTNetworkFeatureSupport(CONTROL_PLANE)))));
    
    //@siclog "Step 76" siclog@
    //The UE transmits a TRACKING AREA UPDATE COMPLETE message.
    SRB.receive(car_NB_SRB_NasPdu_IND(nbiot_Cell50,
                                      tsc_SRB1bis,
                                      cr_NAS_Indication(tsc_SHT_IntegrityProtected_Ciphered,
                                                        cr_508_TAU_Complete)));
    
    //@siclog "Step 77-78" siclog@
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell50, CONTROL_PLANE, RRC_CONNECTED);
    
    //@siclog "Step 79" siclog@
    //The SS configures:
    //- Ncell 59 as the "Serving cell"
    //- Ncell 55 as a "Non-suitable Off cell".
    //Note: Ncell 59 belongs to the forbidden PLMN.
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell50, tsc_NonSuitableOffNBIOTCellRS_EPRE), // @sic R5s170769 sic@
      cs_NB_CellPower(nbiot_Cell55, tsc_NonSuitableNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell59, tsc_ServingCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 80" siclog@
    //The UE is brought back to operation or the USIM is inserted.
    f_UT_SwitchOnUE(UT, true);
    
    //@siclog "Step 81" siclog@
    //The following messages are to be observed on Ncell 59 unless explicitly stated otherwise.
    //@siclog "Step 82" siclog@
    //The user sets the UE in manual PLMN selection mode or requests a PLMN search.
    //@siclog "Step 83" siclog@
    //The user selects PLMN of Ncell 59.
    f_UT_ManualPLMN_Select(UT, f_Asn2Nas_PlmnId(v_Guti_Params_Cell59.PLMN_Identity));
    
    //@siclog "Step 84" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST message including a message as specified?
    v_NAS_Ind := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell59,
                                                cr_EstablishmentCause_NB_Any,
                                                cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected,
                                                                                  cdr_CIOT_ATTACH_REQUEST_WithGuti(cr_AdditionalUpdateType_CIOT,
                                                                                                                   ?,
                                                                                                                   f_Imsi2MobileIdentity(px_IMSI_Def), // @sic R5s170511, R5-174075 sic@
                                                                                                                   cr_TAI(v_PLMN_Cell50, bit2oct(v_TAC_Cell50))),
                                                                                  v_ESMMessage));
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 84");
    
    //@siclog "Step 85-99" siclog@
    //The attach procedure is completed and the RRC connection is released by executing steps 5-14b1 of the UE registration procedure in TS 36.508 clause 8.1.5.2.3.
    f_NBIOT_InitialRegistration_Step5_14(nbiot_Cell59, CONTROL_PLANE, STATE2_NB_CONNECTED_UPDATED, v_NAS_Ind);
    
    //@siclog "Step 100" siclog@
    //The SS transmits an RRCConnectionRelease-NB message to release RRC connection and move to RRC_IDLE(State 3-NB).
    //The UE ends the test procedure sequence in NB-IoT manual selection (N5) state.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell59);
  }

  /*
   * @desc      REFERENCE TS 36.523-3 clause 22.5.6
   * @status    APPROVED (NBIOT)
   */
  function f_TC_22_5_6_NBIOT() runs on NBIOT_PTC
  { /* NB-IoT / Attach Abnormal cases / Unsuccessful attach or Repeated rejects for network failures /
       Change of cell into a new tracking area / EPS services not allowed / Failure due to non integrity protection /
       UE initiated detach USIM removed from the UE / Detach procedure collision */

    f_NBIOT_Init(c2, CONTROL_PLANE, LTE_AllCellsOnSamePLMN);
    
    // create cells and send out system information
    //Ncell 50 and Ncell 51 on same PLMN
    f_NBIOT_CellConfig_Def(nbiot_Cell50, CONTROL_PLANE);//PLMN1 HPLMN
    f_NBIOT_CellConfig_Def(nbiot_Cell51, CONTROL_PLANE);//PLMN1 HPLMN
    
    f_NBIOT_Preamble(nbiot_Cell50, CONTROL_PLANE);
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell50, CONTROL_PLANE, RRC_CONNECTED);
    
    f_NBIOT_TestBody_Set(true);
    
    // Now continue with the procedure
    fl_TC_22_5_6_Body();
    
    // Postamble
    f_NBIOT_TestBody_Set(false);
    f_NBIOT_Postamble(nbiot_Cell50, CONTROL_PLANE, N2_CONNECTED);
  }

  /*
   * @desc      test body of TC_22_5_6
   * @status    APPROVED (NBIOT)
   */
  function fl_TC_22_5_6_Body() runs on NBIOT_PTC
  {
    const NAS_CauseValue_Type tsc_EmmCause_MessageIncompatibleWithProtocolState := '01100101'B; // @sic R5s180246 sic@ //@sic R5-183208 sic@
    var template (value) NB_CellPowerList_Type v_CellPowerList;
    var NAS_MSG_Indication_Type v_NAS_Ind;
    var NasCount_Type v_NasCountUL;
    var template (present) NAS_UL_Message_Type v_AttachReq;
    var template (present) NAS_UL_Message_Type v_ESMMessage;
    var template (present) B3_Type v_PDNTypeRxd := (f_GetPdnType(), '101'B);
    var B3_Type v_PDNType;
    var GutiParameters_Type v_Guti_Params_Cell50 := f_NBIOT_CellInfo_GetGuti (nbiot_Cell50);
    var GutiParameters_Type v_Guti_Params_Cell51 := f_NBIOT_CellInfo_GetGuti (nbiot_Cell51);
    var float v_T3410plusT3411 := 265.0;
    //Following parameters are required for Steps 72 to 75
    var integer i;
    var SecurityHeaderType v_SecurityHeader;
    var boolean v_MacErr;
    var charstring v_StepNo;
    var template (omit) MobileIdentity v_Guti;
    //GUTI required for various attach accept messages
    var GutiParameters_Type v_Guti1_Params := f_CreateGutiParamsWithUpdatedSTmsi(v_Guti_Params_Cell50);
    var template (value) MobileIdentity v_Guti1 := f_GutiParameters2MobileIdentity(omit, v_Guti1_Params); //GUTI1
    var GutiParameters_Type v_Guti2_Params := f_CreateGutiParamsWithUpdatedSTmsi(v_Guti1_Params);
    var template (value) MobileIdentity v_Guti2 := f_GutiParameters2MobileIdentity(omit, v_Guti2_Params); //GUTI2
    var GutiParameters_Type v_Guti3_Params := f_CreateGutiParamsWithUpdatedSTmsi(v_Guti2_Params);
    var GutiParameters_Type v_Guti4_Params := f_CreateGutiParamsWithUpdatedSTmsi(v_Guti3_Params);
    var float v_T3402 := f_NBIOT_SetTimerToleranceMin(nasTimer, 720.0);
    
    timer t_AttachComplete := 3.0;

    
    //SS adjusts the cell power levels according to row T1 in table 22.5.6.3-1.
    v_CellPowerList := { // @sic R5-174464 sic@
      cs_NB_CellPower(nbiot_Cell50, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell51, tsc_NonSuitableNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 1" siclog@
    f_UT_SwitchOnUE(UT, true);
    
    fl_TC_22_5_6_ReceiveAttachREQ(nbiot_Cell50);
    //The UE should not perform an ATTACH for T3410+T3411 = 255+10 = 265s
    f_NBIOT_CheckNoAttachOn1Cell(nbiot_Cell50, f_NBIOT_SetTimerToleranceMin(nasTimer, v_T3410plusT3411), "Step 3a");
    f_NBIOT_SS_SRBs_DRBs_Reset (nbiot_Cell50, CONTROL_PLANE); // @sic R5s170770 sic@
    //@siclog "Step 4" siclog@
    fl_TC_22_5_6_ReceiveAttachREQ(nbiot_Cell50, "Step 3a-4");
    //@siclog "Step 5 - 6" siclog@
    f_NBIOT_RRC_ConnectionReleaseAndTestT3411 (nbiot_Cell50);
    //@siclog "Step 7-8" siclog@
    fl_TC_22_5_6_ReceiveAttachREQ(nbiot_Cell50, "Step 7", tsc_EmmCause_NetworkFailure);
    //@siclog "Step 9 - 10" siclog@
    f_NBIOT_RRC_ConnectionReleaseAndTestT3411 (nbiot_Cell50);
    //@siclog "Step 11- 12" siclog@
    fl_TC_22_5_6_ReceiveAttachREQ(nbiot_Cell50, "Step 11", tsc_Cause_Congestion); // @sic R5-176885 sic@
    //@siclog "Step 13 - 14" siclog@
    f_NBIOT_RRC_ConnectionReleaseAndTestT3411 (nbiot_Cell50);
    //@siclog "Step 15- 16" siclog@
    fl_TC_22_5_6_ReceiveAttachREQ(nbiot_Cell50, "Step 15", tsc_Cause_Congestion);
    //@siclog "Step 17" siclog@
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell50); // SS releases the RRC Connection
    //@siclog "Step 18" siclog@
    f_Delay(v_T3402);
    //@siclog "Step 19- 29b1" siclog@
    fl_TC_22_5_6_ReceiveAttachREQ(nbiot_Cell50, "Step 19");
    //@siclog "Step 30 -30Aa1" siclog@
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell50, CONTROL_PLANE, RRC_CONNECTED); // @sic R5-174464 sic@
    //@siclog "Step 30B" siclog@
    //SS adjusts the cell power levels according to row T2 in table 22.5.6.3-1.
    v_CellPowerList := { // @sic R5-174464 sic@
      cs_NB_CellPower(nbiot_Cell50, tsc_NonSuitableNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell51, tsc_ServingCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 31" siclog@
    f_UT_SwitchOnUE(UT, false);
    
    if (px_DoAttachWithoutPDN) {
      v_ESMMessage := cr_ESM_DUMMY_MESSAGE;
    } else {
      v_ESMMessage := cr_CIOT_PDN_CONNECTIVITY_REQUEST(tsc_PdnRequest_InitialAttach, v_PDNTypeRxd);
    }
    v_AttachReq := cr_CIOT_ATTACH_REQUEST(cr_AdditionalUpdateType_CIOT);
    
    //@siclog "Step 32" siclog@
    v_NAS_Ind := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell51,
                                                cr_EstablishmentCause_NB_Any,
                                                cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected,
                                                                                  v_AttachReq,
                                                                                  v_ESMMessage));
    //@siclog "Step 33" siclog@ // @sic R5-174464 sic@
    //@siclog "Step 34" siclog@ // @sic R5-174464 sic@
    //@siclog "Step 35" siclog@ // @sic R5-174464 sic@
    // @sic R5s170770 sic@
    
    //Steps 5-10a2 of the generic procedure for UE registration specified in TS 36.508 subclause 8.1.5.2 are performed.
    //@siclog "Step 36- 41a2" siclog@
    f_NBIOT_InitialRegistration_Step5_10a(nbiot_Cell51, CONTROL_PLANE, STATE3_NB_IDLEUPDATED, v_NAS_Ind);
    
    //@siclog "Step 42" siclog@
    //SS adjusts the cell power levels according to row T3 in table 22.5.6.3-1.
    v_CellPowerList := { // @sic R5-174464 sic@
      cs_NB_CellPower(nbiot_Cell50, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell51, tsc_ServingCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 43" siclog@
    f_NBIOT_StopULGrantTransmission(nbiot_Cell51);
    //This is to handle the Step 44 where the ATTACH ACCEPT should be Integrity protected and ciphered
    
    //@siclog "Step 44" siclog@
    fl_TC_22_5_6_AttachAccept(nbiot_Cell51,
                              v_NAS_Ind,
                              cs_TAIListNonConsecutive_lv(f_Asn2Nas_PlmnId (v_Guti_Params_Cell51.PLMN_Identity), {bit2oct(f_NBIOT_CellInfo_GetTAC (nbiot_Cell50))}), // @sic R5s170770 sic@
                              f_GutiParameters2MobileIdentity(tsc_IEI_Guti, v_Guti1_Params)); // @sic R5s170770 sic@
    
    f_Delay(0.5); // @sic R5s180246 sic@
    //@siclog "Step 45" siclog@
    //SS adjusts the cell power levels according to row T4 in table 22.5.6.3-1.
    v_CellPowerList := { // @sic R5-174464 sic@
      cs_NB_CellPower(nbiot_Cell50, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell51, tsc_NonSuitableNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    //@siclog "Step 46- 51" siclog@
    
    v_NAS_Ind := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell50, // @sic R5s170770 sic@
                                                cr_EstablishmentCause_NB_Any,
                                                cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected,
                                                                                  cdr_CIOT_ATTACH_REQUEST_WithGuti(cr_AdditionalUpdateType_CIOT,
                                                                                                                   ?, v_Guti1,
                                                                                                                   cr_TAI(f_Asn2Nas_PlmnId (v_Guti_Params_Cell51.PLMN_Identity),
                                                                                                                          bit2oct(f_NBIOT_CellInfo_GetTAC(nbiot_Cell51)))),
                                                                                  v_ESMMessage));
    
    f_NBIOT_PreliminaryPass (__FILE__, __LINE__, "Step 49");
    f_NBIOT_InitialRegistration_Step5_14(nbiot_Cell50, CONTROL_PLANE, STATE2_NB_CONNECTED_UPDATED, v_NAS_Ind); // @sic R5s170770 sic@
    //@siclog "Step 52 - 52Aa1" siclog@
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell50, CONTROL_PLANE, RRC_CONNECTED); // @sic R5-174464 sic@
    f_NBIOT_SS_SRBs_DRBs_Reset (nbiot_Cell51, CONTROL_PLANE); // @sic R5s170770 sic@
    //@siclog "Step 52B" siclog@
    //SS adjusts the cell power levels according to row T5 in table 22.5.6.3-1.
    v_CellPowerList := { // @sic R5-174464 sic@
      cs_NB_CellPower(nbiot_Cell50, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell51, tsc_SuitableCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 53" siclog@
    f_UT_SwitchOnUE(UT, true);
    //@siclog "Step 54 - 55" siclog@
    fl_TC_22_5_6_ReceiveAttachREQ(nbiot_Cell50, -, tsc_Cause_EPSServNotAllowed);
    //@siclog "Step 56" siclog@
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell50); // SS releases the RRC Connection
    
    //@siclog "Step 57" siclog@
    //SS adjusts the cell power levels according to row T6 in table 22.5.6.3-1.Note: Ncell 50 and Ncell 51 are in different TAIs ? same PLMN(PLMN1).
    v_CellPowerList := { // @sic R5-174464 sic@
      cs_NB_CellPower(nbiot_Cell50, tsc_SuitableCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell51, tsc_ServingCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 58" siclog@
    //The UE should not perform an ATTACH for 30 s
    f_NBIOT_CheckNoAttachOn1Cell(nbiot_Cell51, 30.0, "Step 58");
    //@siclog "Step 59" siclog@
    //The operator initiates an UE attach by MMI or by AT command.
    f_UT_TriggerAttach(UT);
    //@siclog "Step 60" siclog@
    //The UE should not perform an ATTACH for 30 s
    f_NBIOT_CheckNoAttachOn1Cell(nbiot_Cell51, 30.0, "Step 60");
    //@siclog "Step 61" siclog@
    f_UT_SwitchOffUE(UT, false);
    
    //@siclog "Step 61A" siclog@
    //SS adjusts the cell power levels according to row T7 in table 22.5.6.3-1.
    v_CellPowerList := { // @sic R5-174464 sic@
      cs_NB_CellPower(nbiot_Cell50, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell51, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 62" siclog@
    f_UT_SwitchOnUE(UT, true);
    //@siclog "Step 63" siclog@
    v_NAS_Ind := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell50,
                                                cr_EstablishmentCause_NB_Any,
                                                cr_NAS_IndicationWithPiggybacking(tsc_SHT_NoSecurityProtection, // @sic R5s170770 sic@ // @sic R5-177054 sic@
                                                                                  v_AttachReq,
                                                                                  v_ESMMessage));
    v_NasCountUL := v_NAS_Ind.SecurityProtection.NasCount;
    
    //@siclog "Step 64 - 65" siclog@
    // Steps 9a1-12 of the generic procedure for UE registration specified in TS 36.508 subclause 8.1.5.2.3 are performed.
    f_NBIOT_Capability(nbiot_Cell50, CONTROL_PLANE); // @sic R5s170770 sic@
    
    //@siclog "Step 66" siclog@
    fl_TC_22_5_6_AttachAccept(nbiot_Cell50,
                              v_NAS_Ind,
                              -,
                              v_Guti2,
                              tsc_SHT_NoSecurityProtection);
    t_AttachComplete.start;
    alt {
      [] SRB.receive(car_NB_SRB_NasPdu_IND(nbiot_Cell50,
                                           tsc_SRB1bis,
                                           cr_NAS_IndicationWithPiggybacking(?,
                                                                             cr_508_ATTACH_COMPLETE,
                                                                             ?)))
        {
          t_AttachComplete.stop;
          f_NBIOT_SetVerdictFailOrInconc(__FILE__, __LINE__, "Step 67 : Attach Complete received");
        }
      //@sic R5s180246 sic@
      //@sic R5-183208 sic@
      [] SRB.receive (car_NB_SRB_NasPdu_IND(nbiot_Cell50,
                                            tsc_SRB1bis,
                                            cr_NAS_Indication(tsc_SHT_NoSecurityProtection,
                                                            cr_508_EMMStatus(cr_EMM_Cause_v(tsc_EmmCause_MessageIncompatibleWithProtocolState)))))
        {
          t_AttachComplete.stop;
          
        }
      [] t_AttachComplete.timeout
        {
          f_NBIOT_PreliminaryPass (__FILE__, __LINE__, "Step 67");
        }
    }
    
    //@siclog "Step 68 - 71" siclog@
    v_NasCountUL := f_NBIOT_InitialRegistration_Step5_8(nbiot_Cell50, v_NAS_Ind);
    
    //@siclog "Step 72 - 75" siclog@
    for (i := 0; i < 2; i := i + 1) {
      if (i == 0) {
        v_StepNo := "Step 73";
        v_Guti := v_Guti2;
        v_SecurityHeader := tsc_SHT_NoSecurityProtection;
        v_MacErr := false;
      } else {
        v_StepNo :="Step 75";
        v_Guti := omit;
        v_SecurityHeader := tsc_SHT_IntegrityProtected_Ciphered;
        v_MacErr := true;
      }
      fl_TC_22_5_6_AttachAccept(nbiot_Cell50,
                                v_NAS_Ind,
                                -,
                                v_Guti,
                                v_SecurityHeader,
                                v_MacErr);
      t_AttachComplete.start;
      alt {
        [] SRB.receive(car_NB_SRB_NasPdu_IND(nbiot_Cell50,
                                             tsc_SRB1bis,
                                             cr_NAS_IndicationWithPiggybacking(?,
                                                                               cr_508_ATTACH_COMPLETE,
                                                                               ?)))
          {
            t_AttachComplete.stop;
            f_NBIOT_SetVerdictFailOrInconc(__FILE__, __LINE__, v_StepNo);
          }
        [] t_AttachComplete.timeout
          {
            f_NBIOT_PreliminaryPass (__FILE__, __LINE__, v_StepNo);
          }
      }
    }

    //@siclog "Step 76" siclog@
    fl_TC_22_5_6_AttachAccept(nbiot_Cell50,
                              v_NAS_Ind,
                              -,
                              f_GutiParameters2MobileIdentity(tsc_IEI_Guti, v_Guti4_Params)); // @sic R5s170770 sic@
    if (px_DoAttachWithoutPDN) {
      v_ESMMessage := cr_ESM_DUMMY_MESSAGE;
    }
    else {
      v_ESMMessage := cdr_CIOT_ActivateDefEpsBearerContextAccept(tsc_EpsDefaultBearerId);
    }
    SRB.receive(car_NB_SRB_NasPdu_IND(nbiot_Cell50,
                                      tsc_SRB1bis,
                                      cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected_Ciphered, cr_508_ATTACH_COMPLETE, v_ESMMessage)));
    f_NBIOT_PreliminaryPass (__FILE__, __LINE__, "Step 77");
    
    if (not px_DoAttachWithoutPDN){ //@sic R5s180246 sic@
        f_NBIOT_DelayForUserPlaneSignalling_CP(nbiot_Cell50);
    }
    //@siclog "Step 77a" siclog@
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell50); // SS releases the RRC Connection // @sic R5-174464 sic@
    //@siclog "Step 78" siclog@
    //Check: Does the test results of test procedure in 36.508 clause 8.1.5A.2 indicate that the UE is in E-UTRA EMM-REGISTERED state with S-TMSI-2?
    
    f_NBIOT_508Check_CP_ResponseToPagingForMTAccess(nbiot_Cell50,cs_NB_Paging_OneRecord(cs_PagingUE_Identity_S_TMSI(v_Guti4_Params.MME_Code, v_Guti4_Params.M_TMSI))); // @sic R5s170770 sic@
    f_NBIOT_CellInfo_SetGuti(nbiot_Cell50, v_Guti4_Params); // @sic R5s170770 sic@
    //@siclog "Step 79" siclog@  // @sic R5-174464 sic@
    //@siclog "Step 80-81a" siclog@
    if (pc_USIM_Removal) {
      //@siclog "Step 80a1" siclog@ // @sic R5-174464 sic@
      f_UT_USIM_Remove(UT, NO_CNF_REQUIRED); // @sic R5s180172 sic@
      //The UE will set the SwitchOFF bit to 0 in case of a Normal Detach which happens on USIM removal
      //@siclog "Step 81" siclog@
      f_NBIOT_UE_DetachMO(nbiot_Cell50, RRC_CONNECTED, cr_DetachType('?'B, tsc_DetachMO_EpsOnly)); // @sic R5s180638 sic@
      // @sic R5s180057 sic@
      //@siclog "Step 81Aa1" siclog@ // @sic R5-174464 sic@
      SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell50,
                                     tsc_SRB1bis,
                                     cs_TimingInfo_Now,
                                     cs_NAS_Request(tsc_SHT_IntegrityProtected_Ciphered,
                                                    cs_508_DETACH_ACCEPT)));
      f_NBIOT_RRC_ConnectionRelease(nbiot_Cell50); // @sic R5-177054 sic@
      //@siclog "Step 82a1" siclog@ // @sic R5-174464 sic@
      f_NBIOT_UE_Page_NoReaction(nbiot_Cell50,// @sic R5s180057 sic@
                                 cs_NB_Paging_OneRecord(cs_PagingUE_Identity_S_TMSI(v_Guti1_Params.MME_Code, v_Guti1_Params.M_TMSI)),
                                 30.0);
      //@siclog "Step 83a1" siclog@ // @sic R5-174464 sic@
      f_UT_USIM_Insert (UT, omit);
    }
    else {
      //@siclog "Step 80b1" siclog@ // @sic R5-174464 sic@
      f_UT_SwitchOffUE(UT, true);
      //@siclog "Step 81" siclog@
      f_NBIOT_UE_DetachMO(nbiot_Cell50, RRC_CONNECTED, cr_DetachType('?'B, tsc_DetachMO_EpsOnly)); // @sic R5s180638 sic@
      f_NBIOT_SS_SRBs_DRBs_Reset (nbiot_Cell50, CONTROL_PLANE, delay500ms); // @sic R5s180057 sic@ // @sic R5s180453 sic@
      //Step 82 not required here since the UE is switched Off and wont respond to Paging anyway !!
      //@siclog "Step 83b1" siclog@ // @sic R5-174464 sic@
      f_UT_SwitchOnUE(UT, true);
    }
    //@siclog "Step 84" siclog@ // @sic R5-174464 sic@
    //@siclog "Step 85" siclog@
    fl_TC_22_5_6_ReceiveAttachREQ(nbiot_Cell50);
    
    //@siclog "Step 86" siclog@
    //The SS initiates Detach procedure with the Detach Type IE "re-attach not required".
    SRB.send(cas_NB_SRB1bis_NasPdu_REQ(nbiot_Cell50,
                                       cs_TimingInfo_Now,
                                       cs_NAS_Request(tsc_SHT_IntegrityProtected_Ciphered,
                                                      cs_508_DETACH_REQUEST_MT(cs_DetachType(tsc_DetachMT_NoReAttach), cs_EMM_Cause_tv(tsc_Cause_EPSServNotAllowed))))); // @sic R5s170770 sic@
    //@siclog "Step 87" siclog@
    //Check: Does the UE send DETACH ACCEPT message?
    SRB.receive(car_NB_SRB1bis_NasPdu_IND(nbiot_Cell50,
                                          cr_NAS_Indication(tsc_SHT_IntegrityProtected_Ciphered,
                                                            cr_508_DETACH_ACCEPT)));
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 87");
    
    //@siclog "Step 88" siclog@
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell50);
    //@siclog "Step 88a" siclog@
    f_Delay(5.0); // @sic R5-174464 sic@
    
    //@siclog "Step 89" siclog@ // @sic R5-174464 sic@
    if (pc_USIM_Removal) {
      f_UT_USIM_Remove(UT);
    } else {
      f_UT_SwitchOffUE(UT, true);
    }
    //@siclog "Step 89A" siclog@ // @sic R5-174464 sic@
    if (pc_USIM_Removal) {
      f_UT_USIM_Insert (UT, omit);
    } else {
      f_UT_SwitchOnUE(UT, true);
    }
    //@siclog "Step 90" siclog@ // @sic R5-174464 sic@
    v_NAS_Ind := f_NBIOT_InitialRegistration_Step2_4(nbiot_Cell50, CONTROL_PLANE, PREAMBLE); // @sic R5s170770 sic@
    //@siclog "Step 91 - 96a2" siclog@
    f_NBIOT_InitialRegistration_Step5_10a(nbiot_Cell50, CONTROL_PLANE, STATE3_NB_IDLEUPDATED, v_NAS_Ind);
    //@siclog "Step 97" siclog@
    SRB.send(cas_NB_SRB1bis_NasPdu_REQ(nbiot_Cell50,
                                       cs_TimingInfo_Now,
                                       cs_NAS_Request(tsc_SHT_IntegrityProtected_Ciphered,
                                                      cs_508_DETACH_REQUEST_MT(cs_DetachType(tsc_DetachMT_ReAttach), omit))));
    
    //@siclog "Step 98" siclog@
    fl_TC_22_5_6_AttachAccept(nbiot_Cell50,
                              v_NAS_Ind,
                              -,
                              f_GutiParameters2MobileIdentity(tsc_IEI_Guti, v_Guti1_Params )); // @sic R5s170770 sic@
    
    if (not px_DoAttachWithoutPDN) { // @sic R5s170933 sic@
    v_PDNType := v_NAS_Ind.Pdu.PiggybackedPduList[0].Msg.pDN_CONNECTIVITY_REQUEST.pdnType.typeValue;
    }

    f_NBIOT_CellInfo_SetGuti(nbiot_Cell50, v_Guti1_Params); // @sic R5s170770 sic@
    //In parallel with steps 98 to 99, the parallel behaviour defined in table 22.5.6.3.2-2 is running
    alt
      { //parallel behaviour
        // UE transmits a DETACH ACCEPT
        //@siclog "Step 99" siclog@
        []SRB.receive(car_NB_SRB1bis_NasPdu_IND(nbiot_Cell50,
                                          cr_NAS_Indication(tsc_SHT_IntegrityProtected_Ciphered,
                                                            cr_508_DETACH_ACCEPT)))
          {
            f_NBIOT_SetVerdictFailOrInconc(__FILE__, __LINE__, "Step 99 : Parallel behaviour, Detach Accept received");
          }
        
        // The UE transmits an ATTACH COMPLETE message
        // including an ACTIVATE DEFAULT EPS BEARER CONTEXT ACCEPT message
        //@siclog "Step 99" siclog@
        [not px_DoAttachWithoutPDN] SRB.receive(car_NB_SRB_NasPdu_IND(nbiot_Cell50, // @sic R5s170933 sic@
                                            tsc_SRB1bis,
                                            cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected_Ciphered,
                                                                              cr_508_ATTACH_COMPLETE,
                                                                              cdr_CIOT_ActivateDefEpsBearerContextAccept(tsc_EpsDefaultBearerId))))
          {
            f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 99");
            if (not px_DoAttachWithoutPDN and match(v_PDNType, ('010'B, '011'B, '100'B))) {
              f_NBIOT_DelayForUserPlaneSignalling_CP(nbiot_Cell50);
            }
          }

        [px_DoAttachWithoutPDN] SRB.receive(car_NB_SRB_NasPdu_IND(nbiot_Cell50, // @sic R5s170933 sic@
                                        tsc_SRB1bis,
                                        cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected_Ciphered,
                                                                          cr_508_ATTACH_COMPLETE,
                                                                          cr_ESM_DUMMY_MESSAGE)))
          {
            f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 99");
          }

      }
  }

  /*
   * @desc      REFERENCE TS 36.523-1 clause 22.5.13
   * @status    APPROVED (NBIOT)
   */
  function f_TC_22_5_13_NBIOT() runs on NBIOT_PTC
  { // @sic R5s170682 sic@
    // NB-IoT / Attach Procedure / Success / Last visited TAI, TAI list and equivalent PLMN list handling
    const EUTRA_ASN1_TrackingAreaCode_Type tsc_Idle_TAC_Cell1  := int2bit (1, 16);
    const EUTRA_ASN1_TrackingAreaCode_Type tsc_Idle_TAC_Cell27  := int2bit (39, 16);
    const EUTRA_ASN1_TrackingAreaCode_Type tsc_Idle_TAC_Cellfff0  := int2bit (65520, 16);
    const EUTRA_ASN1_TrackingAreaCode_Type tsc_Idle_TAC_Cellfff9  := int2bit (65529, 16);
    var NB_OperationMode_Type v_OperationMode := px_NB_OperationMode;
    
    template (value) GutiParameters_Type.PLMN_Identity cs_HPLMN_310_102 := { mcc := {3,1,0},  mnc := {1,0,2} };
    template (value) GutiParameters_Type.PLMN_Identity cs_HPLMN_004_07  := { mcc := {0,0,4},  mnc := {0,7} };
    template (value) GutiParameters_Type.PLMN_Identity cs_HPLMN_316_002 := { mcc := {3,1,6},  mnc := {0,0,2} };
    template (value) GutiParameters_Type.PLMN_Identity cs_HPLMN_004_02  := { mcc := {0,0,4},  mnc := {0,2} };
    
    f_NBIOT_Init(c3, CONTROL_PLANE, LTE_CellsOnDifferentPLMN); // @sic R5-173870 sic@
    
    //Set Sys info and cell info for Ncells
    f_NBIOT_CellInfo_SetPLMN_1Entry(nbiot_Cell50, cs_HPLMN_Def);
    f_NBIOT_CellInfo_SetPLMN_1Entry(nbiot_Cell57, cs_HPLMN_310_102);
    f_NBIOT_CellInfo_SetPLMN_1Entry(nbiot_Cell51, cs_HPLMN_Def);
    f_NBIOT_CellInfo_SetPLMN_1Entry(nbiot_Cell52, cs_HPLMN_Def);
    f_NBIOT_CellInfo_SetPLMN_1Entry(nbiot_Cell55, cs_HPLMN_004_07);
    f_NBIOT_CellInfo_SetPLMN_1Entry(nbiot_Cell56, cs_HPLMN_004_07);
    f_NBIOT_CellInfo_SetPLMN_1Entry(nbiot_Cell59, cs_HPLMN_316_002);
    f_NBIOT_CellInfo_SetPLMN_1Entry(nbiot_Cell54, cs_HPLMN_004_02);
    
    //Set TAC for Ncells
    f_NBIOT_CellInfo_SetTAC(nbiot_Cell50, tsc_Idle_TAC_Cell2);
    f_NBIOT_CellInfo_SetTAC(nbiot_Cell57, tsc_Idle_TAC_Cell2);
    f_NBIOT_CellInfo_SetTAC(nbiot_Cell51, tsc_Idle_TAC_Cell1);
    f_NBIOT_CellInfo_SetTAC(nbiot_Cell52, tsc_Idle_TAC_Cell27);
    f_NBIOT_CellInfo_SetTAC(nbiot_Cell55, tsc_Idle_TAC_Cellfff0);
    f_NBIOT_CellInfo_SetTAC(nbiot_Cell56, tsc_Idle_TAC_Cellfff9);
    f_NBIOT_CellInfo_SetTAC(nbiot_Cell59, tsc_Idle_TAC_Cell3);
    f_NBIOT_CellInfo_SetTAC(nbiot_Cell54, tsc_Idle_TAC_Cell3);

    // The SIB5 for every cell is specific for this test case
    // @sic R5s180571 sic@
    f_NBIOT_ChangeSIB5_Combination3(nbiot_Cell50, fl_InitSIB5Info_22513(nbiot_Cell50, v_OperationMode), -, LTE_CellsOnDifferentPLMN);
    f_NBIOT_ChangeSIB5_Combination3(nbiot_Cell57, fl_InitSIB5Info_22513(nbiot_Cell57, v_OperationMode), -, LTE_CellsOnDifferentPLMN);
    f_NBIOT_ChangeSIB5_Combination3(nbiot_Cell51, fl_InitSIB5Info_22513(nbiot_Cell51, v_OperationMode), -, LTE_CellsOnDifferentPLMN);
    f_NBIOT_ChangeSIB5_Combination3(nbiot_Cell52, fl_InitSIB5Info_22513(nbiot_Cell52, v_OperationMode), -, LTE_CellsOnDifferentPLMN);
    f_NBIOT_ChangeSIB5_Combination3(nbiot_Cell55, fl_InitSIB5Info_22513(nbiot_Cell55, v_OperationMode), -, LTE_CellsOnDifferentPLMN);
    f_NBIOT_ChangeSIB5_Combination3(nbiot_Cell56, fl_InitSIB5Info_22513(nbiot_Cell56, v_OperationMode), -, LTE_CellsOnDifferentPLMN);
    f_NBIOT_ChangeSIB5_Combination3(nbiot_Cell59, fl_InitSIB5Info_22513(nbiot_Cell59, v_OperationMode), -, LTE_CellsOnDifferentPLMN);
    f_NBIOT_ChangeSIB5_Combination3(nbiot_Cell54, fl_InitSIB5Info_22513(nbiot_Cell54, v_OperationMode), -, LTE_CellsOnDifferentPLMN);
    
    // create cell and send out system information
    f_NBIOT_CellConfig_Def(nbiot_Cell50, CONTROL_PLANE);//PLMN1 HPLMN
    f_NBIOT_CellConfig_Def(nbiot_Cell57, CONTROL_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell51, CONTROL_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell52, CONTROL_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell55, CONTROL_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell56, CONTROL_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell59, CONTROL_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell54, CONTROL_PLANE);
    
    // Preamble: the UE is in state Switched OFF (State 1-NB) according to TS 36.508
    // ==========================================================================
    f_NBIOT_Preamble(nbiot_Cell50, CONTROL_PLANE);
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell50, CONTROL_PLANE, RRC_CONNECTED);

    f_NBIOT_TestBody_Set(true);
       
    fl_TC_22_5_13_Body();
    
    // Postamble
    f_NBIOT_TestBody_Set(false);
    f_NBIOT_Postamble(nbiot_Cell50, CONTROL_PLANE, N2_CONNECTED);
  }

  /*
   * @desc      test body of TC_22_5_13
   * @status    APPROVED (NBIOT)
   */
  function fl_TC_22_5_13_Body() runs on NBIOT_PTC
  { // @sic R5s170682 sic@
    // ==========================================================================
    // initialize constant test case data structures
    // ==========================================================================
    const NBIOT_CellId_Type const_NCellsSteps29_31[6]  := {nbiot_Cell51, nbiot_Cell52, nbiot_Cell55, nbiot_Cell56, nbiot_Cell59, nbiot_Cell54};
    var template (value) NB_CellPowerList_Type v_CellPowerList;
    var NAS_MSG_Indication_Type v_NAS_Ind;
    var NBIOT_SecurityParams_Type v_Auth_Params;
    var NasCount_Type v_NasCountUL;
    var template (present) NAS_UL_Message_Type v_ESMMessage;
    var template (present) B3_Type v_PDNType := (f_GetPdnType(), '101'B);
    var GutiParameters_Type v_Guti_Params_Cell50 := f_NBIOT_CellInfo_GetGuti (nbiot_Cell50);
    var GutiParameters_Type v_Guti_Params_Cell57 := f_NBIOT_CellInfo_GetGuti (nbiot_Cell57);
    var GutiParameters_Type v_Guti_Params_Cell54 := f_NBIOT_CellInfo_GetGuti (nbiot_Cell54);
    var EUTRA_ASN1_TrackingAreaCode_Type v_TAC_Cell54 := f_NBIOT_CellInfo_GetTAC (nbiot_Cell54);
    var EUTRA_ASN1_TrackingAreaCode_Type v_TAC_Cell57 := f_NBIOT_CellInfo_GetTAC (nbiot_Cell57);
    var NAS_PlmnId v_PLMN_Cell50 := f_Asn2Nas_PlmnId (v_Guti_Params_Cell50.PLMN_Identity );
    var NAS_PlmnId v_PLMN_Cell57 := f_Asn2Nas_PlmnId (v_Guti_Params_Cell57.PLMN_Identity );
    var NAS_PlmnId v_PLMN_Cell54 := f_Asn2Nas_PlmnId (v_Guti_Params_Cell54.PLMN_Identity );
    
    var NAS_Tac v_TAC27  := '0027'O;
    var NAS_Tac v_TAC_FFF0  := 'FFF0'O;
    var GutiParameters_Type.PLMN_Identity v_HPLMN_005_002 := { mcc := {0,0,5},  mnc :={0,0,2} };
    var GutiParameters_Type.PLMN_Identity v_HPLMN_004_02 := { mcc := {0,0,4},  mnc :={0,2} };
    var GutiParameters_Type.PLMN_Identity v_HPLMN_004_03 := { mcc := {0,0,4},  mnc :={0,3} };
    var GutiParameters_Type.PLMN_Identity v_HPLMN_001_01 := { mcc := {0,0,1},  mnc :={0,1} };
    var GutiParameters_Type.PLMN_Identity v_HPLMN_004_07 := { mcc := {0,0,4},  mnc :={0,7} };
    var GutiParameters_Type.PLMN_Identity v_HPLMN_316_002 := { mcc := {3,1,6},  mnc :={0,0,2} };
    var GutiParameters_Type.PLMN_Identity v_HPLMN_310_102 := { mcc := {3,1,0},  mnc :={1,0,2} };
    
    var integer i;
    var float v_TimerValue := f_NBIOT_SetTimerToleranceMax(nasTTCNTimer, 120.0); //@sic R5s170965 sic@
    var NAS_KsiValue v_KSIasme;
    
    var template (value) PlmnAndTacs v_PlmnAndTacs;
    var template (value) PartialTai v_PartialTai10Elems_Step26 := cs_PartialTAI(f_Asn2Nas_PlmnId(v_HPLMN_004_07), v_TAC_FFF0);
    var template (value) PLMN_List v_FourEquivalentPLMN := cs_PLMN_List_4PLMNs(f_Asn2Nas_PlmnId(v_HPLMN_004_02),
                                                                               f_Asn2Nas_PlmnId(v_HPLMN_004_03),
                                                                               f_Asn2Nas_PlmnId(v_HPLMN_004_07),
                                                                               f_Asn2Nas_PlmnId(v_HPLMN_316_002));
    
    //Table 22.5.13.3.3-1
    var template (value) MobileIdentity v_Guti_Step13 := f_GutiParameters2MobileIdentity(tsc_IEI_Guti, valueof(cs_Guti(cs_HPLMN_Def, 1, 1)));// valueof remains for the moment
    // Table 22.5.13.3.3-3
    var template (value) MobileIdentity v_Guti_Step26 := f_GutiParameters2MobileIdentity(tsc_IEI_Guti, valueof(cs_Guti(cs_HPLMN_Def, 64000, 127)));
    var template (value) MobileIdentity v_Guti_Step22 := f_GutiParameters2MobileIdentity(omit, valueof(cs_Guti(cs_HPLMN_Def, 1, 1)));
    
    var GutiParameters_Type v_Guti_Params_Step26 := valueof(cs_Guti(cs_HPLMN_Def, 64000, 127));
    timer t_Wait;

    // The following messages are to be observed on Ncell 50 unless explicitly stated otherwise.
    
    //@siclog "Step 1" siclog@
    // Steps 1-14b1 of the generic procedure for UE registration specified in TS 36.508 subclause 8.1.5.2.3 are performed
    f_UT_SwitchOnUE(UT, true); //Step1 - Switch on the UE
    v_NAS_Ind := f_NBIOT_InitialRegistration_Step2_4(nbiot_Cell50, CONTROL_PLANE, NORMAL);
    f_NBIOT_InitialRegistration_Step5_12(nbiot_Cell50, CONTROL_PLANE, STATE3_NB_IDLEUPDATED, v_NAS_Ind);
    v_Auth_Params := f_NBIOT_Security_Get();
    v_KSIasme := v_Auth_Params.KSIasme; // Saved Authentication parameters ongoing for further steps
    
    v_PlmnAndTacs :=  { // Values as per Table 22.5.13.3.3-1
      cs_PartialTAI(f_Asn2Nas_PlmnId(v_HPLMN_310_102), tsc_TAC2), // @sic R5s170965 sic@
      cs_PartialTAI(f_Asn2Nas_PlmnId(v_HPLMN_001_01),  tsc_TAC2)
    };
    f_NBIOT_InitialRegistration_Step13(nbiot_Cell50,
                                       CONTROL_PLANE,
                                       v_NAS_Ind,
                                       -,
                                       cs_TAIListMultiplePlmns2(cs_MultiplePlmnsList(v_PlmnAndTacs)),
                                       v_Guti_Step13,
                                       -,
                                       -,
                                       -,
                                       -,
                                       -,
                                       -,
                                       -,
                                       cs_PLMN_List_1PLMN(v_PLMN_Cell57)); // @sic R5s170597 sic@
    
    f_NBIOT_InitialRegistration_Step14(nbiot_Cell50, CONTROL_PLANE, tsc_EpsDefaultBearerId); // @sic R5s170597 sic@
    
    //@siclog "Steps 15" siclog@
    // The SS transmits an RRCConnectionRelease-NB message
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell50);
    
    //@siclog "Step 16" siclog@
    // SS adjusts the cell power levels according to row T1 in table 22.5.13-2.
    // Note: Ncell 50 is still suitable but the UE shall select Ncell 57
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell50, tsc_SuitableCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell57, tsc_ServingCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    // The following messages are to be observed on Ncell 57 unless explicitly stated otherwise.
    
    //@siclog "Step 17" siclog@
    // Wait 120 seconds for mobile to camp on Ncell 57
    t_Wait.start(120.0); // @sic R5s170965 sic@
    alt {
      [] SRB.check(receive(car_NB_SRB0_RrcPdu_IND(?, cr_RRCConnectionRequest_NB(cr_EstablishmentCause_NB_Any, ?))))
         {
          //* @verdict pass RRCConnectionRequest-NB message received within t_ResponseTimer
          f_NBIOT_SetVerdictFailOrInconc (__FILE__, __LINE__, "Step 17");
          t_Wait.stop;
         }
       [] t_Wait. timeout
       {
         f_NBIOT_PreliminaryPass (__FILE__, __LINE__, "Step 17");
       }
    }

    
    // Set new guti to ncell57 info
    f_NBIOT_CellInfo_SetGuti(nbiot_Cell57, cs_Guti(cs_HPLMN_Def, 1, 1));
    
    //@siclog "Step 18" siclog@
    //If possible (see ICS) switch off is performed or the USIM is removed. Otherwise the power is removed.
    // EXCEPTION: Step 19 describe behaviour that depends on the UE capability.
    //@siclog "Step 19" siclog@
    // If pc_SwitchOnOff or pc_USIM_Removal (see step 18) then the UE sends DETACH REQUEST message.
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell57, CONTROL_PLANE, RRC_IDLE);
    
    //@siclog "Step 20" siclog@
    // SS adjusts the cell power levels according to row T2 in table 22.5.13-2
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell57, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell50, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell51, tsc_ServingCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    // The following messages are to be observed on Ncell 51 unless explicitly stated otherwise.
    
    //@siclog "Step 21" siclog@
    //The UE is brought back to operation or the USIM is inserted.
    f_UT_SwitchOnUE(UT, true);
    
    //@siclog "Step 22" siclog@
    // Check: Does the UE send an integrity protected ATTACH REQUEST message (IF px_DoAttachWithoutPDN THEN the ESM DUMMY MESSAGE is piggybacked in ATTACH REQUEST,
    // OTHERWISE the PDN CONNECTIVITY REQUEST message is piggybacked in ATTACH REQUEST) with the last visited TAI correctly indicating the TAI of Ncell 57; the GUTI
    // allocated in step 13 and the KSIASME allocated in step 5?
    if (px_DoAttachWithoutPDN) {
      v_ESMMessage := cr_ESM_DUMMY_MESSAGE;
    } else {
      v_ESMMessage := cr_CIOT_PDN_CONNECTIVITY_REQUEST(tsc_PdnRequest_InitialAttach, v_PDNType);
    }
    v_NAS_Ind := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell51,
                                                cr_EstablishmentCause_NB_Any,
                                                cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected,
                                                                                  cdr_CIOT_ATTACH_REQUEST_WithGuti(cr_AdditionalUpdateType_CIOT, // @sic R5s170777 sic@
                                                                                                                             v_KSIasme,
                                                                                                                             v_Guti_Step22,
                                                                                                                             cr_TAI(v_PLMN_Cell57, bit2oct(v_TAC_Cell57))),
                                                                                  v_ESMMessage));
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 22");
    v_NasCountUL := v_NAS_Ind.SecurityProtection.NasCount;
    
    //@siclog "Step 22a1-25" siclog@
    // Steps 9a1-12 of the generic procedure for UE registration specified in TS 36.508 subclause 8.1.5.2.3 are performed.
    f_NBIOT_InitialRegistration_Step9_12(nbiot_Cell51, CONTROL_PLANE, STATE2_NB_CONNECTED_UPDATED, v_NAS_Ind, v_NasCountUL);
    
    //@siclog "Step 26" siclog@
    // The SS sends an ATTACH ACCEPT message allocating 16 TAIs and an aligned set of equivalent PLMNs.
    // IF px_DoAttachWithoutPDN THEN the ESM DUMMY MESSAGE is piggybacked in ATTACH ACCEPT OTHERWISE the ACTIVATE DEFAULT EPS BEARER CONTEXT REQUEST message is
    // piggybacked in ATTACH ACCEPT.
    v_PlmnAndTacs :=  {
      cs_PartialTAI(f_Asn2Nas_PlmnId(v_HPLMN_004_02), tsc_TAC3),
      cs_PartialTAI(f_Asn2Nas_PlmnId(v_HPLMN_005_002), tsc_TAC3),
      cs_PartialTAI(f_Asn2Nas_PlmnId(v_HPLMN_316_002), tsc_TAC3)
    };
    
    f_NBIOT_InitialRegistration_Step13(nbiot_Cell51,
                                       CONTROL_PLANE,
                                       v_NAS_Ind,
                                       -,
                                       cs_TAIListMultiplePlmns3(cs_MultiplePlmnsList(v_PlmnAndTacs),
                                                                10,
                                                                v_PartialTai10Elems_Step26,
                                                                f_Asn2Nas_PlmnId(v_HPLMN_001_01),
                                                                {tsc_TAC1, tsc_TAC5, v_TAC27} ),
                                       v_Guti_Step26,
                                       -,
                                       -,
                                       -,
                                       -,
                                       -,
                                       -,
                                       -,
                                       v_FourEquivalentPLMN); // @sic R5s170597 sic@
    
    // EXCEPTION: In parallel to the event described in step 27 below the generic procedure for IP address allocation in the Control Plane specified in TS 36.508
    // subclause 8.1.5A.1 takes place performing IP address allocation in the Control Plane if requested by the UE.
    
    //@siclog "Step 27" siclog@
    // Steps 14a1-14b1 of the generic procedure for UE registration specified in TS 36.508 subclause 8.1.5.2.3 are performed
    f_NBIOT_InitialRegistration_Step14(nbiot_Cell51, CONTROL_PLANE, tsc_EpsDefaultBearerId);
    
    //@siclog "Step 27A" siclog@
    // The SS transmits an RRCConnectionRelease-NB message - @sic R5-176880 sic@
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell51);

    //@siclog "Step 28" siclog@
    // The SS waits 5seconds
    f_Delay(f_NBIOT_SetTimerToleranceMax(nonProtocolTimer, 5.0));
    
    // EXCEPTION steps 29 to 32 are repeated for N = 3 to N = 7 with Ncells 52, 55, 56, 59, 54 according to T3 in table 22.5.13-2
    //@siclog "Step 29" siclog@
    // Cell power levels are set according to T3 and the value of N
    v_CellPowerList := {
      cs_NB_CellPower(const_NCellsSteps29_31[0], tsc_SuitableCellRS_EPRE),
      cs_NB_CellPower(const_NCellsSteps29_31[1], tsc_ServingCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    i := 0;//the iteration is as N=i+3
    while (i < 5) {
        //@siclog "Step 30" siclog@
        // Check: Does the UE transmit a TRACKING AREA UPDATE REQUEST message in the next 120 seconds?
      if (f_NBIOT_RRC_RRCConnectionRequest_Check(const_NCellsSteps29_31[i+1], v_TimerValue)) { // @sic R5s170965 sic@
          // even though prose says TAU, as soon as UE sends RRC ConnReq, we know something is wrong
        f_NBIOT_SetVerdictFailOrInconc(__FILE__, __LINE__, "Test Case 22.5.13 Step 30 iteration N = : "&int2str(i+3));
      }
      
        //@siclog "Step 31" siclog@
        // Check: Does the UE camp on the strongest cell for each T3(x) in table 22.5.13-2 being applied by using the procedure in TS 36.508 subclause 8.1.5A.2?
      f_NBIOT_508Check_CP_ResponseToPagingForMTAccess(const_NCellsSteps29_31[i+1],
                                                      cs_NB_Paging_OneRecord(cs_PagingUE_Identity_S_TMSI(v_Guti_Params_Step26.MME_Code, v_Guti_Params_Step26.M_TMSI)));
      
      i := i+1;
      
      if ((i!=0) and (i!=5)) {
        // The SS transmits an RRCConnectionRelease-NB message
        f_NBIOT_RRC_ConnectionRelease(const_NCellsSteps29_31[i]);
        
        //@siclog "Step 29" siclog@
        // Cell power levels are set according to T3 and the value of N
        f_NBIOT_SetCellPower(const_NCellsSteps29_31[i-1], tsc_NonSuitableOffNBIOTCellRS_EPRE);
        f_NBIOT_ReleaseCellSpecific(const_NCellsSteps29_31[i-1]); //NBIOT Cell to be released as soon as it is not used anymore
        
        v_CellPowerList := {
          cs_NB_CellPower(const_NCellsSteps29_31[i], tsc_SuitableCellRS_EPRE),
          cs_NB_CellPower(const_NCellsSteps29_31[i+1], tsc_ServingCellRS_EPRE)
        };
        f_NBIOT_SetCellPowerList(v_CellPowerList);
      }
    }
    
    //@siclog "Step 32" siclog@
    // The SS transmits an RRCConnectionRelease-NB message
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell54);
    
    //@siclog "Step 33" siclog@
    // SS adjusts the cell power levels according to row T4 in table 22.5.13-2.
    // Note: the new list of equivalent PLMNs allocated in step 26 means that list of equivalent PLMNs allocated in step 13 should have been deleted. Hence the PLMN of
    // Ncell 57 shall not be selected by a cell reselection process, and the UE shall remain camped on Ncell 54.
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell59, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell54, tsc_SuitableCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell57, tsc_ServingCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 34" siclog@
    // Check: Does the UE transmit a TRACKING AREA UPDATE REQUEST message on Ncell 57 in the next 120 seconds?
    if (f_NBIOT_RRC_RRCConnectionRequest_Check(nbiot_Cell57, v_TimerValue)) { // @sic R5s170965 sic@
      // even though prose says TAU, as soon as UE sends RRC ConnReq, we know something is wrong
      f_NBIOT_SetVerdictFailOrInconc(__FILE__, __LINE__, "Test Case 22.5.13 Step 34");
    }
    
    //@siclog "Step 35" siclog@
    // Check: Does the UE camp on Ncell 54 by using the procedure in TS 36.508 subclause 8.1.5A.2?
    f_NBIOT_508Check_CP_ResponseToPagingForMTAccess(nbiot_Cell54,
                                                    cs_NB_Paging_OneRecord(cs_PagingUE_Identity_S_TMSI(v_Guti_Params_Step26.MME_Code, v_Guti_Params_Step26.M_TMSI)));
    
    //@siclog "Step 36" siclog@
    // The SS transmits an RRCConnectionRelease-NB message.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell54);
    
    //@siclog "Step 37" siclog@
    // SS adjusts the cell power levels according to row T5 in table 22.5.13-2
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell57, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell50, tsc_ServingCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 38" siclog@
    // Check: Does the UE transmit a TRACKING AREA UPDATE REQUEST message on Ncell 50 with the last visited TAI set to the TAI of Ncell 54; the GUTI allocated
    // in step 13 and the KSIASME allocated in step 5?
    v_NAS_Ind := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell50,
                                                cr_EstablishmentCause_NB_Any,
                                                cr_NAS_Indication(tsc_SHT_IntegrityProtected,
                                                                  cdr_TAU_Request_OldGuti(tsc_EpsUpdate_TaUpdate,
                                                                                          v_KSIasme,//f_EUTRA_SecurityKSIasme_Get(),
                                                                                          cr_DRXparameter_Any ('5C'O) ifpresent,
                                                                                          cr_AdditionalUpdateType_CIOT ifpresent,
                                                                                          f_GutiParameters2MobileIdentity(omit, valueof(cs_Guti(cs_HPLMN_Def, 64000, 127))),
                                                                                          cr_TAI(v_PLMN_Cell54, bit2oct(v_TAC_Cell54)))));
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 38");
    
    //@siclog "Step 39" siclog@
    // SS responds with TRACKING AREA UPDATE ACCEPT message
    SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell50,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   cs_NAS_Request(tsc_SHT_IntegrityProtected_Ciphered,
                                                  cs_TAU_Accept_Common(tsc_EpsUpdate_TaUpdate, // @sic R5s170769 sic@
                                                                       f_GutiParameters2MobileIdentity(tsc_IEI_Guti, v_Guti_Params_Cell50),
                                                                       cds_TAIListNonConsecutive_tlv (v_PLMN_Cell50, {tsc_TAC2}), // @sic R5s170965 sic@
                                                                       v_NAS_Ind.Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.epsBearerContextStatus,//EPS bearer context status
                                                                       omit,//Lai
                                                                       omit,//MSId
                                                                       f_GetNBIOTAdditionalUpdateResult(v_NAS_Ind.Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.addUpdateType),
                                                                       -,
                                                                       -,
                                                                       -,
                                                                       f_GetNBIOTNetworkFeatureSupport(CONTROL_PLANE)))));
    
    //@siclog "Step 40" siclog@
    // The UE transmits a TRACKING AREA UPDATE COMPLETE message
    SRB.receive(car_NB_SRB_NasPdu_IND(nbiot_Cell50,
                                      tsc_SRB1bis,
                                      cr_NAS_Indication(tsc_SHT_IntegrityProtected_Ciphered,
                                                        cr_508_TAU_Complete)));
  }

  /*
   * @desc      REFERENCE TS 36.523-3 clause 22.5.14
   * @status    APPROVED (NBIOT)
   */
  function f_TC_22_5_14_NBIOT() runs on NBIOT_PTC
  { /* NB-IoT / Attach / Rejected / Tracking Area not allowed/Roaming not allowed in this tracking area / No suitable cells in tracking area */

    f_NBIOT_Init(c2, CONTROL_PLANE, LTE_CellsOnDifferentPLMN);//@sic R5s180227 Ch. 3 sic@
    
    // create cell and send out system information
    f_NBIOT_CellConfig_Def(nbiot_Cell50, CONTROL_PLANE);//PLMN1 HPLMN
    f_NBIOT_CellConfig_Def(nbiot_Cell51, CONTROL_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell55, CONTROL_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell56, CONTROL_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell62, CONTROL_PLANE);
    
    // Preamble: The UE is in State 1-NB "Switched OFF"
    // ==========================================================================
    f_NBIOT_Preamble(nbiot_Cell50, CONTROL_PLANE);
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell50, CONTROL_PLANE, RRC_CONNECTED);
    
    f_NBIOT_TestBody_Set(true);
    
    fl_TC_22_5_14_Body();
    
    // Postamble
    f_NBIOT_TestBody_Set(false);
    f_NBIOT_Postamble (nbiot_Cell56, CONTROL_PLANE, N2_CONNECTED); //@sic R5-182582 sic@
  }

  /*
   * @desc      test body of TC_22_5_14
   * @status    APPROVED (NBIOT)
   */
  function fl_TC_22_5_14_Body() runs on NBIOT_PTC
  {
    var NAS_MSG_Indication_Type v_NasInd;
    var NasCount_Type v_NasCountUL;
    var GutiParameters_Type v_Guti1_Params := f_NBIOT_CellInfo_GetGuti(nbiot_Cell50);
    var NAS_PlmnId v_PLMN1 := f_Asn2Nas_PlmnId(v_Guti1_Params.PLMN_Identity);
    var template (present) B3_Type v_PDNType := (f_GetPdnType(), '101'B);
    var template (value) NB_CellPowerList_Type v_CellPowerList;
    var template (present) NAS_UL_Message_Type v_ESMMessage;
    
  
    if (px_DoAttachWithoutPDN) {
      v_ESMMessage := cr_ESM_DUMMY_MESSAGE;
    } else {
      v_ESMMessage := cr_CIOT_PDN_CONNECTIVITY_REQUEST(tsc_PdnRequest_InitialAttach, v_PDNType);
    }
    //@siclog "Step 1" siclog@
    //SS configures adjusts the cell power levels according to row T1 in table 22.5.14.3-1:
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell50, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell51, tsc_SuitableCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell55, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell56, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell62, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);

    //The following messages are to be observed on Ncell 50 unless explicitly stated otherwise.
    //All ATTACH REJECT messages must be sent integrity protected.
    //@siclog "Step 2" siclog@
    //The UE is switched on.
    f_UT_SwitchOnUE(UT, false);

    //@siclog "Step 3" siclog@
    //The UE transmits an ATTACH REQUEST message. IF AttachWithoutPDN AND UE sets attachWithoutPDN conectivity in RRCConnectionSetupComplete-NB
    //THEN the ESM DUMMY MESSAGE is piggybacked in ATTACH REQUEST, OTHERWISE the PDN CONNECTIVITY REQUEST message is piggybacked in ATTACH REQUEST.
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell50,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected,
                                                                                 cr_CIOT_ATTACH_REQUEST(cr_AdditionalUpdateType_CIOT),
                                                                                 v_ESMMessage));

    //@siclog "Step 4" siclog@
    //The SS transmits an ATTACH REJECT message, EMM cause = "Tracking area not allowed".
    //(The list of "forbidden tracking areas for regional provision of service " in the UE should now contain TAI-1)
    SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell50,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   cs_NAS_Request(f_GetEPS_SecurityHeaderForReject(tsc_Cause_TA_NotAllowed), // @sic R5-174501 sic@
                                                  cs_508_AttachReject(cs_EMM_Cause_v(tsc_Cause_TA_NotAllowed)))));


    //@siclog "Step 5" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell50);

    //@siclog "Step 6" siclog@
    //Check: Does the UE transmit the ATTACH REQUEST message in the next 30 seconds on Ncell 50 or Ncell 51?
    f_NBIOT_CheckNoAttachOn2Cells(nbiot_Cell50, nbiot_Cell51, 30.0, "Step 6");

    //@siclog "Step 7" siclog@
    //The user initiates an attach by MMI or by AT command.
    f_UT_TriggerAttach (UT);

    //@siclog "Step 8" siclog@
    //Check: Does the UE transmit the ATTACH REQUEST message in the next 30 seconds?
    f_NBIOT_CheckNoAttachOn2Cells(nbiot_Cell50, nbiot_Cell51, 30.0, "Step 8");

    //@siclog "Step 9" siclog@
    //SS adjusts the cell power levels according to row T2 in table 22.5.14.3-1
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell50, tsc_SuitableCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell51, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell55, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell56, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell62, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);

    //The following messages are to be observed on Ncell 51 unless explicitly stated otherwise.
    //@siclog "Step 10" siclog@
    //Check: Does the UE transmit the ATTACH REQUEST message? IF AttachWithoutPDN AND UE sets attachWithoutPDN-Connectivity? in RRCConnectionSetupComplete-NB
    //THEN the ESM DUMMY MESSAGE is piggybacked in ATTACH REQUEST, OTHERWISE the PDN CONNECTIVITY REQUEST message is piggybacked in ATTACH REQUEST.
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell51,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_IndicationWithPiggybacking(tsc_SHT_NoSecurityProtection,
                                                                                 cdr_CIOT_ATTACH_REQUEST_WithIMSINoTai(cr_AdditionalUpdateType_CIOT),
                                                                                 v_ESMMessage));

    //@siclog "Step 10A - 10D" siclog@
    //Steps 5 to 8 from procedure 8.1.5.2.3 in TS 36.508.
    v_NasCountUL := f_NBIOT_InitialRegistration_Step5_8 (nbiot_Cell51,
                                                         v_NasInd,
                                                         false);//@sic R5-176875 sic@

    //@siclog "Step 11" siclog@
    //The SS transmits an ATTACH REJECT message, EMM cause = "Tracking area not allowed".
    //(The list of "forbidden tracking areas for regional provision of service " in the UE should now contain TAI-1 and TAI-2)
    SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell51,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   cs_NAS_Request(f_GetEPS_SecurityHeaderForReject(tsc_Cause_TA_NotAllowed), // @sic R5-174501 sic@
                                                  cs_508_AttachReject(cs_EMM_Cause_v(tsc_Cause_TA_NotAllowed)))));

    //@siclog "Step 12" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell51);

    //@siclog "Step 13" siclog@
    //SS adjusts the cell power levels according to row T3 in table 22.5.14.3-1
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell50, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell51, tsc_SuitableCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell55, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell56, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell62, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);

    //@siclog "Step 14" siclog@
    //The following messages are to be observed on Ncell 50 unless explicitly stated otherwise.
    f_NBIOT_CheckNoAttachOn2Cells(nbiot_Cell50, nbiot_Cell51, 30.0, "Step 14");

    //@siclog "Step 15" siclog@
    //If possible (see ICS) switch off is performed or the USIM is removed.
    //Otherwise the power is removed.
    f_UT_SwitchOffUE(UT, true);

    //@siclog "Step 16" siclog@
    //SS adjusts the cell power levels according to row T4 in table 22.5.14.3-1
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell50, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell51, tsc_NonSuitableNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell55, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell56, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell62, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);

    //The following messages are to be observed on Ncell 50 unless explicitly stated otherwise.
    //@siclog "Step 17" siclog@
    //The UE is brought back to operation or the USIM is inserted.
    f_UT_SwitchOnUE(UT, true);

    //@siclog "Step 18" siclog@
    //Check: Does the UE transmit the ATTACH REQUEST message? IF AttachWithoutPDN AND UE sets attachWithoutPDN-Connectivity? in RRCConnectionSetupComplete-NB
    //THEN the ESM DUMMY MESSAGE is piggybacked in ATTACH REQUEST, OTHERWISE the PDN CONNECTIVITY REQUEST message is piggybacked in ATTACH REQUEST.
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell50,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_IndicationWithPiggybacking(tsc_SHT_NoSecurityProtection,
                                                                                 cdr_CIOT_ATTACH_REQUEST_WithIMSINoTai(cr_AdditionalUpdateType_CIOT),
                                                                                 v_ESMMessage));

    //@siclog "Step 19 - 29" siclog@
    //The attach procedure is completed by executing steps 5 to 14b1 of the UE registration procedure in TS 36.508 sub clause 8.1.5.2.
    f_NBIOT_InitialRegistration_Step5_14(nbiot_Cell50, CONTROL_PLANE, STATE2_NB_CONNECTED_UPDATED, v_NasInd);

    //@siclog "Step 29A" siclog@
    //The SS transmits an RRCConnectionRelease-NB message to release RRC connection and move to RRC_IDLE.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell50);

    //@siclog "Step 29B - 29G" siclog@
    //The UE is switched off or the USIM is removed.
    //The UE transmits an RRCConnectionRequest-NB message.
    //SS transmits an RRCConnectionSetup-NB message.
    //The UE transmits an RRCConnectionSetupComplete-NB message.
    //The UE transmits a DETACH REQUEST message with the Detach Type IE indicating "switch off".
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell50, CONTROL_PLANE, RRC_IDLE); //@sic R5s180227 Ch. 2.1 sic@

    //@siclog "Step 30" siclog@
    //SS adjusts the cell power levels according to row T5 in table 22.5.14.3-1
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell50, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell51, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell55, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell56, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell62, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    f_NBIOT_ReleaseCellSpecific(nbiot_Cell51);//NBIOT Cell to be released as soon as it is not used anymore

    //The following messages are to be observed on Ncell 55 unless explicitly stated otherwise.
    //@siclog "Step 31" siclog@
    //The UE is switched on.
    f_UT_SwitchOnUE(UT, false);

    //@siclog "Step 32" siclog@
    //The UE transmits an ATTACH REQUEST message. IF AttachWithoutPDN AND UE sets attachWithoutPDN-Connectivity? in RRCConnectionSetupComplete-NB
    //THEN the ESM DUMMY MESSAGE is piggybacked in ATTACH REQUEST, OTHERWISE the PDN CONNECTIVITY REQUEST message is piggybacked in ATTACH REQUEST.
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell55,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected,
                                                                                 cdr_CIOT_ATTACH_REQUEST_WithGuti(cr_AdditionalUpdateType_CIOT,
                                                                                                                  f_NBIOT_SecurityKSIasme_Get(),
                                                                                                                  f_Imsi2MobileIdentity(px_IMSI_Def), //@sic R5s180227 Ch. 2.2 sic@
                                                                                                                  cr_TAI(v_PLMN1, tsc_TAC1)),
                                                                                 v_ESMMessage));

    //@siclog "Step 33" siclog@
    //The SS transmits an ATTACH REJECT message, EMM cause = "roaming not allowed in this tracking area ".
    //(The list of "forbidden tracking areas for roaming" in the UE should now contain TAI-7)
    SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell55,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   cs_NAS_Request(f_GetEPS_SecurityHeaderForReject(tsc_Cause_Roaming_NotAllowed), // @sic R5-174501 sic@
                                                  cs_508_AttachReject(cs_EMM_Cause_v(tsc_Cause_Roaming_NotAllowed)))));


    //@siclog "Step 34" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell55);

    //@siclog "Step 35" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST message in the next 30 seconds?
    f_NBIOT_CheckNoAttachOn1Cell(nbiot_Cell55, 30.0, "Step 35");

    //@siclog "Step 36" siclog@
    //The user initiates an attach by MMI or by AT command.
    f_UT_TriggerAttach (UT);

    //@siclog "Step 37" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST message in the next 30 seconds?
    f_NBIOT_CheckNoAttachOn1Cell(nbiot_Cell55, 30.0, "Step 37");

    //@siclog "Step 38" siclog@
    //SS adjusts the cell power levels according to row T6 in table 22.5.14.3-1
    //NCell51 will not be config power level since it is not used anymore
    v_CellPowerList := { //@sic R5s180227 sic@
      cs_NB_CellPower(nbiot_Cell50, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell55, tsc_Suitable_NeighbourIntraFreq_CellRS_EPRE), //@sic R5-182582 sic@
      cs_NB_CellPower(nbiot_Cell56, tsc_ServingCellRS_EPRE), //@sic R5-182582 sic@
      cs_NB_CellPower(nbiot_Cell62, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);

    //@siclog "Step 39" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST message on Ncell 56 as specified?
    //IF AttachWithoutPDN AND UE sets attachWithoutPDN-Connectivity? in RRCConnectionSetupComplete-NB THEN the ESM DUMMY MESSAGE is piggybacked in ATTACH REQUEST, OTHERWISE the PDN CONNECTIVITY REQUEST message is piggybacked in ATTACH REQUEST.
    //Note: according to TS 24.301, the UE has the choice to enter "LIMITED-SERVICE" or "PLMN- SEARCH" state. But in any case it shall do a PLMN selection.
    //In the first option, the UE shall apply reselection so it will select cell 56 and then attempt to attach; in the second option it will select the same PLMN again and exclude cells from forbidden TAs so it will select cell 56.
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell56,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_IndicationWithPiggybacking(tsc_SHT_NoSecurityProtection,
                                                                                 cdr_CIOT_ATTACH_REQUEST_WithIMSINoTai(cr_AdditionalUpdateType_CIOT),
                                                                                 v_ESMMessage));

    //@siclog "Step 39A - 39D" siclog@
    //Steps 5 to 8 from procedure 8.1.5.2.3 in TS 36.508.
    v_NasCountUL := f_NBIOT_InitialRegistration_Step5_8 (nbiot_Cell56,
                                                         v_NasInd,
                                                         false);//@sic R5-176875 sic@

    //@siclog "Step 40" siclog@
    //The SS transmits an ATTACH REJECT message, EMM cause = "roaming not allowed in this tracking area".
    //(The list of "forbidden tracking areas for roaming" in the UE should now contain TAI-7 and TAI-8)
    SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell56,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   cs_NAS_Request(f_GetEPS_SecurityHeaderForReject(tsc_Cause_Roaming_NotAllowed), // @sic R5-174501 sic@
                                                  cs_508_AttachReject(cs_EMM_Cause_v(tsc_Cause_Roaming_NotAllowed)))));


    //@siclog "Step 41" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell56);

    //@siclog "Step 42" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST message in the next 60 seconds on Ncell 55 or Ncell 56?
    f_NBIOT_CheckNoAttachOn2Cells(nbiot_Cell55, nbiot_Cell56, 60.0, "Step 42");

    //@siclog "Step 43" siclog@
    //If possible (see ICS) switch off is performed or the USIM is removed.
    //Otherwise the power is removed.
    f_UT_SwitchOffUE(UT, true);

    //@siclog "Step 44" siclog@
    //SS reconfigure the cell power levels according to row T7 in table 22.5.14.3-1s
    //NCell51 will not be config power level since it is not used anymore
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell50, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell55, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell56, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell62, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);

    //The following messages are to be observed on Ncell 55 unless explicitly stated otherwise.
    //@siclog "Step 45" siclog@
    //The UE is brought back to operation or the USIM is inserted.
    f_UT_SwitchOnUE(UT, true);

    //@siclog "Step 46" siclog@
    //The UE transmits an ATTACH REQUEST message?
    //IF AttachWithoutPDN AND UE sets attachWithoutPDN-Connectivity? in RRCConnectionSetupComplete-NB
    //THEN the ESM DUMMY MESSAGE is piggybacked in ATTACH REQUEST, OTHERWISE the PDN CONNECTIVITY REQUEST message is piggybacked in ATTACH REQUEST.
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell55,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_IndicationWithPiggybacking(tsc_SHT_NoSecurityProtection,
                                                                                 cdr_CIOT_ATTACH_REQUEST_WithIMSINoTai(cr_AdditionalUpdateType_CIOT),
                                                                                 v_ESMMessage));

    //@siclog "Step 46A - 46D" siclog@
    //Steps 5 to 8 from procedure 8.1.5.2.3 in TS 36.508.
    v_NasCountUL := f_NBIOT_InitialRegistration_Step5_8 (nbiot_Cell55,
                                                         v_NasInd,
                                                         false);//@sic R5-176875 sic@

    //@siclog "Step 47" siclog@
    //The SS transmits an ATTACH REJECT message, EMM cause = "roaming not allowed in this tracking area ".
    //(The list of "forbidden tracking areas for roaming" in the UE should now contain TAI-7)
    SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell55,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   cs_NAS_Request(f_GetEPS_SecurityHeaderForReject(tsc_Cause_Roaming_NotAllowed), // @sic R5-174501 sic@
                                                  cs_508_AttachReject(cs_EMM_Cause_v(tsc_Cause_Roaming_NotAllowed)))));

    //@siclog "Step 47A" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell55);//@sic R5-176875 sic@

    //@siclog "Step 48" siclog@
    //SS adjusts the cell power levels according to row T8 in table 22.5.14.3-1
    //NCell51 will not be config power level since it is not used anymore
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell50, tsc_SuitableCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell55, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell56, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell62, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);

    //The following messages are to be observed on Ncell 50 unless explicitly stated otherwise.
    //@siclog "Step 49" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST message?
    //IF AttachWithoutPDN AND UE sets attachWithoutPDN-Connectivity? in RRCConnectionSetupComplete-NB
    //THEN the ESM DUMMY MESSAGE is piggybacked in ATTACH REQUEST, OTHERWISE the PDN CONNECTIVITY REQUEST message is piggybacked in ATTACH REQUEST.
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell50,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_IndicationWithPiggybacking(tsc_SHT_NoSecurityProtection,
                                                                                 cdr_CIOT_ATTACH_REQUEST_WithIMSINoTai(cr_AdditionalUpdateType_CIOT),
                                                                                 v_ESMMessage));
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 49");

    //@siclog "Step 50 - 60" siclog@
    //The attach procedure is completed by executing steps 5 to 14b1 of the UE registration procedure in TS 36.508 sub clause 8.1.5.2.
    f_NBIOT_InitialRegistration_Step5_14(nbiot_Cell50, CONTROL_PLANE, STATE2_NB_CONNECTED_UPDATED, v_NasInd);

    //@siclog "Step 61 -61A" siclog@
    //If possible (see ICS) switch off is performed or the USIM is removed.
    //Otherwise the power is removed.
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell50, CONTROL_PLANE, RRC_CONNECTED);

    //@siclog "Step 62" siclog@
    //SS adjusts the cell power levels according to row T9 in table 22.5.14.3-1
    //NCell51 will not be config power level since it is not used anymore
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell50, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell55, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell56, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell62, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    f_NBIOT_ReleaseCellSpecific(nbiot_Cell50);//NBIOT Cell to be released as soon as it is not used anymore

    //@siclog "Step 63" siclog@
    //The UE is brought back to operation or the USIM is inserted.
    f_UT_SwitchOnUE(UT, true);

    //The following messages are to be observed on Ncell 55 unless explicitly stated otherwise.
    //@siclog "Step 64" siclog@
    //The UE transmits an ATTACH REQUEST message?
    //IF AttachWithoutPDN AND UE sets attachWithoutPDN-Connectivity? in RRCConnectionSetupComplete-NB
    //THEN the ESM DUMMY MESSAGE is piggybacked in ATTACH REQUEST, OTHERWISE the PDN CONNECTIVITY REQUEST message is piggybacked in ATTACH REQUEST.
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell55,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected, //@sic R5s180227 Ch 2.4 sic@
                                                                                 cr_CIOT_ATTACH_REQUEST(cr_AdditionalUpdateType_CIOT),
                                                                                 v_ESMMessage));

    //@siclog "Step 65" siclog@
    //The SS transmits an ATTACH REJECT message, EMM cause = " No suitable cells in tracking area ".
    //(The list of "forbidden tracking areas for roaming" in the UE should now contain TAI-7)
    SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell55,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   cs_NAS_Request(f_GetEPS_SecurityHeaderForReject(tsc_Cause_NoSuitableCells), // @sic R5-174501 sic@
                                                  cs_508_AttachReject(cs_EMM_Cause_v(tsc_Cause_NoSuitableCells)))));

    //@siclog "Step 65A" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell55);//@sic R5-176875 sic@

    //@siclog "Step 66" siclog@
    //SS adjusts the cell power levels according to row T10 in table 22.5.14.3-1
    //NCell50 and NCell51 will not be config power level since it is not used anymore
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell55, tsc_ServingCellRS_EPRE ), //@sic R5s180435 sic@
      cs_NB_CellPower(nbiot_Cell56, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell62, tsc_Suitable_NeighbourIntraFreq_CellRS_EPRE) //@sic R5s180227 Ch. 3 sic@ //@sic R5s180435 sic@
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);

    //@siclog "Step 67" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST message in the next 30 seconds on Ncell 55 or Ncell 62?
    f_NBIOT_CheckNoAttachOn2Cells(nbiot_Cell55, nbiot_Cell62, 30.0, "Step 67");

    //@siclog "Step 68" siclog@
    //SS adjusts the cell power levels according to row T11 in table 22.5.14.3-
    //NCell50 and NCell51 will not be config power level since it is not used anymore
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell55, tsc_Suitable_NeighbourIntraFreq_CellRS_EPRE), //@sic R5s180435 sic@
      cs_NB_CellPower(nbiot_Cell56, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell62, tsc_ServingCellRS_EPRE) //@sic R5s180435 sic@
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);

    //@siclog "Step 69" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST message in the next 30 seconds on Ncell 55 or Ncell 62?
    f_NBIOT_CheckNoAttachOn2Cells(nbiot_Cell55, nbiot_Cell62, 30.0, "Step 69"); //@sic R5s180227 Ch. 2.5 sic@

    //@siclog "Step 70" siclog@
    //If possible (see ICS) switch off is performed or the USIM is removed.
    //Otherwise the power is removed.
    f_UT_SwitchOffUE(UT, true);

    //@siclog "Step 71" siclog@
    //SS adjusts the cell power levels according to row T12 in table 22.5.14.3-1
    //NCell50 and NCell51 will not be config power level since it is not used anymore
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell55, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell56, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell62, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    //@sic R5s180435 sic@

    //@siclog "Step 72" siclog@
    //The UE is brought back to operation or the USIM is inserted.
    f_UT_SwitchOnUE(UT, true);

    //@siclog "Step 73" siclog@
    //The UE transmits an ATTACH REQUEST message on Ncell 55.
    //IF AttachWithoutPDN AND UE sets attachWithoutPDN-Connectivity? in RRCConnectionSetupComplete-NB
    //THEN the ESM DUMMY MESSAGE is piggybacked in ATTACH REQUEST, OTHERWISE the PDN CONNECTIVITY REQUEST message is piggybacked in ATTACH REQUEST.
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell55,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_IndicationWithPiggybacking(tsc_SHT_NoSecurityProtection,
                                                                                 cdr_CIOT_ATTACH_REQUEST_WithIMSINoTai(cr_AdditionalUpdateType_CIOT),
                                                                                 v_ESMMessage));

    //@siclog "Step 74" siclog@
    //@siclog "Step 74A - 74D" siclog@
    //Steps 5 to 8 from procedure 8.1.5.2.3 in TS 36.508.
    v_NasCountUL := f_NBIOT_InitialRegistration_Step5_8 (nbiot_Cell55,//@sic R5s180227 Ch 2.7 sic@
                                                         v_NasInd,
                                                         false);//@sic R5-176875 sic@
    //@siclog "Step 75" siclog@
    //The SS transmits an ATTACH REJECT message,
    //EMM cause = No suitable cells in tracking area?.
    //(The list of forbidden tracking areas for roaming? in the UE should now contain TAI-7)
    SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell55,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   cs_NAS_Request(f_GetEPS_SecurityHeaderForReject(tsc_Cause_NoSuitableCells), // @sic R5-174501 sic@
                                                  cs_508_AttachReject(cs_EMM_Cause_v(tsc_Cause_NoSuitableCells)))));

    //@siclog "Step 76" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell55);

    //@siclog "Step 76A" siclog@
    //SS adjusts the cell power levels according to row T14 in table 22.5.14.3-1
    //NCell50 and NCell51 and NCell62 will not be config power level since it is not used anymore
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell56, tsc_ServingCellRS_EPRE), //@sic R5-182582 sic@ //@sic R5s180435, R5-185014 sic@
      cs_NB_CellPower(nbiot_Cell55, tsc_Suitable_NeighbourIntraFreq_CellRS_EPRE), //@sic R5-182582 sic@ //@sic R5s180435, R5-185014 sic@
      cs_NB_CellPower(nbiot_Cell62, tsc_ServingCellRS_EPRE) //@sic R5s180435, R5-185014 sic@
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);//@sic R5s180227 sic@


    //@siclog "Step 77" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST message on Ncell 56?
    //IF AttachWithoutPDN AND UE sets attachWithoutPDN-Connectivity? in RRCConnectionSetupComplete-NB
    //THEN the ESM DUMMY MESSAGE is piggybacked in ATTACH REQUEST, OTHERWISE the PDN CONNECTIVITY REQUEST message is piggybacked in ATTACH REQUEST.
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell56,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_IndicationWithPiggybacking(tsc_SHT_NoSecurityProtection,
                                                                                 cdr_CIOT_ATTACH_REQUEST_WithIMSINoTai(cr_AdditionalUpdateType_CIOT),
                                                                                 v_ESMMessage));

    //@siclog "Step 77A - 77D" siclog@
    //Steps 5 to 8 from procedure 8.1.5.2.3 in TS 36.508.
    v_NasCountUL := f_NBIOT_InitialRegistration_Step5_8 (nbiot_Cell56,
                                                         v_NasInd,
                                                         false);//@sic R5-176875 sic@
    //@siclog "Step 78" siclog@
    //The SS transmits an ATTACH REJECT message, EMM cause = No suitable cells in tracking area?.
    //(The list of forbidden tracking areas for roaming? in the UE should now contain TAI-7 and TAI-8)
    SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell56,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   cs_NAS_Request(f_GetEPS_SecurityHeaderForReject(tsc_Cause_NoSuitableCells), // @sic R5-174501 sic@
                                                  cs_508_AttachReject(cs_EMM_Cause_v(tsc_Cause_NoSuitableCells)))));

    //@siclog "Step 79" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell56);

    //@siclog "Step 80" siclog@
    //SS adjusts the cell power levels according to row T15 in table 22.5.14.3-1
    //NCell50 and NCell51 and NCell62 will not be config power level since it is not used anymore
    v_CellPowerList := { //@sic R5s180227 Ch 2.8 sic@
      cs_NB_CellPower(nbiot_Cell56, tsc_ServingCellRS_EPRE), //@sic R5-182582 sic@
      cs_NB_CellPower(nbiot_Cell55, tsc_Suitable_NeighbourIntraFreq_CellRS_EPRE), //@sic R5-182582 sic@
      cs_NB_CellPower(nbiot_Cell62, tsc_NonSuitableOffNBIOTCellRS_EPRE)//@sic R5s180559 sic@
      };
    f_NBIOT_SetCellPowerList(v_CellPowerList);

    //The following messages are to be observed on Ncell 55 unless explicitly stated otherwise.
    //@siclog "Step 81" siclog@
    //Check: Does the UE transmit the ATTACH REQUEST message in the next 30 seconds?
    f_NBIOT_CheckNoAttachOn1Cell(nbiot_Cell56, 30.0, "Step 81"); //@sic R5-182582 sic@

    //@siclog "Step 82" siclog@
    //If possible (see ICS) switch off is performed. Otherwise the power is removed.
    f_UT_SwitchOffUE(UT, true);

    //@siclog "Step 83" siclog@
    //The UE is brought back to operation.
    f_UT_SwitchOnUE(UT, true);

    //@siclog "Step 84" siclog@
    //Check: Does the UE transmit an ATTACH REQUEST?
    //IF AttachWithoutPDN AND UE sets attachWithoutPDN-Connectivity? in RRCConnectionSetupComplete-NB
    //THEN the ESM DUMMY MESSAGE is piggybacked in ATTACH REQUEST, OTHERWISE the PDN CONNECTIVITY REQUEST message is piggybacked in ATTACH REQUEST.
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell56, //@sic R5-182582 sic@
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_IndicationWithPiggybacking(tsc_SHT_NoSecurityProtection,
                                                                                 cdr_CIOT_ATTACH_REQUEST_WithIMSINoTai(cr_AdditionalUpdateType_CIOT),
                                                                                 v_ESMMessage));

    //@siclog "Step 85 - 95" siclog@
    //The attach procedure is completed by executing steps 5 to 14b1 of the UE registration procedure in TS 36.508 sub clause 8.1.5.2.
    f_NBIOT_InitialRegistration_Step5_14(nbiot_Cell56, CONTROL_PLANE, STATE2_NB_CONNECTED_UPDATED, v_NasInd); //@sic R5-182582 sic@

    //At the end of this test procedure sequence, the UE is in end state 2-NB Connected Mode according to TS 36.508.
  }

  /*
   * @desc      test body of TC_22_5_17
   * @status    APPROVED (NBIOT)
   */
  function fl_TC_22_5_17_Body() runs on NBIOT_PTC
  { // @sic R5s170527 sic@
    var NAS_MSG_Indication_Type v_NasInd;
    
    var template (present) NAS_UL_Message_Type v_ESMMessage;
    var template (omit) EPS_BearerContextStatus v_EPS_ContextStatus;
    var template (present) NAS_UL_Message_Type v_AttachReq;
    
    var template (value) GPRS_Timer2 v_T3324Value1Min  := cs_GPRS_Timer2_3_IEI('6A'O, tsc_GprsTimerUnit_1min,'00001'B);  //value = 1 min
    var template (value) GPRS_Timer2 v_T3324Value2Mins := cs_GPRS_Timer2_3_IEI('6A'O, tsc_GprsTimerUnit_1min, '00010'B);  //value = 2 mins
    var template (value) GPRS_Timer2 v_T3412ValueExt4Mins := cs_GPRS_Timer2_3_IEI('5E'O, tsc_Gprs3TimerUnit_1min, '00100'B); //T3412 value = 4 mins
    var template (present) B3_Type v_PDNType := (f_GetPdnType(), '101'B);
    var EUTRA_ASN1_TrackingAreaCode_Type v_Tac := f_NBIOT_CellInfo_GetTAC(nbiot_Cell1);
    var GutiParameters_Type v_Guti_Params1 := f_NBIOT_CellInfo_GetGuti (nbiot_Cell1);
    var GutiParameters_Type v_Guti_Params2 := f_NBIOT_CellInfo_GetGuti (nbiot_Cell2);
    var GutiParameters_Type v_Guti_Params3 := f_CreateGutiParamsWithUpdatedSTmsi(v_Guti_Params1);
    var template (value) MobileIdentity v_Guti := f_GutiParameters2MobileIdentity(omit, v_Guti_Params1);
    var NAS_PlmnId v_PLMN := f_Asn2Nas_PlmnId(v_Guti_Params1.PLMN_Identity);
    var NAS_PlmnId v_HomePlmn:= f_Asn2Nas_PlmnId(v_Guti_Params1.PLMN_Identity);
    var template (value) TrackingAreaId v_Tai := cr_TAI(v_HomePlmn, tsc_TAC1);
    var NB_SRB_COMMON_IND v_ReceivedAsp;
    var float v_NoReactionTime := 30.0;
    var float v_T3412Val;
    
    timer t_T3324 := f_NBIOT_SetTimerToleranceMax(nasTimer, 60.0); // @sic R5s170574 Ch. 1 sic@
    v_T3412Val := f_NBIOT_SetTimerToleranceMin(nasTimer, int2float(240+5)) - (int2float(tsc_NBIOT_DelayAfterRRCConnectionRelease) / 1000.0);
    
    //@siclog "Step 1" siclog@
    // Step 1 of the generic procedure precified in TS 36.508 subclause 8.1.5.2.3 is performed
    f_UT_SwitchOnUE(UT, true); //Step1 - Switch on the UE
    
    //Steps 2-4b1 of the generic procedure specified in TS 36.508 subclause 8.1.5.2.3 are performed
    if (px_DoAttachWithoutPDN) {
      v_ESMMessage := cr_ESM_DUMMY_MESSAGE;
    } else {
      v_ESMMessage := cr_CIOT_PDN_CONNECTIVITY_REQUEST(tsc_PdnRequest_InitialAttach, v_PDNType);
    }
    
    v_AttachReq := cdr_CIOT_ATTACH_REQUEST_WithExtdDRXParams_T3324(cr_AdditionalUpdateType_CIOT,
                                                                   v_Guti,
                                                                   cr_GPRS_Timer2_3('6A'O, tsc_GprsTimerUnit_1min, '00010'B),
                                                                   v_Tai,
                                                                   cr_ExtdDRXParamsAny ifpresent); // @sic R5s170898 sic@
    
    //@siclog "Step 2-4b1" siclog@
    // Receive RRC Connection Setup Complete with NAS
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell1,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_IndicationWithPiggybacking(tsc_SHT_IntegrityProtected,
                                                                                 v_AttachReq,
                                                                                 v_ESMMessage));
    
    // Check: Does the UE transmit an ATTACH REQUEST message including the T3324 IE set to two minutes
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 4a1-4b1");
    
    //@siclog "Step 5 - Void" siclog@
    
    //@siclog "Step 6-15b1" siclog@
    // Steps 5 - 14b1 of the generic procedure specified in TS 36.508 subclause 8.1.5.2.3 is performed
    f_NBIOT_InitialRegistration_Step5_12(nbiot_Cell1, CONTROL_PLANE, STATE2_NB_CONNECTED_UPDATED, v_NasInd);
    
    f_NBIOT_InitialRegistration_Step13(nbiot_Cell1,
                                       CONTROL_PLANE,
                                       v_NasInd,
                                       pdnTypeAsSupportedByUE,
                                       -,-,-,-,-,-,-,
                                       cs_GPRS_Timer2_3_IEI('6A'O, tsc_GprsTimerUnit_1min, '00010'B));
    
    f_NBIOT_InitialRegistration_Step14(nbiot_Cell1, CONTROL_PLANE, tsc_EpsDefaultBearerId);
    
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell1); //RRC Connection is released to let T3324 start
    
    // The SS shall wait for 1 minute and then execute the following steps before timer T3324 expires.
    f_Delay (60.0);
    
    //@siclog "Steps 16-20" siclog@
    // Check: Does the UE accept the paging request. Steps 1-5, from paging generic procedure in TS 36.508, subclause 8.1.5A.2.3 are performed.
    f_NBIOT_508Check_CP_ResponseToPagingForMTAccess(nbiot_Cell1);
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Steps 16-20");

    // @siclog "Step 21" siclog@
    // The user requests PSM by MMI or by AT command. The requested value of T3324 is 1 minute.
    f_UT_ConfigurePSM(UT, omit, omit, v_T3324Value1Min);
    
    // @siclog "Step 22" siclog@
    // Check: Does the UE transmit a TRACKING AREA UPDATE REQUEST message?
    // The UE transmits a TRACKING AREA UPDATE REQUEST message including an Extended DRX parameters IE
    SRB.receive(car_NB_SRB_NasPdu_IND(nbiot_Cell1,
                                      tsc_SRB1bis,
                                      cr_NAS_Indication(tsc_SHT_IntegrityProtected,
                                                        cdr_TAU_Request_MSNetworkFeatureSupport_T3324(tsc_EpsUpdate_TaUpdate,  // Table 22.5.17.3.3-1
                                                                                                      f_NBIOT_SecurityKSIasme_Get(),
                                                                                                      -,
                                                                                                      cr_AdditionalUpdateType_CIOT ifpresent,
                                                                                                      f_GutiParameters2MobileIdentity(omit, v_Guti_Params1),
                                                                                                      -,
                                                                                                      (cr_GPRS_Timer2_3('6A'O, tsc_GprsTimerUnit_1min,'00001'B), cr_GPRS_Timer2_3('6A'O, tsc_GprsTimerUnit_2sec,'11110'B)),
                                                                                                      cr_GPRS_Timer2_3('5E'O) ifpresent)))) -> value v_ReceivedAsp;
    
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 22");
    v_EPS_ContextStatus := v_ReceivedAsp.Signalling.Nas[0].Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.epsBearerContextStatus; // Send this back in the Accept
    
    //@siclog "Step 23" siclog@
    // The SS transmits a TRACKING AREA UPDATE ACCEPT message including GUTI-1.
    SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell1,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   cs_NAS_Request(tsc_SHT_IntegrityProtected_Ciphered,
                                                  cs_TAU_Accept_Common(tsc_EpsUpdate_TaUpdate,
                                                                       f_GutiParameters2MobileIdentity(tsc_IEI_Guti, v_Guti_Params1),
                                                                       cds_TAIListNonConsecutive_tlv(v_PLMN, { bit2oct(v_Tac) }),
                                                                       v_EPS_ContextStatus,
                                                                       omit,
                                                                       omit,
                                                                       f_GetNBIOTAdditionalUpdateResult(v_NasInd.Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.addUpdateType),
                                                                       -, -, -,
                                                                       f_GetNBIOTNetworkFeatureSupport(CONTROL_PLANE),
                                                                       -, -, -,
                                                                       v_T3324Value1Min))));
    
    //@siclog "Step 24" siclog@
    // Check: The UE transmits a TRACKING AREA UPDATE COMPLETE message.
    SRB.receive(car_NB_SRB_NasPdu_IND(nbiot_Cell1,
                                      tsc_SRB1bis,
                                      cr_NAS_Indication(tsc_SHT_IntegrityProtected_Ciphered,
                                                        cr_508_TAU_Complete)));
    // @siclog "Step 25" siclog@
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell1);
    t_T3324.start;
    
    // @siclog "Step 26" siclog@
    // When the T3324 timer expires the SS send Paging message including a matched identity
    t_T3324.timeout;
    
    // @siclog "Step 27" siclog@
    // Check: Does the UE respond to the paging message?
    f_NBIOT_UE_Page_NoReaction(nbiot_Cell1,
                               cs_NB_Paging_OneRecord(cs_PagingUE_Identity_S_TMSI(v_Guti_Params1.MME_Code, v_Guti_Params1.M_TMSI)),
                               v_NoReactionTime);
    
    // @siclog "Step 28" siclog@
    // The user requests to deactivate PSM by requesting to use a new value for timer T3324 (2 minutes).
    // The request also include T3412 extended value set to 4 minutes. This can be initiated by MMI or AT command.
    f_UT_ConfigurePSM(UT, omit, v_T3412ValueExt4Mins, v_T3324Value2Mins);
    
    // @siclog "Step 29" siclog@
    // Check: Does the UE transmit a TRACKING AREA UPDATE REQUEST message?
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell1,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_Indication(tsc_SHT_IntegrityProtected,
                                                                 cdr_TAU_Request_MSNetworkFeatureSupport_T3324 (tsc_EpsUpdate_TaUpdate,
                                                                                                                f_NBIOT_SecurityKSIasme_Get(),
                                                                                                                -,
                                                                                                                cr_AdditionalUpdateType_CIOT ifpresent,
                                                                                                                f_GutiParameters2MobileIdentity(omit, v_Guti_Params1),
                                                                                                                cr_MS_NetworkFeatureSupport('C'H, '1'B),
                                                                                                                cr_GPRS_Timer2_3('6A'O, tsc_GprsTimerUnit_1min, '00010'B),//T3324-2Mins
                                                                                                                (cr_GPRS_Timer2_3('5E'O, tsc_Gprs3TimerUnit_1min,'00100'B), cr_GPRS_Timer2_3('5E'O, tsc_Gprs3TimerUnit_30sec,'01000'B)))));//T3412Ext-4Mins
                                                                                                                
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 29");
    v_EPS_ContextStatus := v_NasInd.Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.epsBearerContextStatus; // Send this back in the Accept
    
    //@siclog "Step 30" siclog@
    // The SS transmits a TRACKING AREA UPDATE ACCEPT message including GUTI-1.
    SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell1,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   cs_NAS_Request(tsc_SHT_IntegrityProtected_Ciphered,
                                                  cs_TAU_Accept_Common(tsc_EpsUpdate_TaUpdate,
                                                                       f_GutiParameters2MobileIdentity(tsc_IEI_Guti, v_Guti_Params2),
                                                                       cds_TAIListNonConsecutive_tlv(v_PLMN, { bit2oct(v_Tac) }),
                                                                       v_EPS_ContextStatus,
                                                                       omit,
                                                                       omit,
                                                                       f_GetNBIOTAdditionalUpdateResult(v_NasInd.Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.addUpdateType),
                                                                       -, -, -,
                                                                       f_GetNBIOTNetworkFeatureSupport(CONTROL_PLANE),
                                                                       -, -, v_T3412ValueExt4Mins,
                                                                       v_T3324Value2Mins))));
    
    //@siclog "Step 31" siclog@
    // Check: The UE transmits a TRACKING AREA UPDATE COMPLETE message.
    SRB.receive(car_NB_SRB_NasPdu_IND(nbiot_Cell1,
                                      tsc_SRB1bis,
                                      cr_NAS_Indication(tsc_SHT_IntegrityProtected_Ciphered,
                                                        cr_508_TAU_Complete)));
    
    // @siclog "Step 32" siclog@
    // The SS releases the RRC connection
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell1);

    // @siclog "Step 33" siclog@
    // The SS waits 4 minutes. (Expiry of T3412 extended value)
    f_Delay(v_T3412Val);//
    
    // @siclog "Step 34" siclog@
    // Check: Does the UE transmit a TRACKING AREA UPDATE REQUEST message?
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell1,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_Indication(tsc_SHT_IntegrityProtected,
                                                                 cdr_TAU_Request_MSNetworkFeatureSupport_T3324(tsc_EpsUpdate_Periodic,
                                                                                                               f_NBIOT_SecurityKSIasme_Get(),
                                                                                                               -,
                                                                                                               cr_AdditionalUpdateType_CIOT ifpresent,
                                                                                                               f_GutiParameters2MobileIdentity(omit, v_Guti_Params2),
                                                                                                               -,
                                                                                                               cr_GPRS_Timer2_3('6A'O, tsc_GprsTimerUnit_1min, '00010'B),
                                                                                                               cr_GPRS_Timer2_3('5E'O) ifpresent)));
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 34");
    v_EPS_ContextStatus := v_NasInd.Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.epsBearerContextStatus; // Send this back in the Accept
    f_NBIOT_CellInfo_SetGuti(nbiot_Cell1, v_Guti_Params3);
    
    //@siclog "Step 35" siclog@
    // The SS transmits a TRACKING AREA UPDATE ACCEPT message including GUTI-3.
    SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell1,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   cs_NAS_Request(tsc_SHT_IntegrityProtected_Ciphered,
                                                  cs_TAU_Accept_Common(tsc_EpsUpdate_TaUpdate,
                                                                       f_GutiParameters2MobileIdentity(tsc_IEI_Guti, v_Guti_Params3),
                                                                       cds_TAIListNonConsecutive_tlv(v_PLMN, { bit2oct(v_Tac) }),
                                                                       v_EPS_ContextStatus,
                                                                       omit,
                                                                       omit,
                                                                       f_GetNBIOTAdditionalUpdateResult(v_NasInd.Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.addUpdateType),
                                                                       -, -, -,
                                                                       f_GetNBIOTNetworkFeatureSupport(CONTROL_PLANE),
                                                                       -, -, -,
                                                                       v_T3324Value2Mins))));
    
    //@siclog "Step 36" siclog@
    // The UE transmits a TRACKING AREA UPDATE COMPLETE message?
    SRB.receive(car_NB_SRB_NasPdu_IND(nbiot_Cell1,
                                      tsc_SRB1bis,
                                      cr_NAS_Indication(tsc_SHT_IntegrityProtected_Ciphered,
                                                        cr_508_TAU_Complete)));
    
    // @siclog "Step 37" siclog@
    // The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell1);
  }

  /*
   * @desc      REFERENCE TS 36.523-1 clause 22.5.17
   * @status    APPROVED (NBIOT)
   */
  function f_TC_22_5_17_NBIOT() runs on NBIOT_PTC
  { // NB-IoT / Attach Success /Normal tracking area update accepted / Periodic tracking area update T3412 Extended Value / PSM
   
    var template (value) GPRS_Timer2 v_T3324Value2Mins := cs_GPRS_Timer2_3_IEI('6A'O, tsc_GprsTimerUnit_1min, '00010'B);  //value = 2 mins
    
    f_NBIOT_Init(c1);
    
    f_UT_SwitchOnUE(UT, false, CNF_REQUIRED); // @sic R5s180124 sic@
    // The UE is configured to use Power Saving Mode
    // The UE is configured to set T3324 to two minutes
    f_UT_ConfigurePSM(UT, omit, omit, v_T3324Value2Mins, -, CNF_REQUIRED); // @sic R5-176154 sic@
    f_UT_SwitchOffUE(UT, false, CNF_REQUIRED);

    // create cell and send out system information
    f_NBIOT_CellConfig_Def(nbiot_Cell1, CONTROL_PLANE);
 
    // Preamble: The UE is in State 1-NB "Switched OFF"
    // The UE is previously registered on E-UTRAN, and when on E-UTRAN, the UE is last authenticated and registered on the NB-IoT cell
    // using default message contents according to TS 36.508
    // The UE is configured to set T3324 to two minutes
    // ==========================================================================
    f_NBIOT_Preamble(nbiot_Cell1, CONTROL_PLANE);
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell1, CONTROL_PLANE, RRC_CONNECTED);
    
    f_NBIOT_TestBody_Set(true);
    
    fl_TC_22_5_17_Body();
    
    // Postamble
    f_NBIOT_TestBody_Set(false);
    f_NBIOT_Postamble (nbiot_Cell1, CONTROL_PLANE, N1_IDLE);
  }

  /*
   * @desc      test body of TC_22_5_18
   * @status    APPROVED (NBIOT)
   */
  function fl_TC_22_5_18_Body() runs on NBIOT_PTC
  { // @sic R5s170496 R5-174466 sic@
    var NAS_MSG_Indication_Type v_NasInd;
    var NBIOT_PDN_Type v_PDN;
    var template (omit) EPS_BearerContextStatus v_EPS_ContextStatus;
    var GutiParameters_Type v_Guti_Params1 := f_NBIOT_CellInfo_GetGuti (nbiot_Cell1);
    var GutiParameters_Type v_Guti_Params2 := f_NBIOT_CellInfo_GetGuti (nbiot_Cell11);
    var GutiParameters_Type v_Guti1:= f_NBIOT_CellInfo_GetGuti(nbiot_Cell1);
    var GutiParameters_Type v_Guti_Params3 := f_CreateGutiParamsWithUpdatedSTmsi(v_Guti_Params1);
    var EPS_BearerIdentity v_EpsDefaultBearerId := tsc_EpsDefaultBearerId;
    var template (value) NB_CellPowerList_Type v_CellPowerList;
    var template (value) GPRS_Timer2 v_T3324Value2Mins := cs_GPRS_Timer2_3_IEI('6A'O, tsc_GprsTimerUnit_1min, '00010'B);  //value = 2 mins
    var float v_NoReactionTime := 30.0;
    var template TrackingAreaId v_Tai1 := cr_TAI(f_Asn2Nas_PlmnId(v_Guti_Params1.PLMN_Identity), bit2oct(f_NBIOT_CellInfo_GetTAC(nbiot_Cell1)));
    var template TrackingAreaId v_Tai2 := cr_TAI(f_Asn2Nas_PlmnId(v_Guti_Params2.PLMN_Identity), bit2oct(f_NBIOT_CellInfo_GetTAC(nbiot_Cell11)));
    var template TrackingAreaId v_Tai3 := cr_TAI(f_Asn2Nas_PlmnId(v_Guti_Params3.PLMN_Identity), bit2oct(f_NBIOT_CellInfo_GetTAC(nbiot_Cell11)));
    timer t_T3324 := f_NBIOT_SetTimerToleranceMax(nasTimer, 120.0);
    timer t_WaitForDetach := 5.0;
    
    //@siclog "Steps 1-14b1" siclog@
    //Steps 1 - 14b1 of the generic procedure specified in TS 36.508 subclause 8.1.5.2.3 are performed
    f_UT_SwitchOnUE(UT, true); //Step1 - Switch on the UE
    fl_NBIOT_InitialRegistration2to13_eDRX_PSM(nbiot_Cell1, -, cs_EDRXParams('0000'B,'0011'B), -, v_Guti_Params1, v_Tai1); //Table 22.5.18.3.3-14: Steps 14bx handled on next step of prose
    
    v_PDN := f_NBIOT_MobileInfo_GetAssignedPdn (0);  // This is registration, so this is the first PDN
    //@siclog "Step 15" siclog@
    //Check: Does the UE transmit an ATTACH COMPLETE message ?
    f_NBIOT_NAS_AttachComplete_CP (nbiot_Cell1, v_EpsDefaultBearerId); // @sic R5s170597 sic@
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 15");
    
    //@siclog "Step 16" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell1);
    
    //@siclog "Step 17" siclog@
    // SS transmits a Paging message to the UE in a valid paging occasion in paging hyperframe as per Idle eDRX
    f_NBIOT_UE_Page_eDRX (nbiot_Cell1,
                          cs_NB_Paging_OneRecord(cs_PagingUE_Identity_S_TMSI(v_Guti_Params1.MME_Code, v_Guti_Params1.M_TMSI)),
                          0,  // PTW index value (2.56 sec)
                          3); // eDRX index value (40.96 sec)

    //@siclog "Step 18 - 21B" siclog@
    // Steps 18-19: Steps 2 to 3 of the NB-IoT Control Plane CIoT MT user data transfer non-SMS transport procedure (TS 36.508 8.1.5A.2.3) are executed.
    // Steps 20-21: Void
    // Step 21A : Check: Does the UE transmit a CONTROL PLANE SERVICE REQUEST according to step 4a1a1 or 4a1b1 in the generic procedure in TS 36.508 8.1.5A.2.3?
    // Step 21B: Steps 4a1b1 to 5 or only step 5 of the NB-IoT Control Plane CIoT MT user data transfer non-SMS transport procedure (TS 36.508 8.1.5A.2.3) are executed
    f_NBIOT_508Check_CP_ResponseToPagingForMTAccess_Step2_5(nbiot_Cell1);
    
    //@siclog "Step 22" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell1);
    
    //@siclog "Step 23" siclog@
    //The SS configures:
    //- Ncell 1 as a "Non-Suitable cell".
    //- Ncell 11 as the "Serving cell".
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell1, tsc_NonSuitableNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell11, tsc_ServingCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 24" siclog@
    // The UE transmits a TRACKING AREA UPDATE REQUEST message including an Extended DRX parameters IE
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell11,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_Indication(tsc_SHT_IntegrityProtected,
                                                                 cdr_TAU_Request_ExtdDrx_T3324(tsc_EpsUpdate_TaUpdate,  // Table 22.5.18.3.3-5
                                                                                               f_NBIOT_SecurityKSIasme_Get(),
                                                                                               -,
                                                                                               cr_AdditionalUpdateType_CIOT ifpresent,  // @sic R5-176872 sic@
                                                                                               cr_MobileIdAny,
                                                                                               cr_TAI_Any,
                                                                                               cr_GPRS_Timer2_3('6A'O, tsc_GprsTimerUnit_1min, '00010'B), //2 Minutes as preconfigured on preamble
                                                                                               cr_ExtdDRXParamsAny ifpresent)));
    v_EPS_ContextStatus := v_NasInd.Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.epsBearerContextStatus; // Send this back in the Accept
    
    //@siclog "Step 25" siclog@
    // The SS transmits a TRACKING AREA UPDATE ACCEPT message without an Extended DRX parameters IE. GUTI-1 is included
    //@siclog "Step 26" siclog@
    //The UE transmits a TRACKING AREA UPDATE COMPLETE message
    f_NBIOT_TrackingAreaUpdate_Accept_Complete(nbiot_Cell11,
                                               CONTROL_PLANE,
                                               tsc_SRB1bis,
                                               v_Guti1, // Table 22.5.18.3.3-6
                                               v_EPS_ContextStatus,
                                               v_NasInd.Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.addUpdateType);
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 26");
    
    //@siclog "Step 27" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell11);
    
    //@siclog "Step 28 - 32" siclog@
    // Step 28: SS transmits a Paging-NB message to the UE in a valid paging occasion as per normal DRX
    // Steps 29- 30: Steps 2 to 3 of the NB-IoT Control Plane CIoT MT user data transfer non-SMS transport procedure (TS 36.508 8.1.5A.2.3) are executed.
    // Steps 31-32: Void
    // Step 32A: Check: Does the UE transmit a CONTROL PLANE SERVICE REQUEST according to step 4a1a1 or 4a1b1 in the generic procedure in TS 36.508 8.1.5A.2.3?
    // Step 32B: Steps 4a1b1 to 5 or only step 5 of the NB-IoT Control Plane CIoT MT user data transfer non-SMS transport procedure (TS 36.508 8.1.5A.2.3) are executed
    f_NBIOT_508Check_CP_ResponseToPagingForMTAccess(nbiot_Cell11);
    
    //@siclog "Step 33" siclog@
    // The UE is switched off - Note 1: This implies detaching of the UE, releasing of the RRC connection and resetting of the radio bearers at the SS side.
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell11, CONTROL_PLANE, RRC_CONNECTED);
    
    //@siclog "Step 34" siclog@
    // Set the cell type of Ncell 1 to the "Serving cell"
    // Set the cell type of Ncell 11 to the "Non-Suitable cell".
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell1, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell11, tsc_NonSuitableNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 35" siclog@
    //The UE is switched on
    f_UT_SwitchOnUE(UT, true);
    
    //@siclog "Step 36-48b1" siclog@
    //Steps 2 - 14b1 of the generic procedure precified in TS 36.508 subclause 8.1.5.2.3 are performed
    fl_NBIOT_InitialRegistration2to13_eDRX_PSM(nbiot_Cell1, -, omit, -, v_Guti_Params2, v_Tai2); //Table 22.5.18.3.3-14: Step 14bx handled on next step of prose
    
    //@siclog "Step 49" siclog@
    // Check: Does the UE transmit an ATTACH COMPLETE message without an Extended DRX parameters IE?
    //Value of v_ESMMessage checked already from Step15
    f_NBIOT_NAS_AttachComplete_CP (nbiot_Cell1, v_EpsDefaultBearerId); // @sic R5s170597 sic@
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 49");
    
    //@siclog "Step 50" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell1);
    
    //@siclog "Step 51 - 55B" siclog@
    // Step 51: SS transmits a Paging-NB message to the UE in a valid paging occasion as per normal DRX
    // Steps 52- 53: Steps 2 to 3 of the NB-IoT Control Plane CIoT MT user data transfer non-SMS transport procedure (TS 36.508 8.1.5A.2.3) are executed.
    // Steps 54-55: Void
    // Step 55A: Check: Does the UE transmit a CONTROL PLANE SERVICE REQUEST according to step 4a1a1 or 4a1b1 in the generic procedure in TS 36.508 8.1.5A.2.3?
    // Step 55B: Steps 4a1b1 to 5 or only step 5 of the NB-IoT Control Plane CIoT MT user data transfer non-SMS transport procedure (TS 36.508 8.1.5A.2.3) are executed
    f_NBIOT_508Check_CP_ResponseToPagingForMTAccess(nbiot_Cell1);

    //@siclog "Step 55C" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell1); // @sic R5-173809 sic@

    
    //@siclog "Step 56" siclog@
    // Set the cell type of Ncell 1 to the "Non-Suitable cell".
    // Set the cell type of Ncell 11 to the "Serving cell"
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell1, tsc_NonSuitableNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell11, tsc_ServingCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 57" siclog@
    // The UE transmits a TRACKING AREA UPDATE REQUEST message including an Extended DRX parameters IE
    v_NasInd := f_NBIOT_TrackingAreaUpdate_Step1_3(nbiot_Cell11, ?);
    v_EPS_ContextStatus := v_NasInd.Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.epsBearerContextStatus; // Send this back in the Accept
    
    //@siclog "Step 58" siclog@
    // The SS transmits a TRACKING AREA UPDATE ACCEPT message without an Extended DRX parameters IE. GUTI-2 is included
    SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell11,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   cs_NAS_Request(tsc_SHT_IntegrityProtected_Ciphered,
                                                  cs_TAU_Accept_Common(tsc_EpsUpdate_TaUpdate,
                                                                       f_GutiParameters2MobileIdentity(tsc_IEI_Guti, v_Guti_Params2), //Table 22.5.18.3.3-12
                                                                       cds_TAIListNonConsecutive_tlv (tsc_PLMN1, {tsc_TAC2}),
                                                                       v_EPS_ContextStatus,
                                                                       omit,
                                                                       omit,
                                                                       f_GetNBIOTAdditionalUpdateResult(v_NasInd.Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.addUpdateType),
                                                                       -, -, -,
                                                                       f_GetNBIOTNetworkFeatureSupport(CONTROL_PLANE),  // @sic R5-170563 sic@
                                                                       -, -, -,
                                                                       omit,
                                                                       cs_EDRXParams('0000'B, '0011'B)))));
    
    //@siclog "Step 59" siclog@
    //The UE transmits a TRACKING AREA UPDATE COMPLETE message.
    SRB.receive(car_NB_SRB_NasPdu_IND(nbiot_Cell11,
                                      tsc_SRB1bis,
                                      cr_NAS_Indication(tsc_SHT_IntegrityProtected_Ciphered,
                                                        cr_508_TAU_Complete)));
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 59");
    
    
    //@siclog "Step 60" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell11);
    
    //@siclog "Step 61" siclog@
    // SS transmits a Paging-NB message to the UE in a valid paging occasion in paging hyperframe as per Idle eDRX
    f_NBIOT_UE_Page_eDRX(nbiot_Cell11,
                         cs_NB_Paging_OneRecord(cs_PagingUE_Identity_S_TMSI(v_Guti_Params2.MME_Code, v_Guti_Params2.M_TMSI)),
                         0,  // PTW index value (2.56 sec)
                         3); // eDRX index value (40.96 sec)
    
    
    //@siclog "Step 62 - 65B" siclog@
    // Steps 62-63: Steps 2 to 3 of the NB-IoT Control Plane CIoT MT user data transfer non-SMS transport procedure (TS 36.508 8.1.5A.2.3) are executed.
    // Steps 64-65: Void
    // Step 65A : Check: Does the UE transmit a CONTROL PLANE SERVICE REQUEST according to step 4a1a1 or 4a1b1 in the generic procedure in TS 36.508 8.1.5A.2.3?
    // Step 65B: Steps 4a1b1 to 5 or only step 5 of the NB-IoT Control Plane CIoT MT user data transfer non-SMS transport procedure (TS 36.508 8.1.5A.2.3) are executed
    f_NBIOT_508Check_CP_ResponseToPagingForMTAccess_Step2_5(nbiot_Cell11);
    
    //@siclog "Step 66" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell11);
    
    //@siclog "Step 67" siclog@
    // The UE is switched off - Note 1: This implies detaching of the UE, releasing of the RRC connection and resetting of the radio bearers at the SS side.
    f_NBIOT_SS_SRBs_DRBs_Reset (nbiot_Cell1, CONTROL_PLANE);
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell11, CONTROL_PLANE, RRC_IDLE);
    
    //@siclog "Step 68" siclog@
    // Set the cell type of Ncell 1 to the "Serving cell"
    // Set the cell type of Ncell 11 to the "Non-Suitable cell".
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell1, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell11, tsc_NonSuitableNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 69 - Void" siclog@
    
    //@siclog "Step 70-83b1" siclog@
    // Steps 1 - 14b1 of the generic procedure precified in TS 36.508 subclause 8.1.5.2.3 is performed: Step 14bX handled on next step of prose
    f_UT_SwitchOnUE(UT, true); //Step1 - Switch on the UE
    fl_NBIOT_InitialRegistration2to13_eDRX_PSM(nbiot_Cell1, v_T3324Value2Mins, cs_EDRXParams('0000'B,'0011'B), -, v_Guti_Params2, v_Tai2); //Table 22.5.18.3.3-13/14
    
    //@siclog "Step 84" siclog@
    //Check: Does the UE transmit an ATTACH COMPLETE?
    f_NBIOT_NAS_AttachComplete_CP (nbiot_Cell1, v_EpsDefaultBearerId); // @sic R5s170597 sic@
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 84");
    
    //@siclog "Step 85" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell1);
    
    //@siclog "Step 86" siclog@
    // SS transmits a Paging-NB message to the UE in a valid paging occasion in paging hyperframe as per Idle eDRX
    f_NBIOT_UE_Page_eDRX (nbiot_Cell1,
                          cs_NB_Paging_OneRecord(cs_PagingUE_Identity_S_TMSI(v_Guti_Params1.MME_Code, v_Guti_Params1.M_TMSI)),
                          0,  // PTW index value (2.56 sec)
                          3); // eDRX index value (40.96 sec)

    //@siclog "Step 87 - 90B" siclog@
    // Steps 87-88: Steps 2 to 3 of the NB-IoT Control Plane CIoT MT user data transfer non-SMS transport procedure (TS 36.508 8.1.5A.2.3) are executed.
    // Steps 89-90: Void
    // Step 90A : Check: Does the UE transmit a CONTROL PLANE SERVICE REQUEST according to step 4a1a1 or 4a1b1 in the generic procedure in TS 36.508 8.1.5A.2.3?
    // Step 90B: Steps 4a1b1 to 5 or only step 5 of the NB-IoT Control Plane CIoT MT user data transfer non-SMS transport procedure (TS 36.508 8.1.5A.2.3) are executed
    f_NBIOT_508Check_CP_ResponseToPagingForMTAccess_Step2_5(nbiot_Cell1);
    
    //@siclog "Step 91" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell1);
    
    //@siclog "Step 92" siclog@
    // Set the cell type of Ncell 1 to the "Non-Suitable cell"
    // Set the cell type of Ncell 11 to the "Serving cell"
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell11, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell1, tsc_NonSuitableNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 93" siclog@
    // The UE transmits a TRACKING AREA UPDATE REQUEST message including an Extended DRX parameters IE and the T3324 IE set to two minutes
    v_NasInd := f_NBIOT_RRC_ConnEst_DefWithNas(nbiot_Cell11,
                                               cr_EstablishmentCause_NB_Any,
                                               cr_NAS_Indication(tsc_SHT_IntegrityProtected,
                                                                 cdr_TAU_Request_ExtdDrx_T3324(tsc_EpsUpdate_TaUpdate,
                                                                                               f_NBIOT_SecurityKSIasme_Get(),
                                                                                               -,
                                                                                               cr_AdditionalUpdateType_CIOT ifpresent, // @sic R5s170812 Ch. 3 sic@
                                                                                               cr_MobileIdAny,
                                                                                               cr_TAI_Any,
                                                                                               cr_GPRS_Timer2_3('6A'O, tsc_GprsTimerUnit_1min, '00010'B), // Table 22.5.18.3.3-16
                                                                                               cr_ExtdDRXParamsAny)));
    
    v_EPS_ContextStatus := v_NasInd.Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.epsBearerContextStatus; // Send this back in the Accept
    
    //@siclog "Step 94" siclog@
    // The SS transmits a TRACKING AREA UPDATE ACCEPT message without an Extended DRX parameters IE but with the T3324 IE set to 2 minutes. GUTI-3 is included
    SRB.send(cas_NB_SRB_NasPdu_REQ(nbiot_Cell11,
                                   tsc_SRB1bis,
                                   cs_TimingInfo_Now,
                                   cs_NAS_Request(tsc_SHT_IntegrityProtected_Ciphered,
                                                  cs_TAU_Accept_Common(tsc_EpsUpdate_TaUpdate, // Table 22.5.18.3.3-17
                                                                       f_GutiParameters2MobileIdentity(tsc_IEI_Guti, v_Guti_Params3),
                                                                       cds_TAIListNonConsecutive_tlv (tsc_PLMN1, {tsc_TAC2}),
                                                                       v_EPS_ContextStatus,
                                                                       omit,//Lai
                                                                       omit,//MSId
                                                                       f_GetNBIOTAdditionalUpdateResult(v_NasInd.Pdu.Msg.tRACKING_AREA_UPDATE_REQUEST.addUpdateType),
                                                                       -, -, -,
                                                                       f_GetNBIOTNetworkFeatureSupport(CONTROL_PLANE),  // @sic R5-170563 sic@
                                                                       -, -, -,
                                                                       v_T3324Value2Mins)))); //T3324
    
    //@siclog "Step 95" siclog@
    //The UE transmits a TRACKING AREA UPDATE COMPLETE message
    SRB.receive(car_NB_SRB_NasPdu_IND(nbiot_Cell11,
                                      tsc_SRB1bis,
                                      cr_NAS_Indication(tsc_SHT_IntegrityProtected_Ciphered,
                                                        cr_508_TAU_Complete)));
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 95");
    
    //@siclog "Step 96" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell11);
    
    t_T3324.start; // @sic R5s170812 sic@
    t_T3324.timeout;
    
    //@siclog "Step 97" siclog@
    // When the T3324 timer expires the SS sends Paging message including a matched identity in a valid paging occasion as per normal DRX
    //@siclog "Step 98" siclog@
    // Check: Does the UE respond to the paging message?
    f_NBIOT_UE_Page_NoReaction(nbiot_Cell11,
                               cs_NB_Paging_OneRecord(cs_PagingUE_Identity_S_TMSI(v_Guti_Params3.MME_Code, v_Guti_Params3.M_TMSI)),
                               v_NoReactionTime);
    
    //@siclog "Step 99" siclog@
    // The UE is switched off
    f_NBIOT_CellInfo_SetGuti(nbiot_Cell11, v_Guti_Params3); // @sic R5s170611 R5s170812 Ch.1 sic@
    f_UT_SwitchOffUE(UT, false, CNF_REQUIRED);
    
    t_WaitForDetach.start;
    
    alt {
      [] SRB.check(receive(car_NB_SRB0_RrcPdu_IND(nbiot_Cell11, cr_RRCConnectionRequest_NB(cr_EstablishmentCause_NB_Any)))) {
         t_WaitForDetach.stop;
         f_NBIOT_UE_DetachMO(nbiot_Cell11);
         f_NBIOT_RRC_ConnectionRelease(nbiot_Cell11, CONTROL_PLANE);
        
         }
      [] t_WaitForDetach.timeout
      {
      }
    }
    
    //@siclog "Step 100" siclog@
    // Set the cell type of Ncell 1 to the "Serving cell"
    // Set the cell type of Ncell 11 to the "Non-Suitable cell".
    v_CellPowerList := {
      cs_NB_CellPower(nbiot_Cell1, tsc_ServingCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell11, tsc_NonSuitableNBIOTCellRS_EPRE)
    };
    f_NBIOT_SetCellPowerList(v_CellPowerList);
    
    //@siclog "Step 101" siclog@
    f_UT_SwitchOnUE(UT, true); //Step1 - Switch on the UE
    
    //@siclog "Steps 102-114b1" siclog@
    // Steps 2 - 14b1 of the generic procedure precified in TS 36.508 subclause 8.1.5.2.3 is performed: Step 14b1 handled on next step of prose
    fl_NBIOT_InitialRegistration2to13_eDRX_PSM(nbiot_Cell1, v_T3324Value2Mins, cs_EDRXParams('0000'B,'0011'B), true, v_Guti_Params3, v_Tai3); //Table 22.5.18.3.3-19/20
    
    //@siclog "Step 115" siclog@
    // Check: Does the UE transmit an ATTACH COMPLETE message including an Extended DRX parameters IE but without the T3324 IE?
    f_NBIOT_NAS_AttachComplete_CP(nbiot_Cell1, v_EpsDefaultBearerId); // @sic R5s170597 sic@
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 115");
    
    //@siclog "Step 115A" siclog@
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell1);
    
    //@siclog "Step 116" siclog@
    // SS sends a Paging message to the UE in a valid paging occasion in paging hyperframe as per Idle eDRX
    f_NBIOT_UE_Page_eDRX(nbiot_Cell1,
                         cs_NB_Paging_OneRecord(cs_PagingUE_Identity_S_TMSI(v_Guti_Params1.MME_Code, v_Guti_Params1.M_TMSI)),
                         0,  // PTW index value (2.56 sec)
                         3); // eDRX index value (40.96 sec)
   
    //@siclog "Step 117 - 120B" siclog@
    // Steps 117-118: Steps 2 to 3 of the NB-IoT Control Plane CIoT MT user data transfer non-SMS transport procedure (TS 36.508 8.1.5A.2.3) are executed.
    // Steps 119-120: Void
    // Step 120A : Check: Does the UE transmit a CONTROL PLANE SERVICE REQUEST according to step 4a1a1 or 4a1b1 in the generic procedure in TS 36.508 8.1.5A.2.3?
    // Step 120B: Steps 4a1b1 to 5 or only step 5 of the NB-IoT Control Plane CIoT MT user data transfer non-SMS transport procedure (TS 36.508 8.1.5A.2.3) are executed
    f_NBIOT_508Check_CP_ResponseToPagingForMTAccess_Step2_5(nbiot_Cell1);
    
    //@siclog "Step 121" siclog@
    //The SS releases the RRC connection.
    f_NBIOT_RRC_ConnectionRelease(nbiot_Cell1);
  }

  /*
   * @desc      REFERENCE TS 36.523-1 clause 22.5.18
   * @status    APPROVED (NBIOT)
   */
  function f_TC_22_5_18_NBIOT() runs on NBIOT_PTC
  { /* NB-IoT / Attach & Normal tracking area update Procedure / Success / without Idle eDRX parameters /
       With Idle eDRX parameters/ With and without Idle eDRX and PSM parameters */
    /* @sic R5-171207 R5s180124 R5s180153 sic@ */
    var template (value) GPRS_Timer2 v_T3324Value2Mins := cs_GPRS_Timer2_3_IEI('6A'O, tsc_GprsTimerUnit_1min, '00010'B);  //value = 2 mins
    
    f_NBIOT_Init(c2); // @sic R5s170611 sic@
    
    f_UT_SwitchOnUE(UT, false, CNF_REQUIRED);
    // The UE is configured to use Power Saving Mode
    // The UE is configured to set T3324 to two minutes
    f_UT_ConfigurePSM(UT, omit, omit, v_T3324Value2Mins, -, CNF_REQUIRED); // @sic R5s180172 sic@
    f_UT_SwitchOffUE(UT, false, CNF_REQUIRED);
    
    // create cell and send out system information
    f_NBIOT_CellConfig_Def(nbiot_Cell1, CONTROL_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell11, CONTROL_PLANE);
    // The UE is configured to use Power Saving Mode
    f_UT_SwitchOnUE(UT, false, CNF_REQUIRED);
    f_UT_ConfigureEDRX(UT, true, -, CNF_REQUIRED); // @sic R5-176154 sic@
    f_UT_SwitchOffUE(UT, false, CNF_REQUIRED); // @sic R5s180536 sic@

    
    // Preamble: The UE is in State 1-NB "Switched OFF"
    // The UE is previously registered on E-UTRAN, and when on E-UTRAN, the UE is last authenticated and registered on the NB-IoT cell using default message contents according to TS 36.508 [18]
    // UE is configured to request the use of eDRX (in the ATTACH REQUEST and TRACKING AREA UPDATE messages)
    // The UE is configured to set T3324 to two minutes
    // ==========================================================================
    f_NBIOT_Preamble(nbiot_Cell1, CONTROL_PLANE);
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell1, CONTROL_PLANE, RRC_CONNECTED);
    f_NBIOT_SetCellPower(nbiot_Cell11, tsc_NonSuitableNBIOTCellRS_EPRE);
    
    f_NBIOT_TestBody_Set(true);
    
    fl_TC_22_5_18_Body();
    

    
    // Postamble
    f_NBIOT_TestBody_Set(false);
    f_NBIOT_Postamble (nbiot_Cell1, CONTROL_PLANE, N1_IDLE);
  }

}
