/******************************************************************************/
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3 v15.3.0
// $Date: 2019-03-16 19:54:08 +0100 (Sat, 16 Mar 2019) $
// $Rev: 24094 $
/******************************************************************************/
//------------------------------------------------------------------------------
//* History:
//*   @sic R5-096657   Added SMS command DELETE_MESSAGE_WITHFLAG sic@
//------------------------------------------------------------------------------

module MTC_UpperTester {

  import from CommonDefs all;
  import from MTC_Base all;
  import from UpperTesterCommon all;
  import from UpperTesterPtcToMtcDefs all;
  import from UpperTesterSystemCmds all;

  /*
   * @desc      handles the commands being sent by the PTCs (UT_COMMON_CMD);
   *            the commands may either be mapped to AT or to MMI commands
   * @param     p_CoordPortIndex    ..   refers to respective PTC
   * @param     p_UT_Req
   * @return    template (value) UT_SYSTEM_REQ
   * @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN)
   */
  function fl_UT_HandleCmd(integer p_CoordPortIndex,
                           UT_COMMON_CMD p_UT_Req) runs on MTC_BASE return template (value) UT_SYSTEM_REQ
  {  /* @sic R5-113037: Introduction of positioning test cases sic@ */
    var template (omit) Ut_ParameterList_Type v_ParamList := p_UT_Req.ParameterList;
    var boolean v_UeToBeSwitchedOn := f_MTC_BASE_UE_SwitchedOn_Get();
    var Ut_CnfReq_Type v_CnfRequired := p_UT_Req.CnfReq;
    var template (value) Ut_System_Cmd_Type v_SystemCmd;
    var Ut_ParameterList_Type v_ParamListVal;
    
    if (f_MTC_BASE_IsWaitingForCnf()) {     // check that there is no AT or MMI command is ongoing
      FatalError (__FILE__, __LINE__, "unexpected Upper Tester command (other command is still pending)");
    }

    if (isvalue(v_ParamList)) {
      v_ParamListVal := valueof(v_ParamList);
    }

    if (f_UT_CommandRequiresCnf(v_CnfRequired)) {
      // store index of coordination to be used for sending back the confirmation
      f_MTC_BASE_CoordPortIndex_Set(p_CoordPortIndex);
    } // @sic R5-151792 sic@
    select (p_UT_Req.Cmd) {
      case (POWER_OFF) {
        v_UeToBeSwitchedOn := false;
        v_SystemCmd := cs_MMI_POWER_OFF;
      }
      case (POWER_ON) {
        v_UeToBeSwitchedOn := true;
        v_SystemCmd := cs_MMI_POWER_ON;
      }
      case (SWITCH_OFF) {
        v_UeToBeSwitchedOn := false;
        v_SystemCmd := cs_MMI_SWITCH_OFF;
      }
      case (SWITCH_ON) {
        v_UeToBeSwitchedOn := true;
        v_SystemCmd := cs_MMI_SWITCH_ON;
      }
      case (CONFIGURE_CEMODE) {
        v_SystemCmd := cs_AT_CEMODE (v_ParamListVal[0].Value); // @sic R5-106675 sic@
      }
      case (CONFIGURE_OPERATIONMODE)  {
        v_SystemCmd := cs_MMI_CONFIGURE_OPERATIONMODE (v_ParamList);
      }
      case (DISABLE_EPS) {
        v_SystemCmd := cs_MMI_DISABLE_EPS;
      }
      case (CONFIGURE_SMS_ONLY) {
        v_SystemCmd := cs_MMI_CONFIGURE_SMS_ONLY;
      }
      case ( POWER_CYCLE) {
          v_SystemCmd := cs_MMI_POWER_CYCLE;
      }
      case (CONFIGURE_PSM) {
        v_SystemCmd := cs_CONFIGURE_PSM(v_ParamListVal);     // @sic R5w170308 sic@
      }
      case (TRIGGER_MO_EXCEPTIONDATA) {
        v_SystemCmd := cs_TRIGGER_MO_EXCEPTIONDATA(v_ParamListVal);     // @sic R5w170308 sic@
      }
       case (ADMIN_APP_STATE_IDLE) {
          v_SystemCmd := cs_MMI_ADMIN_APP_STATE_IDLE;
      }
        case (INTERNET_APP_TRANSMIT_STATE_ON) {
          v_SystemCmd := cs_MMI_INTERNET_APP_TRANSMIT_STATE_ON;
      }
      case (CONFIGURE_EDRX) {
        v_SystemCmd := cs_AT_CONFIGURE_EDRX(v_ParamListVal);     // @sic R5w170308 sic@
      }
      case (INSERT_USIM_OR_PRECONFIGURE) {
        v_SystemCmd := cs_MMI_INSERT_USIM_OR_PRECONFIGURE(v_ParamList);
      }
      case (INSERT_USIM) {
        v_SystemCmd := cs_MMI_INSERT_USIM(v_ParamList);        // @sic R5-123085 harmonisation of IMS sic@
      }
      case (REMOVE_USIM) {
        v_SystemCmd := cs_MMI_REMOVE_USIM;
      }
      case (IMS_INITIATE_CONFERENCE) {
        v_SystemCmd := cs_MMI_INITIATE_CONFERENCE;
      }
      case (INVITE_TO_CONFERENCE) {
        v_SystemCmd := cs_MMI_INVITE_TO_CONFERENCE(v_ParamList);
      }
      case (REQUEST_CALL) {
        v_SystemCmd := cs_AT_DIAL_CALL (v_ParamListVal[0].Value);
      }
      case (CHECK_PLMN)  {
        v_SystemCmd := cs_MMI_CHECK_PLMN (v_ParamList);
      }
      case (CHECK_CSG)  {
        v_SystemCmd := cs_MMI_CHECK_CSG (v_ParamList);
      }
      case (DEFINE_EPS_QOS)  {
        v_SystemCmd := cs_AT_DEFINE_EPS_QOS (v_ParamListVal[0].Value);
      }
      case (DEFINE_TFT)  {
        v_SystemCmd := cs_AT_DEFINE_TFT (v_ParamListVal[0].Value);
      }
      case (REQUEST_DED_BEARER)  {
        v_SystemCmd := cs_AT_REQUEST_DED_BEARER (v_ParamListVal);
      }
      case (ACTIVATE_BEARER)  {
        v_SystemCmd := cs_AT_ACTIVATEBEARER (v_ParamListVal);
      }
      case (PLMN_AUTOMATIC)  {
        v_SystemCmd := cs_AT_PLMN_AUTOMATIC; // @sic R5-106675 sic@
      }
      case (PLMN_MANUAL) {
        v_SystemCmd := cs_AT_SET_PLMN_MANUAL (v_ParamListVal[0].Value); // @sic R5-106675 sic@
      }
      case (SELECT_CSG) { // @sic R5-106675 sic@
        v_SystemCmd := cs_MMI_CSG_PLMN (v_ParamListVal);
      }
      case ( APP_TRANSMIT_STATE_OFF)  {
          v_SystemCmd := cs_APP_TRANSMIT_STATE_OFF(v_ParamListVal);
      }
      case (REQUEST_PDPCONTEXT)  {
        log("v_ParamListVal=",v_ParamListVal);
        v_SystemCmd := cs_AT_REQUEST_PDPCONTEXT(v_ParamListVal);
      }
      case (DEACTIVATE_BEARER)  {
        v_SystemCmd := cs_AT_DEACTIVATEBEARER(v_ParamListVal);
      }
      case (DEACTIVATE_ADMIN_APN) {
          v_SystemCmd := cs_MMI_DEACTIVATE_ADMIN_APN;
      }
      case (DEACTIVATE_INTERNET_APN) {
          v_SystemCmd := cs_MMI_DEACTIVATE_INTERNET_APN;
      }
      case (ACTIVATE_INTERNET_APN) {
          v_SystemCmd := cs_MMI_ACTIVATE_INTERNET_APN;
      }
      case (MODIFY_BEARER)  {
        v_SystemCmd := cs_AT_MODIFYBEARER(v_ParamListVal);
      }
      case (ATTACH)  {
        v_SystemCmd := cs_AT_REQUEST_ATTACH;
      }
      case (DETACH)  {
        v_SystemCmd := cs_AT_REQUEST_DETACH;
      }
      case (DELETE_MESSAGE_WITHFLAG)  {
        v_SystemCmd := cs_AT_DELETE_MESSAGE_DELFLAG (v_ParamListVal);
      }
      case (SELECT_MESSAGE_SERVICE)  {
        v_SystemCmd := cs_AT_SELECT_MESSAGE_SERVICE (v_ParamListVal[0].Value);
      }
       case ( APP_TRANSMIT_STATE_ON)  {
          v_SystemCmd := cs_APP_TRANSMIT_STATE_ON(v_ParamListVal);
      }
      case (SET_PREFERRED_STORAGE)  {
        v_SystemCmd := cs_AT_SET_PREFERRED_STORAGE (v_ParamListVal);
      }
      case (MESSAGE_FORMAT)  {
        v_SystemCmd := cs_AT_MESSAGE_FORMAT (v_ParamListVal[0].Value);
      }
      case (SELECT_CHARACTER_SET)  {
        v_SystemCmd := cs_AT_SELECT_CHARACTER_SET (v_ParamListVal[0].Value);
      }
      case (SERVICE_CENTRE_ADDRESS)  {
        v_SystemCmd := cs_AT_SERVICE_CENTRE_ADDRESS (v_ParamListVal);
      }
      case (WRITE_MESSAGE_TOMEMORY_TEXTMODE)  {
        v_SystemCmd := cs_AT_MESSAGE_WRITE_TEXTMODE (v_ParamListVal);
      }
      case (WRITE_MESSAGE_TOMEMORY_PDUMODE)  { // @sic R5s110750 sic@
        v_SystemCmd := cs_AT_MESSAGE_WRITE_PDUMODE (v_ParamListVal);
      }
      case (SEND_STORED_MESSAGE_ONE)  {
        v_SystemCmd := cs_AT_SEND_STORED_ONEMESSAGE (v_ParamListVal[0].Value);
      }
      case (SET_TEXTMODE_PARAMETERS)  {
        v_SystemCmd := cs_AT_SET_TEXTMODE_PARAMETERS (v_ParamListVal);
      }
      case (CHECK_MESSAGE_DISPLAYED)  {
        v_SystemCmd := cs_MMI_CHECK_MESSAGE_DISPLAYED (v_ParamListVal);
      }
      case (DEFINE_QOS)  {
        v_SystemCmd := cs_AT_QOS_PROFILE_REQUESTED (v_ParamListVal);
      }
      case (CHECK_CLOCK)  {
        v_SystemCmd := cs_AT_CHECK_CLOCK;
      }
      case (CHECK_NITZ_DST)  {
        v_SystemCmd := cs_MMI_CHECK_NITZ_DST (v_ParamListVal);
      }
      case (CHECK_OPERATOR_NAME)  {
        v_SystemCmd := cs_AT_CHECK_OPERATOR_NAME (v_ParamListVal);
      }
      case (ANSWER_CALL)  {
        v_SystemCmd := cs_AT_ANSWER_CALL;
      }
      case (RELEASE_CALL)  {
        v_SystemCmd := cs_AT_RELEASE_CALL;
      }
      case (CHECK_ETWS_INDICATION)  {
        v_SystemCmd := cs_MMI_CHECK_ETWS_INDICATION (v_ParamListVal);
      }
      case (CHECK_ETWS_NO_INDICATION)  { // @sic R5s130376 sic@
        v_SystemCmd := cs_MMI_CHECK_ETWS_NO_INDICATION (v_ParamListVal);
      }
      case (CHECK_ETWS_ALERT)  {
        v_SystemCmd := cs_MMI_CHECK_ETWS_ALERT;
      }
      case (CHECK_ETWS_NO_ALERT)  {
        v_SystemCmd := cs_MMI_CHECK_ETWS_NO_ALERT;
      }
      case (CHECK_CMAS_INDICATION)  {
        v_SystemCmd := cs_MMI_CHECK_CMAS_INDICATION (v_ParamListVal);
      }
      case (CHECK_CMAS_NO_INDICATION)  { // @sic R5s130376 sic@
        v_SystemCmd := cs_MMI_CHECK_CMAS_NO_INDICATION (v_ParamListVal)
      }
      case (CHECK_CMAS_ALERT)  {
        v_SystemCmd := cs_MMI_CHECK_CMAS_ALERT;
      }
      case (INITIATE_INTERNET_TEST_APP) {
          v_SystemCmd := cs_MMI_INITIATE_INTERNET_TEST_APP;
      }
      case (CHECK_CMAS_NO_ALERT)  {
        v_SystemCmd := cs_MMI_CHECK_CMAS_NO_ALERT;
      }
      case (CHECK_DTCH_THROUGHCONNECTED)  {
        v_SystemCmd := cs_MMI_CHECK_DTCH;
      }
      case (GERAN_UPLINK_DATA)  {
        v_SystemCmd := cs_MMI_GERAN_DATA;
      }
      case (TRIGGER_MOLR)  {
        v_SystemCmd := cs_AT_TRIGGER_MOLR (v_ParamListVal);
      }
      case (REQUEST_IMS_VOICE_CALL, REQUEST_IMS_EMERGENCY_CALL)  {
        v_SystemCmd := cs_AT_IMS_VOICE_CALL (v_ParamListVal[0].Value);
      }
      case (REQUEST_IMS_VOICE_CALL_OIR)  {
        v_SystemCmd := cs_AT_IMS_VOICE_CALL_OIR (v_ParamListVal[0].Value);
      }
      case (RELEASE_IMS_CALL)  {
        v_SystemCmd := cs_AT_RELEASE_IMS_CALL (v_ParamListVal[0].Value);
      }
      case (INITIATE_VIDEO_CALL)  {
        v_SystemCmd := cs_AT_START_IMS_VIDEO_CALL(v_ParamListVal[0].Value, v_ParamListVal[1].Value);
      }
      case (IMS_CONFIGURE_VIDEO_CALL)  {
        v_SystemCmd := cs_AT_IMS_CONFIGURE_VIDEO_CALL;
      }
     case (IMS_MODIFY_CALL)  {
        v_SystemCmd := cs_AT_IMS_MODIFY_CALL (v_ParamListVal);
      }
      case (CLEAR_STORED_ASSISTANCE_DATA)  {
        v_SystemCmd := cs_MMI_CLEAR_STORED_DATA;
      }
      case (DETACH_NON_EPS) {
        v_SystemCmd := cs_MMI_DETACH_NON_EPS;
      }
     case (LOCATION_SUBSCRIBE)  {
        v_SystemCmd := cs_AT_LOCATION_SUBSCRIBE (v_ParamListVal);
      }
      case (LOCATION_ANSWER)  {
        v_SystemCmd := cs_AT_LOCATION_ANSWER (v_ParamListVal);
      }
      case (LOCATION_INFO)  {
        v_SystemCmd := cs_MMI_LOCATION_INFO;
      }
      case (CNAP_DUMMY)  { //@sic R5-151792 sic@
        v_SystemCmd := cs_MMI_CNAP_DUMMY (v_ParamListVal); // @sic R5s160970 sic@
      }
      case (CCFC_DUMMY)  { // @sic R5-151792 sic@
        v_SystemCmd := cs_MMI_CCFC_DUMMY(v_ParamListVal); // @sic R5s160970 sic@
      }
      case (CMTLR_DUMMY)  { // @sic R5-151792 sic@
        v_SystemCmd := cs_MMI_CMTLR_DUMMY (v_ParamListVal); // @sic R5s160970 sic@
      }
      case (CTZE_DUMMY)  { // @sic R5-151792 sic@
        v_SystemCmd := cs_MMI_CTZE_DUMMY (v_ParamListVal); // @sic R5s160970 sic@
      }
      case (CMWN_DUMMY)  { // @sic R5-151792 sic@
        v_SystemCmd := cs_MMI_CMWN_DUMMY;
      }
     case (TIMEZONE_SUBSCRIBE)  {
        v_SystemCmd := cs_AT_TIMEZONE_SUBSCRIBE (v_ParamListVal);
      }
     case (TIMEZONE_UPDATE)  {
        v_SystemCmd := cs_AT_TIMEZONE_UPDATE (v_ParamListVal);
      }
     case (ACTIVATE_MESSAGE_WAIT_INDICATION)  {
        v_SystemCmd := cs_AT_ACTIVATE_MESSAGE_WAIT_INDICATION;
      }
       case (ADD_ADMIN_APN) {
          v_SystemCmd := cs_MMI_ADD_ADMIN_APN;
      }
      case (HRPD_PDN_CONNECTION)  { // @sic R5s120051 sic@
        v_SystemCmd := cs_MMI_HRPD_PDN_CONNECTION;
      }
      case (GET_EMERGENCY_NUMS_1)  {
        v_SystemCmd := cs_AT_GET_EMERGENCY_NUMS_1;
      }
      case (GET_EMERGENCY_NUMS_2)  {
        v_SystemCmd := cs_AT_GET_EMERGENCY_NUMS_2;
      }
      case (TRIGGER_USER_RESELECTION)  {
        v_SystemCmd := cs_MMI_TRIGGER_USER_RESELECTION;
      }
      case (REQUEST_NON_CALL_RELATED_SS)  {
        v_SystemCmd := cs_MMI_REQUEST_NON_CALL_RELATED_SS;
      }
      case (SEND_3_STORED_MESSAGES)  {
        v_SystemCmd := cs_AT_SEND_STORED_3_MESSAGES(v_ParamListVal);
      }
      case (D2D_DISCOVERY)  {
        v_SystemCmd := cs_MMI_D2D_DISCOVERY (v_ParamListVal);
      }
      case (D2D_DISCOVERY_CLEAR)  {
        v_SystemCmd := cs_MMI_D2D_DISCOVERY_CLEAR;
      }
      case (D2D_DISCOVERY_CONFIGURATION)  {
        v_SystemCmd := cs_MMI_D2D_DISCOVERY_CONFIG (v_ParamListVal);
      }
      case (D2D_COMMUNICATION)  {
        v_SystemCmd := cs_MMI_D2D_COMMUNICATION (v_ParamListVal);
      }
      case (D2D_COMMUNICATION_CONFIGURATION)  {
        v_SystemCmd := cs_MMI_D2D_COMMUNICATION_CONFIG (v_ParamListVal);
      }
      case (MBMS_SERVICE_INTEREST)  { // @sic R5-135000 sic@
        v_SystemCmd := cs_MMI_MBMS_SERVICE_INTEREST (v_ParamListVal);
      }
      case (MBMS_SERVICE_ACTIVE)  { // @sic R5-142985 sic@
        v_SystemCmd := cs_MMI_MBMS_SERVICE_ACTIVE (v_ParamListVal);
      }
      case (MBMS_PRIORITY_OVER_UNICAST)  { // @sic R5-142985 sic@
        v_SystemCmd := cs_MMI_MBMS_PRIORITY_OVER_UNICAST (v_ParamListVal);
      }
      case (CONFIGURE_ANDSF_RULE)  {
        v_SystemCmd := cs_MMI_CONFIGURE_ANDSF_RULE (v_ParamListVal);
      }
      case (SUPPLEMENTARY_SERVICE)  {
        v_SystemCmd := fl_ProcessSupplementaryService (v_ParamListVal);
      }
      case (IMS_TIR)  {
       if (v_ParamListVal[0].Value == "Activate") {
          v_SystemCmd := cs_MMI_ACTIVATE_IMS_TIR;
        } else {
          v_SystemCmd := cs_MMI_DEACTIVATE_IMS_TIR;
        }
      }
      case (POWER_PREFERENCE)  {
        v_SystemCmd := cs_AT_POWER_PREFERENCE (v_ParamListVal);
      }
      case (ACCEPT_MTSI_TEXT)  {
        v_SystemCmd := cs_MMI_ACCEPT_MTSI_TEXT;
      }
      case (DEREGISTER)  {
        v_SystemCmd := cs_MMI_DEREGISTER;
      }
      case (TRIGGER_SMS)  {
        v_SystemCmd := cs_MMI_TRIGGER_SMS;
      }
      case (TRIGGER_2ND_IMPU)  {
        v_SystemCmd := cs_MMI_TRIGGER_2ND_IMPU;
      }
      case (TRIGGER_3RD_IMPU)  {
        v_SystemCmd := cs_MMI_TRIGGER_3RD_IMPU;
      }
      case (REFRESH)  {
        v_SystemCmd := cs_MMI_REFRESH;
      }
      case (CALL_HOLD_RELEASE)  {
        v_SystemCmd := cs_AT_SS_CALL_HOLD("0");
      }
      case (CALL_HOLD)  {
        if (isvalue(v_ParamList)) {
          v_SystemCmd := cs_AT_SS_CALL_HOLD("2" & v_ParamListVal[0].Value);
        } else {
          v_SystemCmd := cs_AT_SS_CALL_HOLD("2");
        }
      }
      case (CALL_RESUME)  {
        if (isvalue(v_ParamList)) {
          v_SystemCmd := cs_AT_SS_CALL_HOLD("1" & v_ParamListVal[0].Value);
        } else {
        v_SystemCmd := cs_AT_SS_CALL_HOLD("1");
        }
      }
      case (CALL_MPTY)  {
        v_SystemCmd := cs_AT_SS_CALL_HOLD("3");
      }
      case (CALL_ECT)  {
        v_SystemCmd := cs_AT_SS_CALL_HOLD("4");
      }
      case (IMS_CALL_ECT)  {
        v_SystemCmd := cs_MMI_IMS_CALL_ECT(v_ParamListVal);
      }
      case (CHECK_CALL_DISPLAY)  {
        v_SystemCmd := cs_MMI_CHECK_CALL_DISPLAY (v_ParamListVal);
      }
      case (CHECK_RESPONSE_DISPLAY)  {
        v_SystemCmd := cs_MMI_CHECK_RESPONSE_DISPLAY (v_ParamListVal);
      }
      case (CHECK_SS_USER_IND_FAILURE)  {
        v_SystemCmd := cs_MMI_CHECK_SS_USER_IND_FAILURE;
      }
      case (CHECK_SS_USER_IND)  {
        v_SystemCmd := cs_MMI_CHECK_SS_USER_IND (v_ParamListVal);
      }
      case (WLAN_ANDSF_NOT_CONFIGURED)  {
        v_SystemCmd := cs_MMI_WLAN_ANDSF_NOT_CONFIGURED;
      }
      case (WLAN_ANDSF_CONFIGURED)  {
        v_SystemCmd := cs_MMI_WLAN_ANDSF_CONFIGURED (v_ParamListVal);
      }
      case (UTC_RESET)  {
        v_SystemCmd := cs_AT_UTC_RESET;
      }
      case (ACTIVATE_TEST_MODE_E)  {
        v_SystemCmd := cs_AT_ACTIVATE_TEST_MODE_E (v_ParamListVal[0].Value);
      }
      case (CLOSE_TEST_MODE_E)  {
        v_SystemCmd := cs_AT_CLOSE_TEST_MODE_E (v_ParamListVal[0].Value);
      }
      case (SIDELINK_PACKET_COUNTER)  {
        v_SystemCmd := cs_AT_SIDELINK_PACKET_COUNTER;
      }
      case (V2X_SPS_AIR)  {
        v_SystemCmd := cs_AT_SPS_AIR (v_ParamListVal[0].Value);
      }
      case (V2X_CBR_REQ)  {
        v_SystemCmd := cs_AT_CBR_REQ;
      }
      case (V2X_DATA_OVER_PC5)  {
        v_SystemCmd := cs_AT_DATA_OVER_PC5 (v_ParamListVal[0].Value);
      }
      case (V2X_SIDELINK)  {
        v_SystemCmd := cs_MMI_V2X_SIDELINK (v_ParamListVal);
      }
      case (MCX_PTT)  {
        v_SystemCmd := cs_AT_MCX_PTT (v_ParamListVal[0].Value);
      }
      case (MCX_GROUP_CALL)  {
        v_SystemCmd := cs_MMI_MCX_GROUP_CALL (v_ParamListVal);
      }
      case (MCX_USERACTION)  {
        v_SystemCmd := cs_MMI_MCX_USERACTION (v_ParamListVal);
      }
      case (MCX_USERCHECK)  {
        v_SystemCmd := cs_MMI_MCX_USERCHECK (v_ParamListVal);
      }
      case (ECALL)  {
        v_SystemCmd := cs_AT_ECALL (v_ParamListVal[0].Value);
      }
      case (APPLAYER_MEASREPORT)  {
        v_SystemCmd := cs_AT_APPLAYER_MEASREPORT (v_ParamListVal);
      }
        case (INITIATE_ADMIN_TEST_APP) {//VZW NBIOT 
          v_SystemCmd := cs_MMI_INITIATE_ADMIN_TEST_APP;
      }
      case (DISABLE_INTERNET_APN) {
          v_SystemCmd := cs_MMI_DISABLE_INTERNET_APN;
      } 
      case (ENABLE_INTERNET_APN) {
          v_SystemCmd := cs_MMI_ENABLE_INTERNET_APN;
      }
      case (ENABLE_ADMIN_APN) {
          v_SystemCmd := cs_MMI_ENABLE_ADMIN_APN;
      }   
      case (DISABLE_ADMIN_APN) {
          v_SystemCmd := cs_MMI_DISABLE_ADMIN_APN;
      }  
        case (RESET_FRBDN_PLMN)  {
        v_SystemCmd := cs_MMI_RESET_FRBDN_PLMN;
      } 
   }

    f_MTC_BASE_UE_SwitchedOn_Set(v_UeToBeSwitchedOn);  // UE needs to be switched on or off

    return cas_UT_SYSTEM_REQ(v_SystemCmd, v_CnfRequired);
  }

  /*
   * @desc      To process the supplementary service command
   * @param     p_ParamList
   * @return    template (value) Ut_System_Cmd_Type
   * @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN)
   */
  function fl_ProcessSupplementaryService(Ut_ParameterList_Type p_ParamList) return template (value) Ut_System_Cmd_Type
  {
    var template (value) Ut_System_Cmd_Type v_SystemCmd;
    
    select (p_ParamList[0].Value){
      case (tsc_UT_SS_CALL_FORWARDING_UNCONDITIONAL,
            tsc_UT_SS_CALL_FORWARDING_NO_REPLY,
            tsc_UT_SS_CALL_FORWARDING_BUSY,
            tsc_UT_SS_CALL_FORWARDING_NOT_LOGGED_IN,
            tsc_UT_SS_CALL_FORWARDING_NOT_REACHABLE,
            tsc_UT_SS_CALL_FORWARDING_ALL,
            tsc_UT_SS_CALL_FORWARDING_ALL_CONDITIONAL,
            tsc_UT_SS_CALL_FORWARDING_DEFLECTION,
            tsc_UT_SS_CALL_FORWARDING_DIVERSION_NOTIFICATION) {
        v_SystemCmd := fl_SS_CallForward (p_ParamList);
      }
      case (tsc_UT_SS_CLIP) {
        select (p_ParamList[1].Value) {
          case (tsc_UT_SS_DEACTIVATE) {
            v_SystemCmd := cs_AT_SS_CLIP ("=0");
          } case (tsc_UT_SS_QUERY) {
            v_SystemCmd := cs_AT_SS_CLIP ("?");
          } case else {
            v_SystemCmd := cs_AT_SS_CLIP ("=1");
          }
        }
      }
      case (tsc_UT_SS_CLIR) {
        select (p_ParamList[1].Value) {
          case (tsc_UT_SS_DEACTIVATE) {
            v_SystemCmd := cs_AT_SS_CLIR ("=2");
          } case (tsc_UT_SS_QUERY) {
            v_SystemCmd := cs_AT_SS_CLIR ("?");
          } case else {
            v_SystemCmd := cs_AT_SS_CLIR ("=1");
          }
        }
      }
      case (tsc_UT_SS_COLP) {
        select (p_ParamList[1].Value) {
          case (tsc_UT_SS_DEACTIVATE) {
            v_SystemCmd := cs_AT_SS_COLP ("=0");
          } case (tsc_UT_SS_QUERY) {
            v_SystemCmd := cs_AT_SS_COLP ("?");
          } case else {
            v_SystemCmd := cs_AT_SS_COLP ("=1");
          }
        }
      }
      case (tsc_UT_SS_CNAP) {
        select (p_ParamList[1].Value) {
          case (tsc_UT_SS_DEACTIVATE) {
            v_SystemCmd := cs_AT_SS_CNAP ("=0");
          } case (tsc_UT_SS_QUERY) {
            v_SystemCmd := cs_AT_SS_CNAP ("?");
          } case else {
            v_SystemCmd := cs_AT_SS_CNAP ("=1");
          }
        }
      }
      case (tsc_UT_SS_INCOMING_COMMUNICATION_BARRING,
            tsc_UT_SS_INCOMING_COMMUNICATION_BARRING_ROAMING,
            tsc_UT_SS_OUTGOING_COMMUNICATION_BARRING,
            tsc_UT_SS_OUTGOING_INTERNATIONAL_BARRING,
            tsc_UT_SS_OUTGOING_INTERNATIONAL_EX_HC_BARRING,
            tsc_UT_SS_ALL_BARRING_SERVICES_AB,
            tsc_UT_SS_ALL_OUTGOING_BARRING_SERVICES_AG,
            tsc_UT_SS_ALL_INCOMING_BARRING_SERVICES_AC) {
        v_SystemCmd := cs_AT_SS_LOCK (fl_FacilityLock(p_ParamList));
      }
      case (tsc_UT_SS_CALL_WAITING) {
        select (p_ParamList[1].Value) {
          case (tsc_UT_SS_DEACTIVATE) {
            v_SystemCmd := cs_AT_SS_CALL_WAITING ("0,0," &p_ParamList[2].Value);
          } case (tsc_UT_SS_QUERY) {
            v_SystemCmd := cs_AT_SS_CALL_WAITING ("1,2");
          } case else {
            v_SystemCmd := cs_AT_SS_CALL_WAITING ("1,1," &p_ParamList[2].Value);
          }
        }
      }
      case (tsc_UT_SS_USSD) {
        v_SystemCmd := cs_AT_SS_USSD (p_ParamList[2].Value);
      }
      case (tsc_UT_SS_PASSWORD) {
        v_SystemCmd := cs_AT_SS_PASSWORD (fl_ConvertBarringService(p_ParamList[1].Value) & ",""" &
                                          p_ParamList[2].Value & """,""" & // old password
                                          p_ParamList[3].Value & """"); // new password
      }
      case else {
         v_SystemCmd :=  cs_MMI_ACTIVATE_SS (p_ParamList);
       }
    }
    return v_SystemCmd;
  }

  /*
   * @desc      Convert call barring service for AT command
   * @param     p_ParamList
   * @return    charstring
   * @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN)
   */
  function fl_FacilityLock (Ut_ParameterList_Type p_ParamList) return charstring
  {
    var charstring v_Mode := "";
    var charstring v_Cmd := fl_ConvertBarringService (p_ParamList[0].Value);

    select (p_ParamList[1].Value) {
      case (tsc_UT_SS_DEACTIVATE) {
        v_Mode := "0";
      } case (tsc_UT_SS_QUERY) {
        v_Mode := "2";
      } case else {
        v_Mode := "1";
      }
    }
    v_Cmd := v_Cmd & "," & v_Mode;
    
    if (ispresent(p_ParamList[2])) {
      if (p_ParamList[2].Name == "Password") {
        v_Cmd := v_Cmd & ",""" & p_ParamList[2].Value & """";
      } else { // must be class
        v_Cmd := v_Cmd & ",," & p_ParamList[2].Value; // @sic R5s150084 sic@
      }
    }
    if (ispresent(p_ParamList[3])) { // class
      v_Cmd := v_Cmd & "," & p_ParamList[3].Value;  // @sic R5s150084 sic@
    }
    
    return v_Cmd;
  }

  /*
   * @desc      Convert call barring service for AT command
   * @param     p_BarringService
   * @return    charstring
   * @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN)
   */
  function fl_ConvertBarringService(charstring p_BarringService) return charstring
  {
    var charstring v_Facility  := "";
    
    select (p_BarringService) {
      case (tsc_UT_SS_INCOMING_COMMUNICATION_BARRING) {
        v_Facility := """AI""";
      }
      case (tsc_UT_SS_INCOMING_COMMUNICATION_BARRING_ROAMING) {
        v_Facility := """IR""";
      }
      case (tsc_UT_SS_OUTGOING_COMMUNICATION_BARRING) {
        v_Facility := """AO""";
      }
      case (tsc_UT_SS_OUTGOING_INTERNATIONAL_BARRING) {
        v_Facility := """OI""";
      }
      case (tsc_UT_SS_OUTGOING_INTERNATIONAL_EX_HC_BARRING) {
        v_Facility := """OX""";
      }
      case (tsc_UT_SS_ALL_BARRING_SERVICES_AB) {
        v_Facility := """AB""";
      }
      case (tsc_UT_SS_ALL_OUTGOING_BARRING_SERVICES_AG) {
        v_Facility := """AG""";
      }
      case (tsc_UT_SS_ALL_INCOMING_BARRING_SERVICES_AC) {
        v_Facility := """AC""";
      }
    }
    return v_Facility;
  }

  /*
   * @desc      Activate/Deactivate call forwarding
   * @param     p_ParamList
   * @return    template (value) Ut_System_Cmd_Type
   * @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN)
   */
  function fl_SS_CallForward(Ut_ParameterList_Type p_ParamList) return template (value) Ut_System_Cmd_Type
  {
    var charstring v_CmdString := "";
    var charstring v_Reason;
    var charstring v_Mode;
    var boolean v_UseURIVersion := false; // @sic R5s160903 sic@
    
    select (p_ParamList[0].Value) {
      case (tsc_UT_SS_CALL_FORWARDING_UNCONDITIONAL) {
        v_Reason := "0";
      }
      case (tsc_UT_SS_CALL_FORWARDING_BUSY) {
        v_Reason := "1";
      }
      case (tsc_UT_SS_CALL_FORWARDING_NO_REPLY) {
        v_Reason := "2";
      }
      case (tsc_UT_SS_CALL_FORWARDING_NOT_REACHABLE) {
        v_Reason := "3";
      }
      case (tsc_UT_SS_CALL_FORWARDING_ALL) {
        v_Reason := "4";
      }
      case (tsc_UT_SS_CALL_FORWARDING_ALL_CONDITIONAL) {
        v_Reason := "5";
      }
      case (tsc_UT_SS_CALL_FORWARDING_DEFLECTION) {
        v_Reason := "6";
      }
      case (tsc_UT_SS_CALL_FORWARDING_NOT_LOGGED_IN) {
        v_Reason := "7";
      }
      case (tsc_UT_SS_CALL_FORWARDING_DIVERSION_NOTIFICATION) {
        v_Reason := "8";
      }
    }
    select (p_ParamList[1].Value) {
      case (tsc_UT_SS_DEACTIVATE) {
        v_Mode := "0";
      } case (tsc_UT_SS_ACTIVATE) {
        v_Mode := "1";
      } case (tsc_UT_SS_QUERY) {
        v_Mode := "2";
      } case (tsc_UT_SS_REGISTER) {
        v_Mode := "3";
      } case (tsc_UT_SS_DELETE) {
        v_Mode := "4";
      }
    }
    v_CmdString := v_Reason & "," & v_Mode & ","; // @sic R5s150244 sic@

    if (p_ParamList[2].Name == "Uri") { // @sic R5s160903 sic@
      v_CmdString := v_CmdString & "1,0,""" & p_ParamList[2].Value & """";  // URI @sic R5s150244, R5s160127, R5s170135 sic@
      v_UseURIVersion := true;
    } else {
      if (p_ParamList[2].Value == "omit") { // @sic R5s160913 sic@
        v_CmdString := v_CmdString & ",";
      } else {
        v_CmdString := v_CmdString & """" & p_ParamList[2].Value & """";  // number @sic R5s150244, R5s160127 sic@
        v_CmdString := v_CmdString & "," & int2str(tsc_NumberingPlan_Int);  // @sic R5s150538, R5s160127 sic@
      }
    }
    if (ispresent(p_ParamList[3])) {
      if (p_ParamList[3].Name == "Service") { // need to add only the classx parameter
        v_CmdString := v_CmdString  & "," & p_ParamList[3].Value;
      } else { // need to add the time parameter
        if (v_UseURIVersion) { // This command has an extra field before the time value
          v_CmdString := v_CmdString & ",";
        }
        v_CmdString := v_CmdString & ",,,," & p_ParamList[3].Value; // @sic R5s160127 sic@
      }
    }
    if (ispresent(p_ParamList[4])) { // need to add the time parameter
      if (v_UseURIVersion) { // This command has an extra field before the time value
        v_CmdString := v_CmdString & ",";
      }
      v_CmdString := v_CmdString & ",,," & p_ParamList[4].Value; // @sic R5s160127 sic@
    }
    if (v_UseURIVersion) { // @sic R5s160903 sic@
      return cs_AT_SS_CALL_FORWARD(v_CmdString);
    } else {
      return cs_AT_SS_CALL_FORWARD_OLD(v_CmdString);
    }
  }

  /*
   * @desc      message handler for the upper tester
   * @param     p_CoordPortIndex    ..   refers to respective PTC
   * @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN)
   */
  altstep a_MTC_ReceiveFromPTC_SendToUT(integer p_CoordPortIndex) runs on MTC_BASE
  { /* @sic R5-113037: new common altstep to be used by distinct MTC implementations sic@ */
    var UT_COMMON_CMD v_UT_Req;
    var template (value) UT_SYSTEM_REQ v_UT_SYSTEM_REQ;

    [] PTC_Ut[p_CoordPortIndex].receive(car_UT_ReqAny) -> value v_UT_Req
      {
        v_UT_SYSTEM_REQ := fl_UT_HandleCmd(p_CoordPortIndex, v_UT_Req);
        Ut.send(v_UT_SYSTEM_REQ);
      }
  }

  /*
   * @desc      message handler to deal with reponses of the upper tester at the system interface
   * @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN)
   */
  altstep a_MTC_ReceiveFromUT_SendToPTC() runs on MTC_BASE
  { /* @sic R5-113037: Introduction of positioning test cases sic@ */
    var UT_COMMON_CNF v_UT_Cnf;
    var integer v_CoordPortIndex;

    [] Ut.receive (car_UT_COMMON_CNF) -> value v_UT_Cnf
      {
        if (v_UT_Cnf.Result == false) { // If not received a successful confirmation, stop everything
          FatalError (__FILE__, __LINE__, "AT/MMI Command failed");

        } else {
          if (f_MTC_BASE_IsWaitingForCnf()) {
            v_CoordPortIndex := f_MTC_BASE_CoordPortIndex_Get();
            PTC_Ut[v_CoordPortIndex].send(v_UT_Cnf);
            f_MTC_BASE_CoordPortIndex_Set(tsc_UT_NoCnfExpected);
          } // @sic R5-151792 sic@
          // else: just discard the CNF
        }
      }
  }

}
