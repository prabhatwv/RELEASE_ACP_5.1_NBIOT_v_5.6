/******************************************************************************/
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3 v15.3.0
// $Date: 2018-10-31 19:13:08 +0100 (Wed, 31 Oct 2018) $
// $Rev: 22864 $
/******************************************************************************/

module NBIOT_RRC_MultiCarrier {

  import from NBIOT_RRC_ASN1_Definitions language "ASN.1:2002" all with {encode "UNALIGNED_PER_OctetAligned"};
  import from Common4G5G_Templates all;
  import from EPS_NAS_MsgContainers all;
  import from NBIOT_ASP_TypeDefs all;
  import from NBIOT_CellInfo all;
  import from NBIOT_CommonDefs all;
  import from NBIOT_CommonProcedures all;
  import from NBIOT_Component all;
  import from NBIOT_ConfigurationSteps all;
  import from NBIOT_Imported_EUTRA_ASN1_Types all;
  import from UpperTesterFunctions all;

  template (value) CarrierConfigDedicated_NB_r13 cs_CarrierConfigDedicated_NB_r13(EUTRA_ASN1_ARFCN_ValueEUTRA_r9_Type p_CarrierFreqDL,
                                                                                  NB_CarrierFreqOffset_r13_Type p_CarrierFreqOffset) :=
  { /* @status    APPROVED (NBIOT) */
    dl_CarrierConfig_r13 := {
      dl_CarrierFreq_r13 := {
        carrierFreq_r13 := p_CarrierFreqDL,
        carrierFreqOffset_r13 := p_CarrierFreqOffset
      },
      downlinkBitmapNonAnchor_r13 := {
        useNoBitmap_r13 := NULL
      },
      dl_GapNonAnchor_r13 := {
        useNoGap_r13 := NULL
      },
      inbandCarrierInfo_r13 := omit,
      nrs_PowerOffsetNonAnchor_v1330 := omit,     /* @sic R5s170597 BASELINE MOVING 2017 sic@ */
      dl_GapNonAnchor_v1530 := omit               /* @sic R5s180552 BASELINE MOVING 2018 sic@ */
    },
    ul_CarrierConfig_r13 := {
      ul_CarrierFreq_r13 := omit,
      tdd_UL_DL_AlignmentOffset_r15 := omit       /* @sic R5s180552 BASELINE MOVING 2018 sic@ */
    }
  };

  template (value) CarrierConfigDedicated_Type cs_CarrierConfigDedicated(template (value) CarrierConfigDedicated_NB_r13 p_CarrierConfigDedicated_NB_r13) := {R13 := p_CarrierConfigDedicated_NB_r13};   /* @status    APPROVED (NBIOT) */

  template (value) NB_NonAnchorCarrier_Type cs_NB_NonAnchorCarrier(template (value) CarrierConfigDedicated_Type p_CarrierConfigDedicated) := {Config := p_CarrierConfigDedicated};            /* @status    APPROVED (NBIOT) */

  template (value) NB_ActiveCellConfig_Type cs_NB_ActiveCellConfig_NonAnchorCarrier(template (value) NB_NonAnchorCarrier_Type p_NonAnchorCarrier) :=
  {  /* @status    APPROVED (NBIOT) */
    C_RNTI  := omit,
    PhysicalLayerConfigUL := omit,
    RachProcedureConfig   := omit,
    CcchDcchDtchConfig    := omit,
    NonAnchorCarrier := p_NonAnchorCarrier,
    CarrierConfigCommonDL := omit,  /* @sic R5w180306 - Support of non-anchor carrier enhancements sic@ */
    CarrierConfigCommonUL := omit   /* @sic R5w180306 - Support of non-anchor carrier enhancements sic@ */
  };

  /*
   * @desc      REFERENCE TS 36.523-3 clause 22.4.14
   * @status    APPROVED (NBIOT)
   */
  function f_TC_22_4_14_NBIOT() runs on NBIOT_PTC
  { /* NOTE:
       The SS knows that the RACH procedure has to happen on the anchor-carrier, i.e. the SS shall send the Random Access Response on the anchor carrier as well as the Contention resolution
       => if the UE expects RAR or Contention resolution on the non-anchor carrier it would fail */
    /* @sic R5-176140: steps 17..20 removed; test case made applicable for CP mode (USER_PLANE->CONTROL_PLANE) sic@ */
    var template (value) DL_CCCH_Message_NB v_RRCConnectionSetup;
    var template (value) CarrierConfigDedicated_NB_r13 v_CarrierConfigDedicated;
    var NB_CarrierFreq_Type v_NB_CarrierFreq;
    var EUTRA_ASN1_ARFCN_ValueEUTRA_r9_Type v_CarrierFreqDL;
    var NAS_MSG_Indication_Type v_NAS_Ind;

    f_NBIOT_Init(c3, CONTROL_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell1, CONTROL_PLANE);

    f_NBIOT_Preamble(nbiot_Cell1, CONTROL_PLANE);
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell1, CONTROL_PLANE, RRC_CONNECTED);

    // configuration of non-anchor carrier:
    v_NB_CarrierFreq := f_NBIOT_CellInfo_GetEARFCN(nbiot_Cell1);
    v_CarrierFreqDL := v_NB_CarrierFreq.DL.carrierFreq_r13 + 2;                              // Table 22.4.14.3.3-3 @sic R5-173530: "+ 2" sic@
    v_CarrierConfigDedicated := cs_CarrierConfigDedicated_NB_r13(v_CarrierFreqDL, v_0dot5);  // Table 22.4.14.3.3-3
    // SS configuration: non-anchor carrier
    f_NBIOT_SS_ConfigActiveCellInfo(nbiot_Cell1, cs_TimingInfo_Now, cs_NB_ActiveCellConfig_NonAnchorCarrier(cs_NB_NonAnchorCarrier(cs_CarrierConfigDedicated(v_CarrierConfigDedicated))));

    // Configure RRC Connection Setup to be used during RACH procedure
    v_RRCConnectionSetup := f_NBIOT_508_RRCConnectionSetup();
    v_RRCConnectionSetup.message_.c1.rrcConnectionSetup_r13.criticalExtensions.c1.rrcConnectionSetup_r13.radioResourceConfigDedicated_r13.physicalConfigDedicated_r13.carrierConfigDedicated_r13 := v_CarrierConfigDedicated;

    // Configure RRC Connection Setup to be used during RACH procedure
    f_NBIOT_SS_ConfigRachProcedureMsg4(nbiot_Cell1, v_RRCConnectionSetup);

    f_NBIOT_TestBody_Set(true);

    //@siclog "Step 1" siclog@
    f_UT_SwitchOnUE(UT, false);

    //@siclog "Step 2 - 4" siclog@
    v_NAS_Ind := f_NBIOT_InitialRegistration_Step2_4(nbiot_Cell1, CONTROL_PLANE, PREAMBLE);

    //@siclog "Step 5 - 16" siclog@
    f_NBIOT_InitialRegistration_Step5_14(nbiot_Cell1, CONTROL_PLANE, STATE2_NB_CONNECTED_UPDATED, v_NAS_Ind);   /* @sic R5-176140: test case goes to connected mode without test loop and that's it sic@ */
    
    f_NBIOT_TestBody_Set(false);

    //Switch/power off UE
    f_NBIOT_Postamble(nbiot_Cell1, CONTROL_PLANE, N2_CONNECTED);   /* @sic R5-176140: N2_CONNECTED sic@ */
  }

}
