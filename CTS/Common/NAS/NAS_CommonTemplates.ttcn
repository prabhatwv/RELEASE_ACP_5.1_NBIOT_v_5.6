/******************************************************************************/
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3 v15.3.0
// $Date: 2019-03-21 11:29:40 +0100 (Thu, 21 Mar 2019) $
// $Rev: 24301 $
/******************************************************************************/

module NAS_CommonTemplates {

  import from CommonDefs all;
  import from CommonIP all;
  import from NAS_CommonTypeDefs all;

  group NAS_CommonConstants {

  const B1_Type tsc_Spare1 :=        '0'B;                /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */

  const B2_Type tsc_Spare2 :=       '00'B;                /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */

  const B3_Type tsc_Spare3 :=      '000'B;                /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */

  const B4_Type tsc_Spare4 :=     '0000'B;                /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, UTRAN) */

  const B5_Type tsc_Spare5 :=    '00000'B;                /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

  const B6_Type tsc_Spare6 :=   '000000'B;                /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */

  const B7_Type tsc_Spare7 :=   '0000000'B;               /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

  const SpareHalfOctet tsc_SpareHalfOctet := '0'H;        /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

  const SecurityHeaderType tsc_SHT_NoSecurityProtection                           := '0000'B; /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, UTRAN) */

  const SecurityHeaderType tsc_SHT_IntegrityProtected                             := '0001'B; /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, UTRAN) */

  const SecurityHeaderType tsc_SHT_IntegrityProtected_Ciphered                    := '0010'B; /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, UTRAN) */

  const SecurityHeaderType tsc_SHT_IntegrityProtected_NewSecurityContext          := '0011'B; /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

  const SecurityHeaderType tsc_SHT_IntegrityProtected_Ciphered_NewSecurityContext := '0100'B; /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, UTRAN) */

  const SecurityHeaderType tsc_SHT_IntegrityProtected_PartiallyCiphered           := '0101'B; /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, UTRAN) */

  const NAS_IdType tsc_IdType_IMSI   := '001'B;           /* suitable for identity type 24.008 cl. 10.5.3.4 and identiy type 2 24.008 cl. 10.5.5.9
                                                             @status    APPROVED (IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_R10_R11, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */

  const NAS_IdType tsc_IdType_IMEI   := '010'B;           /* suitable for identity type 24.008 cl. 10.5.3.4 and identiy type 2 24.008 cl. 10.5.5.9
                                                             @status    APPROVED (LTE, LTE_A_R10_R11, NBIOT) */

  const NAS_IdType tsc_IdType_IMEISV := '011'B;           /* @sic R5s130438 sic@ suitable for identity type 24.008 cl. 10.5.3.4 and identiy type 2 24.008 cl. 10.5.5.9
                                                             @status    APPROVED (LTE, NBIOT) */

  const NAS_IdType tsc_IdType_GUTI   := '110'B;           /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

  const B3_Type tsc_IMEISV_Requested := '001'B;           /* @sic R5s130438 sic@ suitable for IMEISV request type 24.008 cl. 10.5.5.10
                                                             @status    APPROVED (LTE, NBIOT) */

  const NAS_CauseValue_Type tsc_EmmCause_IllegalUe                        := '00000011'B;  /* @status    APPROVED (NBIOT) */

  const NAS_CauseValue_Type tsc_EmmCause_IllegalMe                        := '00000110'B;  /* @status    APPROVED (NBIOT) */

  const GprsTimerUnit tsc_GprsTimerUnit_2sec  := '000'B;  /* @status    APPROVED (LTE, NBIOT) */

  const GprsTimerUnit tsc_GprsTimerUnit_1min  := '001'B;  /* @status    APPROVED (LTE, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, UTRAN) */

  const GprsTimerUnit tsc_Gprs3TimerUnit_1min := '101'B;  /* @status    APPROVED (IMS, LTE_A_R10_R11, LTE_A_R12, NBIOT, SSNITZ, UTRAN) */

  const GprsTimerUnit tsc_Gprs3TimerUnit_30sec := '100'B; /* @status    APPROVED (LTE_A_R12, NBIOT) */

  const GprsTimerUnit tsc_GprsTimerUnit_deact := '111'B;  /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

     
      
  const O4_Type   tsc_IPv4Mask := 'FFFFFFFF'O;                           /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, UTRAN) */

  const O16_Type  tsc_IPv6Mask := 'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'O;   /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, UTRAN) */

  const B2_Type tsc_NonConsecutiveTacs := '00'B;  /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

  const B2_Type tsc_ConsecutiveTacs    := '01'B;  /* @status    APPROVED (LTE, NBIOT) */

  const B2_Type tsc_MultiplePlmns      := '10'B;  /* @status    APPROVED (LTE, NBIOT) */

  const PdnTypeValue tsc_PdnType_IPv4   := '001'B;                      /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

  const PdnTypeValue tsc_PdnType_IPv6   := '010'B;                      /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

  const PdnTypeValue tsc_PdnType_IPv4v6 := '011'B;                      /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

  const ProcedureTransactionIdentifier tsc_PTI_Unassigned := '00'O;     /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

  const ProcedureTransactionIdentifier tsc_PTI_1 := '01'O;              /* @status    APPROVED (LTE) */

      
  const octetstring tsc_APN1 := '0541504E2D31'O;  /* Access Point Name APN-1;
                                                     @status    APPROVED (ENDC, IMS, LTE, LTE_A_R10_R11, NBIOT) */

  const charstring tsc_APN1_String := "APN-1";    /* Access Point Name APN-1; @sic R5s100466 sic@
                                                     @status    APPROVED (ENDC, LTE, LTE_A_R10_R11, NBIOT) */

  const octetstring tsc_APN2 := '0541504E2D32'O;  /* Access Point Name APN-2;
                                                     @status    APPROVED (LTE, NBIOT) */

  const charstring tsc_APN2_String := "APN-2";    /* Access Point Name APN-2; @sic R5s100748 sic@
                                                     @status    APPROVED (LTE, LTE_A_R10_R11, NBIOT) */

  } // end of group NAS_CommonConstants

  template (value) AccessPointName cs_AccessPointName(octetstring p_Name) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    iei   := omit,
    iel   := int2oct(lengthof(p_Name), 1),
    nameValue := p_Name
  };

  template (present) AccessPointName cr_AccessPointName(octetstring p_Name) :=
  {  /* @status    APPROVED (ENDC, IMS, LTE, LTE_A_R10_R11, NBIOT) */
    iei   := '28'O,
    iel   := int2oct(lengthof(p_Name), 1),
    nameValue := p_Name
  };

  template (present) AccessPointName cr_AccessPointName_Any :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, UTRAN) */
    iei   := '28'O,
    iel   := ?,
    nameValue := ?
  };

  template (present) AuthenticationFailureParameter cr_AuthFailParam_Any :=
  { /* TLV format to be used in Authentication_Failure */
    /* @status    APPROVED (IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei             := '30'O, // version 110, and value used in GMM
    iel             := '0E'O,
    auts            := ?
  };

  template (value) RAND cs_RAND_v(B128_Type p_RAND) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    iei := omit,
    randValue := p_RAND
  };

  template (value) AUTN cs_AUTN_lv(B128_Type p_AUTN) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    iei := omit,
    iel := '10'O,       /* AUTN has length of 128 bits i.e. 16 octets */
    aUTN := p_AUTN
  };

  template (present) CiphKeySeqNum cr_CiphKeySeqNum(template (omit) IEI4_Type p_IEI,
                                                    template (present) KeySeq p_KeySeq) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei             := p_IEI,
    spare1          := '0'B,
    keySeq          := p_KeySeq
  };

  template (present) Codec cr_CodecAny :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    sysId           := ?,                            // system identifcation
    len             := ?,                            // length
    bitMap1to8      := ?,                            // codec bitmap bits 1-8
    bitMap9to16     := *                             // codec bitmap bits 9-16
  };

  template (present) CodecList cr_CodecListAny :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei             := '40'O,                        // '01000000'B (40 hex)
    iel             := ?,                            // length
    codec           := ({cr_CodecAny, cr_CodecAny, cr_CodecAny, *}, {cr_CodecAny, cr_CodecAny, *}, {cr_CodecAny, *}) // Codec list @sic R5s110278 sic@
  };

   template (value) DetachType cs_DetachType(NAS_AttDetValue_Type p_TypeOfDetach):=
  { /* @status    APPROVED (IMS_IRAT, LTE, LTE_A_R10_R11, NBIOT) */
    switchOff          := '0'B,
    typeOfDetach       := p_TypeOfDetach
  };

  template (present) DetachType cr_DetachType(template (present) B1_Type p_SwitchOff,
                                              template (present) NAS_AttDetValue_Type p_TypeOfDetach) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    switchOff          := p_SwitchOff,
    typeOfDetach       := p_TypeOfDetach
  };

  template (present) DeviceProperties cr_DeviceProperties(IEI4_Type p_IEI,
                                                          template (present) B1_Type p_LowPriority := ?) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei         := p_IEI,
    spare       := tsc_Spare3,
    lowPriority := p_LowPriority
  };

  template (present) DRXparameter cr_DRXparameter_Any (template (omit) IEI8_Type p_IEI) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei             := p_IEI,
    splitPGcycleCode := ?,                           // Split PG cycle code
    cnDRXcoef       := ?,                            // CN specific DRX cycle length coefficient
    splitOnCCCH     := ?,                            // Split on CCCCH
    nonDRXtimer     := ?                             // non-DRX timer
  };

  template (present) EDGE_Struct cr_EDGE_Struct_Any :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    modulationCapability := ?,
    pwrMask1        := ?,
    eDGE_RF_PowerCapability1 := *,                   // not present if pwrMask1 = 0
    pwrMask2        := ?,
    eDGE_RF_PowerCapability2 := *                    // not present if pwrMask2 = 0
  };

  template (present) ExtdDRXParams cr_ExtdDRXParamsAny :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei          := '6E'O,
    iel          := ?,           // length
    pagingTimeWindow := ?,
    eDRXValue    := ?
  };

  template (value) GPRS_Timer cs_GprsTimer_tv(IEI8_Type p_IEI, // @sic R5s100662 sic@
                                              B3_Type p_Unit,
                                              B5_Type p_Value) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    iei   := p_IEI,               // '1E'O
    unit  := p_Unit,
    timerValue := p_Value
  };

  template (value) GPRS_Timer cs_GprsTimer_v(GprsTimerUnit p_Unit,
                                             B5_Type p_Value) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei        := omit,
    unit       := p_Unit,
    timerValue := p_Value
  };

  template (value) GPRS_Timer cs_GprsTimer_v_deact := cs_GprsTimer_v(tsc_GprsTimerUnit_deact, tsc_Spare5);  /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

  template (value) IdentityType cs_IdentityType(NAS_IdType p_NAS_IdType) :=
  { /* @status    APPROVED (LTE, LTE_A_R10_R11, NBIOT) */
    spare           := '0'B,
    typeOfId        := p_NAS_IdType
  };

  template (present) LocAreaId cr_LAI(template (omit) IEI8_Type p_IEI,
                                      template (present) octetstring p_PLMN := ?,
                                      template (present) octetstring p_LAC := ?) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei      := p_IEI,
    plmn     := p_PLMN,                       // MCC + MNC
    lac      := p_LAC                         // location area code
  };

  template (present) LocAreaId cr_LAI_Any   := cr_LAI('13'O); /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

  template (value) LLC_SAPI cs_LLC_SAPI(template (omit) IEI8_Type p_IEI := omit,
                                        B4_Type p_LlcSapiValue) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, UTRAN) */
    iei             := p_IEI,
    spare           := '0000'B,
    llcSapiValue    := p_LlcSapiValue
  };

  template (value) LLC_SAPI cs_LLC_SAPI_11 (template (omit) IEI8_Type p_IEI := omit) := cs_LLC_SAPI(p_IEI, '1011'B);   /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

  template (value) LLC_SAPI cs_LLC_SAPI_03 (template (omit) IEI8_Type p_IEI := omit) := cs_LLC_SAPI(p_IEI, '0011'B);   /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, UTRAN) */

  template (present) MobileIdentity cr_MobileIdAny(template (omit) IEI8_Type p_IEI := omit) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei             := p_IEI,
    iel             := ?,
    idDigit1        := ?,
    oddEvenInd      := ?,
    typeOfId        := ?,
    otherDigits     := ?
  };

  template (value) MobileIdentity cs_MobileIdentityGuti(template (omit) IEI8_Type p_IEI,
                                                        octetstring p_Guti) :=
  {
    /* Reference: 24.301 cl. 9.9.3.12;
       @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    iei         := p_IEI,
    iel         := int2oct(lengthof(p_Guti) + 1, 1),    // 11 octets in case of GUTI
    idDigit1    := '1111'B,                             // in case of the GUTI
    oddEvenInd  := '0'B,                                // in case of the GUTI
    typeOfId    := tsc_IdType_GUTI,                     // 3 bits
    otherDigits := p_Guti                               // 10 octets acc. to 24.301
  };

  template (value) MobileIdentity cs_MobileIdentityImsi(B4_Type p_FirstDigit,
                                                        B1_Type p_OddEvenInd,
                                                        octetstring p_OtherDigits) :=
  { /* @status    APPROVED (IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_R10_R11, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei         := '17'O,
    iel         := int2oct(lengthof(p_OtherDigits) + 1, 1),
    idDigit1    := p_FirstDigit,                        // 4 bits
    oddEvenInd  := p_OddEvenInd,                        // 1 bit
    typeOfId    := tsc_IdType_IMSI,                     // 3 bits
    otherDigits := p_OtherDigits
  };

  template (value) MobileIdentity cds_MobileIdentityImsi_lv(B4_Type p_FirstDigit,
                                                            B1_Type p_OddEvenInd,
                                                            octetstring p_OtherDigits)
    modifies cs_MobileIdentityImsi :=
  { /* @status    APPROVED (IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_R10_R11, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei   := omit
  };

  template (present) MobileIdentity cr_MobileIdentityImei(B4_Type p_FirstDigit,
                                                          B1_Type p_OddEvenInd,
                                                          octetstring p_OtherDigits,
                                                          NAS_IdType p_NAS_IdType := tsc_IdType_IMEI) := // @sic R5s130758 sic@
  {  /* @status    APPROVED (LTE, LTE_A_R10_R11, NBIOT) */
    iei         := omit,
    iel         := int2oct(lengthof(p_OtherDigits) + 1, 1),
    idDigit1    := p_FirstDigit,                        // 4 bits
    oddEvenInd  := p_OddEvenInd,                        // 1 bit
    typeOfId    := p_NAS_IdType,                        // 3 bits // @sic R5s130758 sic@
    otherDigits := p_OtherDigits
  };

  template (present) MobileIdentity cr_MobileIdentityImeisv(B4_Type p_FirstDigit, // @sic R5-131832 sic@
                                                            B1_Type p_OddEvenInd,
                                                            octetstring p_OtherDigits) :=
  {  /* @status    APPROVED (LTE, NBIOT) */
    iei         := omit,
    iel         := int2oct(lengthof(p_OtherDigits) + 1, 1),
    idDigit1    := p_FirstDigit,                        // 4 bits
    oddEvenInd  := p_OddEvenInd,                        // 1 bit
    typeOfId    := tsc_IdType_IMEISV,                   // 3 bits
    otherDigits := p_OtherDigits
  };

  template (present) MS_Clsmk2 cr_MS_Clsmk2_Any_tlv(template (omit) IEI8_Type p_IEI := '11'O) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei             := p_IEI, // @sic R5s100662, R5s110112 sic@
    iel             := '03'O,
    spare1_1        := '0'B,
    revLvl          := ?,
    eSIND           := ?,
    a5_1            := ?,
    rFPwrCap        := ?,
    spare1_2        := '0'B,
    pSCap           := ?,
    sSSI            := ?,
    sMCap           := ?,
    vBS             := ?,
    vGCS            := ?,
    fC              := ?,
    cM3             := ?,
    spare1_3        := '0'B,
    lCSVA           := ?,
    uCS2            := ?,
    soLSA           := ?,
    cMSP            := ?,
    a5_3            := ?,
    a5_2            := ?
  };

  template (present) MS_Clsmk3 cr_MSCLSMK3_Any :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei             := '20'O,                        /* 0x20 */
    iel             := ?,                            /* OCTETSTRING [1] */
    spareBit        := '0'B,                         // spare bit */
    multibandSupported := ?,
    a5_7            := ?,                            /* a5/7 algorithm supported */
    a5_6            := ?,                            /* a5/6 algorithm supported */
    a5_5            := ?,                            /* a5/5 algorithm supported */
    a5_4            := ?,                            /* a5/4 algorithm supported */
    associatedRadioCapabilty2 := *,                  /* present if multibandSupported = 101 or 110 */
    spareBits1      := *,                            /* present if multibandSupported = 001 or 010 or 100 */
    associatedRadioCapabilty1 := *,                  /* present if multibandSupported = 001 or 010 or 100 or 101 or 110 */
    maskBit1        := ?,
    rGSM_RadioCapability := *,                       /* R-GSM band associated radio capability.
                                                        not present if maskB1 = 0 */
    maskBit2        := ?,
    multiSlotClass  := *,                            /* multi slot class.
                                                        not present if multiSlotClass = 0 */
    uCS2Treatment   := ?,
    extMeasurementCapability := ?,                   /* extended measurement capability */
    maskBit3        := ?,
    msMeasurementCapability := cr_MS_MeasCapability_Any ifpresent, /* MS measurement capability
    // not present if maskB3 = 0 */
    maskBit4        := ?,
    msPositioningMethod := *,                        /* MS positioning method capability
                                                        not present if maskB4 = 0 */
    maskBit5        := ?,
    eDGE_MultiSlot  := *,                            /* EDGE multi slot capability
                                                        not present if maskB5 = 0 */
    maskBit6        := ?,
    psk8_Struct     := cr_EDGE_Struct_Any ifpresent, /* EDGE struct
                                                        not present if maskB6 = 0 */
    maskBit7        := ?,
    gSM400BandsSupported := *,                       /* not present if maskBIt7 = 0 */
    gSM400AssociatedRadioCapability := *,            /* not present if gSM400BandsSupported = 00 or maskB7 = 0 */
    maskBit8        := ?,
    gSM850AssociatedRadiioCapability := *,           /* not present if maskBIt8 = 0 */
    maskBit9        := ?,
    pCS1900AssociatedRadiioCapability := *,          /* not present if maskBIt9 = 0 */
    uMTS_FDD_RAT_Capability := ?,
    uMTS384TDD_RAT_Capability := ?,
    cDMA2000_RAT_Capability := ?,
    maskBit10       := ?,
    dTM_GPRS_MultiSlotSubclass := *,                 /* not present if maskB10 = 0 */
    singleSlotDTM   := *,                            /* not present if maskB10 = 0 */
    maskBit11       := *,                            /* not present if maskB10 = 0 */
    dTM_EGPRS_MultiSlorSubclass := *,                /* not present if maskB10 = 0 or maskB11 = 0 */
    maskBit12       := ?,
    singleBandSupport := *,                          /* not present if maskB12 = 0 */
    maskBit13       := *,
    gSM700AssociatedRadioCapability := *,            /* not present if maskB13 = 0 */
    uMTS128TDD_RAT_Capability := *,
    gERANFeatPack1  := *,
    mask14          := *,
    extDTM_GPRS_MultiSlotSubclass := *,              /* not present if maskB14 = 0 */
    etxDTM_EGPRS_MultiSlotSubclass := *,             /* not present if maskB14 = 0 */
    mask15          := *,
    highMultislotCap := *,                           /* not present if mask15 = 0 */
    spare2          := tsc_Spare1,                   // @sic R5s150329 Baseline Moving sic@
    gERANFeatPack2  := *,
    gMSKMultislotPowerProfile := *,
    pSKMultislotPowerProfile := *,
    mask17          := *,                            /* rel 6 features */
    tGSM400BandsSupported := *,                      /* not present if maskB17 = 0 */
    tGSM400AssocRadioCap := *,                       /* not present if maskB17 = 0 */
    spare          := *,                              // @sic R5s110176 Baseline Moving sic@
    dlAdvancedRxPerf := *,
    dTMEhancCap     := *,
    mask19          := *,
    dTMGPRSHighMultislotClass := *,                  /* not present if maskB19 = 0 */
    offsetReq       := *,                            /* not present if maskB19 = 0 */
    mask20          := *,                            /* not present if maskB19 = 0 */
    dTMEGPRSHighMultislotClass := *,                 /* not present if maskB19 and maskB20 = 0 */
    rptdACCHCap     := *,
    mask21          := *,
    gsm710AssocRadioCap  := *, /* not present if maskBit21 = 0 */
    mask22          := *,
    tgsm810AssocRadioCap  := *, /* not present if maskBit22 = 0 */
    cipheringModeSettingCap  := *,
    addPositionCap  := *,
    eutraFDDSupport := *, /* rel 8 features */
    eutraTDDSupport := *,
    eutraMeasAndReporting := *,     /* @sic R5s100135 Baseline moving sic@ */
    priorityBasedReselection:= *,   // @sic R5s110176 Baseline Moving sic@
    utraCSGCellsReporting := *,     // @sic R5s110176 Baseline Moving sic@
    vamosLevel := *,                // @sic R5s110176 Baseline Moving sic@
    tighterCap := *, // @sic R5s120178 Baseline Moving sic@
    selectCipheringDLSACCH := *, // @sic R5s120178 Baseline Moving sic@
    csPS_SRVCC_G2U   := *, // @sic R5s130195 Baseline Moving sic@
    csPS_SRVCC_G2E   := *, // @sic R5s130195 Baseline Moving sic@
    geranNwkSharing  := *, // @sic R5s150329 Baseline Moving sic@
    eutraWidebandRSRQMeas  := *, // @sic R5s150329 Baseline Moving sic@
    erBandSupport  := *, // @sic R5s150329 Baseline Moving sic@
    utraMultipleFreqBandInd  := *, // @sic R5s150329 Baseline Moving sic@
    eutraMultipleFreqBandInd  := *, // @sic R5s150329 Baseline Moving sic@
    xtdTSCSetCap  := *, // @sic R5s150329 Baseline Moving sic@
    xtdEARFCNValueRange := *, // @sic R5s160712 Baseline Moving sic@
    spareBits2      := *
  };

  template (present) MS_MeasCapability cr_MS_MeasCapability_Any :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    sMS_VALUE       := ?,
    sM_VALUE        := ?
  };

  template (present) MS_NetworkCap cr_MS_NetworkCap_Any :=
  { /* 24.301 cl. 9.9.3.18 -> 24.008 cl. 10.5.5.12;
       @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei  := '31'O,                                   /* present in case of TV; omit in case of V */
    iel  := ?,                                       /* present in case of LV or TLV; omit in case of V */
    gea1  := ?,
    smCapDedicated  := ?,
    smCapGPRS  := ?,
    ucs2  := ?,
    ssScreeningIndicator  := ?,
    soLSACap  := ?,
    revLevelIndicator  := ?,
    pfcFeatureMode  := ?,
    gea2  := ?,
    gea3  := ?,
    gea4  := ?,
    gea5  := ?,
    gea6  := ?,
    gea7  := ?,
    lcsVACap  := ?,
    psHOtoUTRAN_IuModeCap  := ?,
    psHOtoEUTRAN_S1ModeCap  := ?,
    emmCombinedCap  := ?,       // @sic R5s110176 Baseline Moving sic@
    isrSupport  := ?,
    srvccToGERAN_UTRANCap  := ?,
    epcCap  := ?,
    nfCap := *,       // @sic R5s110176 Baseline Moving R5s110242 sic@
    gERANNtwkShareCap := *, // @sic R5s130195 Baseline Moving sic@
    userPlaneIntegrityProtSupport  := *,         // @sic R5s160712 Baseline Moving, not present for Rel-12 sic@
    gia4  := *,         // @sic R5s160712 Baseline Moving, not present for Rel-12 sic@
    gia5  := *,         // @sic R5s160712 Baseline Moving, not present for Rel-12 sic@
    gia6  := *,         // @sic R5s160712 Baseline Moving, not present for Rel-12 sic@
    gia7  := *,         // @sic R5s160712 Baseline Moving, not present for Rel-12 sic@
    ePCOInd := *,       // @sic R5s170598 Baseline Moving sic@
    restrictEnhancedCoverageCap := *,  // @sic R5s170598 Baseline Moving sic@
    dualConnectivityEUTRA_NR := *, // @sic R5s180553 Baseline Moving sic@
    spareBits := *
  };

  template (present) MS_NetworkFeatureSupport cr_MS_NetworkFeatureSupport(IEI4_Type p_IEI,
                                                                          template (present) B1_Type p_ExtdPeriodicTimers := ?) :=
  { /* 24.301 cl. 9.9.2.0A -> 24.008 cl. 10.5.5.15 */
    /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei                := p_IEI,
    spare              := tsc_Spare3,
    extdPeriodicTimers := p_ExtdPeriodicTimers
  };

  template (present) NBIFOMContainer cr_NBIFOMContainerAny :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, UTRAN) */
    iei    := '33'O,
    iel    := ?,           // length
    containerContents   := ?
  };

  template (present) NwkResourceId cr_NwkResourceIdAny (IEI8_Type p_IEI := '10'O) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei                := p_IEI,
    iel                := ?,
    nriContainerValue  := ?,
    spareBits          := tsc_Spare6          // @sic R5s140778 sic@
  };

  template (value) PacketFlowIdentifier cs_PktFlowId :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, UTRAN) */
    iei             := '34'O,
    iel             := '01'O,
    spare           := '0'B,
    idValue         := '0000000'B                       // Best effort
  };

  template (value) PLMN_List cs_PLMN_List(NAS_PlmnIdList_Type p_PlmnIdList) :=
  { /* @status    APPROVED (LTE, LTE_A_IRAT, LTE_A_R10_R11, NBIOT, UTRAN) */
    iei    := '4A'O,
    iel    := int2oct(lengthof(p_PlmnIdList) * 3, 1),
    plmnList := p_PlmnIdList
  };

  template (value) PLMN_List cs_PLMN_List_1PLMN(NAS_PlmnId p_Plmn1) :=
  /* @status    APPROVED (LTE, LTE_A_IRAT, LTE_A_R10_R11, NBIOT, UTRAN) */
    cs_PLMN_List({p_Plmn1});

  template (value) PLMN_List cs_PLMN_List_2PLMNs(NAS_PlmnId p_Plmn1,
                                                 NAS_PlmnId p_Plmn2) :=
  /* @status    APPROVED (LTE, LTE_A_R10_R11, NBIOT) */
    cs_PLMN_List({p_Plmn1, p_Plmn2});

  template (value) PLMN_List cs_PLMN_List_3PLMNs(NAS_PlmnId p_Plmn1,
                                                 NAS_PlmnId p_Plmn2,
                                                 NAS_PlmnId p_Plmn3) :=
  /* @status    APPROVED (NBIOT) */
    cs_PLMN_List({p_Plmn1, p_Plmn2, p_Plmn3});

  template (value) PLMN_List cs_PLMN_List_4PLMNs(NAS_PlmnId p_Plmn1,
                                                 NAS_PlmnId p_Plmn2,
                                                 NAS_PlmnId p_Plmn3,
                                                 NAS_PlmnId p_Plmn4) :=
  /* @status    APPROVED (LTE, NBIOT) */
    cs_PLMN_List({p_Plmn1, p_Plmn2, p_Plmn3, p_Plmn4});

  template (value) ProtocolContainer cs_ProtocolContainer_Common(O2_Type p_ContainerId,
                                                                 integer p_ContainerLength := 0,
                                                                 template (omit) octetstring p_Content := omit) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, UTRAN) */
    protocolID := p_ContainerId,
    protocolLength := int2oct(p_ContainerLength, 1),
    content := p_Content
  };

  template (value) ProtocolContainer cs_ProtocolContainer(O2_Type p_ProtocolId,
                                                          octetstring p_Content) :=
  /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, UTRAN) */
  /* @sic R5s141127 change 4 - MCC160 Comments: cs_ProtocolContainer_Common sic@ */
    cs_ProtocolContainer_Common(p_ProtocolId, lengthof(p_Content), p_Content);

  template (present) ProtocolConfigOptions cr_ProtocolConfigOptionsAny :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, UTRAN) */
    iei            := '27'O,
    iel            := ?,
    ext            := '1'B,
    spare          := '0000'B,
    configProtocol := ?,
    pco            := *  // @sic R5s100800 sic@
  };

  template (present) ExtdProtocolConfigOptions cr_ExtdPCOAny :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, UTRAN) */
    iei         := '7B'O,
    iel         := ?,
    ext         := ?,
    spare       := tsc_Spare4,
    configProtocol := ?,
    pco         := *
  };

  template (present) PTMSI_Signature cr_PTMSI_Signature(template (present) O3_Type p_PtmsiSig) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei             := '19'O,
    iel             := omit,
    signatureValue  := p_PtmsiSig
  };

  template (present) PTMSI_Signature cr_PTMSI_SignatureAny :=
    /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    cr_PTMSI_Signature(?);

  template (value) QualityOfService cs_QoS_Negotiated_1 :=
  { /* TS 34.123-3 Table 8.10.2 */
    /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    iei := '30'O,
    iel := '10'O,
    spare1 := '00'B,
    delayClass := '100'B,
    relabilityClass := '011'B,
    peakThroughput := '0100'B,
    spare2 := '0'B,
    precedenceClass := '011'B,
    spare3 := '000'B,
    meanThroughput := '11111'B,
    trafficClass := '100'B,
    deliveryOrder := '10'B,
    deliveryErrorSDU := '010'B,
    maxSduSize := '00100000'B,
    maxBitRateUL := '01000000'B,
    maxBitRateDL := '01000000'B,
    residualBER := '0111'B,
    sduErrorRatio := '0100'B,
    transferDelay := '000000'B,
    trafficHandlingPrio := '00'B,
    guaranteedBitRateUL := '00010000'B,
    guaranteedBitRateDL := '00010000'B,
    spare4 := '000'B,
    signallingInd := '0'B,
    sourceStatisticsDescriptor := '0000'B,
    maxBitRateDL_Ext := '00000000'B,
    guaranteedBitRateDL_Ext := '00000000'B,
    maxBitRateUL_Ext := '00000000'B,
    guaranteedBitRateUL_Ext := '00000000'B,
    maxBitRateDL_Ext2       := omit,  // @sic R5s1300195 Baseline Moving sic@
    guaranteedBitRateDL_Ext2  := omit,  // @sic R5s1300195 Baseline Moving sic@
    maxBitRateUL_Ext2         := omit,  // @sic R5s1300195 Baseline Moving sic@
    guaranteedBitRateUL_Ext2  := omit   // @sic R5s1300195 Baseline Moving sic@
  };

  template (value) QualityOfService cds_QoS_Negotiated_2 modifies cs_QoS_Negotiated_1 :=
  { /* TS 34.123-3 Table 8.10.2 */
    /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    maxSduSize := '10010110'B,
    maxBitRateUL := '01001000'B,
    maxBitRateDL := '01001000'B,
    residualBER := '0100'B,
    sduErrorRatio := '0011'B
   };

  template (value) QualityOfService cds_QoS_Negotiated_3 modifies cs_QoS_Negotiated_1 :=
  { /* TS 34.123-3 Table 8.10.2 */
    /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    trafficClass := '001'B,
    deliveryErrorSDU := '011'B,
    maxSduSize := '10001100'B,
    maxBitRateUL := '01101110'B,                //432 kbps
    maxBitRateDL := '01101110'B,                //432 kbps
    sduErrorRatio := '0010'B,
    transferDelay := '001101'B,
    guaranteedBitRateUL := '00000000'B,
    guaranteedBitRateDL := '00000000'B
  };

  template (value) QualityOfService cds_QoS_Negotiated_4  (template (omit) IEI8_Type p_IEI := '30'O) modifies cs_QoS_PDP2 :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    relabilityClass := '101'B,
    trafficClass := '001'B,
    deliveryOrder := '10'B,    // @sic R5-133509 sic@
    maxSduSize := '00001111'B,
    maxBitRateUL := '01101000'B,
    maxBitRateDL := '01101000'B,
    residualBER := '0001'B,
    sduErrorRatio := '0001'B,
    transferDelay := '001000'B,
    sourceStatisticsDescriptor := '0001'B
  };

  template (value) QualityOfService cs_QoS_PDP2 (template (omit) IEI8_Type p_IEI := '30'O) :=
  { /* TS 51.010-1 Table 40.5 */
    // @sic R5s120218 sic@
    /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    iei := p_IEI,
    iel := '10'O,
    spare1 := '00'B,
    delayClass := '100'B,
    relabilityClass := '011'B,
    peakThroughput := '0101'B,
    spare2 := '0'B,
    precedenceClass := '010'B,
    spare3 := '000'B,
    meanThroughput := '10000'B,
    trafficClass := '100'B,
    deliveryOrder := '01'B,
    deliveryErrorSDU := '011'B,
    maxSduSize := '10010110'B,
    maxBitRateUL := '01001000'B,
    maxBitRateDL := '01001000'B,
    residualBER := '0111'B,
    sduErrorRatio := '0100'B,
    transferDelay := '000000'B,
    trafficHandlingPrio := '00'B,
    guaranteedBitRateUL := '00000000'B,
    guaranteedBitRateDL := '00000000'B,
    spare4 := '000'B,
    signallingInd := '0'B,
    sourceStatisticsDescriptor := '0000'B,
    maxBitRateDL_Ext := '00000000'B,
    guaranteedBitRateDL_Ext := '00000000'B,
    maxBitRateUL_Ext := '00000000'B,
    guaranteedBitRateUL_Ext := '00000000'B,
    maxBitRateDL_Ext2       := omit,  // @sic R5s1300195 Baseline Moving sic@
    guaranteedBitRateDL_Ext2  := omit,  // @sic R5s1300195 Baseline Moving sic@
    maxBitRateUL_Ext2         := omit,  // @sic R5s1300195 Baseline Moving sic@
    guaranteedBitRateUL_Ext2  := omit   // @sic R5s1300195 Baseline Moving sic@
  };

  template (value) QualityOfService cds_QoS_PDP3  (template (omit) IEI8_Type p_IEI := '30'O) modifies cs_QoS_PDP2 :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    relabilityClass := '101'B,
    deliveryErrorSDU := '010'B,
    residualBER := '0100'B,
    sduErrorRatio := '0011'B
  };

  template (value) QualityOfService cds_QoS_Converstational  (template (omit) IEI8_Type p_IEI := '30'O) modifies cs_QoS_PDP2 :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    relabilityClass := '101'B,
    trafficClass := '001'B,
    deliveryOrder := '10'B,      // @sic R5-133509 sic@
    maxSduSize := '00001111'B,   // @sic R5-120632 sic@
    maxBitRateUL := '01101000'B,
    maxBitRateDL := '01101000'B,
    residualBER := '0001'B,
    sduErrorRatio := '0001'B,
    transferDelay := '001000'B
  };

  template (present) TrafficFlowTemplate cr_Tft(template IEI8_Type p_IEI := omit,
                                                template (present) B3_Type p_Code := ?) :=
  { /* 24.301 cl. 9.9.4.13 -> 24.008 cl. 10.5.6.12 */
    /* @status    APPROVED (LTE, LTE_A_R10_R11, NBIOT, UTRAN) */
    iei := p_IEI, /* present in case of TLV; omit in case of LV */
    iel := ?,
    tftOperationCode := p_Code,
    eBit := ?,
    noOfPktFilter := complement ('0000'B), // value must be greater than 0 and <= 16 (only 4 bits)
    packetFilterList := ?,
    parameterList := *
  };

  template (value) TrafficFlowTemplate cs_TrafficFlowTemplate(integer p_IeLength,
                                                              template (value) TrafficFlowTemplate.packetFilterList p_PacketFilterList):=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, UTRAN) */
    iei   := omit,
    iel   := int2oct(p_IeLength, 1),
    tftOperationCode := '001'B,  // Create new TFT
    eBit  := '0'B, // Parameter list not included
    noOfPktFilter := int2bit(lengthof(p_PacketFilterList), 4),
    packetFilterList := p_PacketFilterList,
    parameterList := omit
  };

  template (present) UE_Status cr_UEStatus_Any :=
  { // 24.301 cl. 9.11.3.56
    /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    iei     := '6D'O,
    iel     := ?,
    spare   := tsc_Spare6,
    n1ModeRegistered    := ?,
    s1ModeRegistered    := ?
  };

  template (value) RadioPriority cs_RadioPriority (template (omit) IEI4_Type p_IEI,
                                                   B3_Type p_Val) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei := p_IEI,
    spare := '0'B,
    levelValue := p_Val
  };

  template (present) TMSI_Status cr_TMSI_Status(template (present) TmsiStatusValue p_TmsiStatus := ?) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei  := '9'H,
    spare3 := tsc_Spare3,
    flag := p_TmsiStatus
  };

  template (present) UE_NetworkCap cr_UENetworkCap_Any (template (omit) IEI8_Type p_IEI) :=
  { /* 24.301 cl. 9.9.3.34
       @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei := p_IEI,                     /* present in case of TLV; omit in case of LV */
    iel := ?,                         /* present in case of LV or TLV; omit in case of V */
    eeaCap := ?,                     // @sic R5s100135 sic@
    eiaCap := ?,                     // @sic R5s100135 sic@
    ueaCap := *,                     // @sic R5s100135 sic@
    uiaCap := *,                     // @sic R5s100135 sic@
    srvcc_LPP_ProSeCap := *,         // @sic R5s100135, R5s150329 Baseline Moving sic@
    cIoT_proSeCap := *,              // @sic R5s150329, R5s160711 Baseline Moving sic@
    cIoT_V2X := *,                   // @sic R5s170598 Baseline Moving sic@
    spare := *                       // @sic R5s100135 sic@
  };

  template (present) VoiceDomainPref cr_VoiceDomainPref_Any :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei := ?,              // 01111110'B
    iel := ?,             // length
    spareBits             := ?,
    ueUsageSetting        := ?,
    voiceDomainPrefEUTRA  := ?
  };

  template (value) GPRS_Timer2 cs_GPRS_Timer2_3_IEI(template (omit) IEI8_Type p_IEI, // @sic R5s150329 Baseline Moving sic@
                                                    B3_Type p_Unit,
                                                    B5_Type p_Value) :=
  { /* @status    APPROVED (IMS, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, SSNITZ, UTRAN) */
    iei  := p_IEI,
    iel  := '01'O,                   // length
    unit := p_Unit,                  // Unit
    gprsTimerValue := p_Value           // Timer  value
  };

  template (value) GPRS_Timer3 cs_GprsTimer3(template (omit) IEI8_Type p_IEI := '5E'O, // @sic R5s150745 sic@
                                             GprsTimerUnit p_Unit,
                                             B5_Type p_Value) := cs_GPRS_Timer2_3_IEI(p_IEI, p_Unit, p_Value);  /* @status    APPROVED (LTE_A_R10_R11, NBIOT) */

  template (present) GPRS_Timer2 cr_GPRS_Timer2_3(IEI8_Type p_IEI, // @sic R5s150329 Baseline Moving sic@
                                                  template (present) B3_Type p_Unit := ?,
                                                  template (present) B5_Type p_Value := ?) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    iei  := p_IEI,
    iel  := '01'O,                   // length
    unit := p_Unit,                  // Unit
    gprsTimerValue := p_Value           // Timer  value
  };

  template (value) PacketFilterComponent cs_PktFilterCompIPv4RemoteAddress(charstring p_RemoteAddress,
                                                                           O4_Type p_Mask := tsc_IPv4Mask) :=
  { // 9 octets
    /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, UTRAN) */
    /* @sic R5s110604: optional parameters sic@ */
    id := '10'O, // IPv4 remote address
    packetFilterComponentValue := {
      ipv4RemoteAddress := f_Convert_IPv4Addr2OctString(p_RemoteAddress) & p_Mask // @sic R5s100189, R5-113734 sic@
    }
  };

  template (value) PacketFilterComponent cs_PktFilterCompIPv6RemoteAddress(charstring p_RemoteAddress,
                                                                           O16_Type p_Mask := tsc_IPv6Mask) :=
  { // 33 octets
    /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, UTRAN) */
    id := '20'O,
    packetFilterComponentValue := {
      ipv6RemoteAddress := f_Convert_IPv6Addr2OctString(p_RemoteAddress) & p_Mask // @sic R5s100189, R5-113734 sic@
    }
  };

  template (value) PacketFilterComponent cs_PktFilterCompProtocolIdNextHeader(O1_Type p_ProtocolIdNextHeader) :=
  { // 2 octets
    /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, UTRAN) */
    id := '30'O, // Protocol Identifier / Next header type
    packetFilterComponentValue := {
      protocolIdNextHeader := p_ProtocolIdNextHeader
    }
  };

  template (value) PacketFilterComponent cs_PktFilterCompProtocolIdNextHeaderICMP := cs_PktFilterCompProtocolIdNextHeader('01'O);   /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT) */

  template (value) PacketFilterComponent cs_PktFilterCompProtocolIdNextHeaderICMPv6 := cs_PktFilterCompProtocolIdNextHeader('3A'O); /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT) */

  template (value) PacketFilterComponent cs_PktFilterCompProtocolIdNextHeaderUDP := cs_PktFilterCompProtocolIdNextHeader('11'O);    /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, UTRAN) */

  template (value) PacketFilterComponent cs_PktFilterCompProtocolIdNextHeaderIPSec := cs_PktFilterCompProtocolIdNextHeader('32'O);  /* @status    APPROVED (LTE, NBIOT, UTRAN) */

  template (value) PacketFilterComponent cs_PktFilterCompSingleLocalPort(UInt16_Type p_PortNumber) :=
  { // 3 octets
    /* @status    APPROVED (LTE, NBIOT, UTRAN) */
    id := '40'O, // Single local port
    packetFilterComponentValue := {
      singleLocalPort := int2oct(p_PortNumber, 2)
    }
  };

  template (value) PacketFilterComponent cs_PktFilterCompLocalPortRange(UInt16_Type p_PortLow,
                                                                        UInt16_Type p_PortHigh) :=
  { // 3 octets
    /* @status    APPROVED (LTE, NBIOT, UTRAN) */
    id := '41'O, // Local port range
    packetFilterComponentValue := {
      localPortRange := int2oct(p_PortLow, 2) & int2oct(p_PortHigh, 2)
    }
  };

  template (value) PacketFilterComponent cs_PktFilterCompSingleRemotePort(UInt16_Type p_PortNumber) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, UTRAN) */
    id := '50'O, // Single remote port
    packetFilterComponentValue := {
      singleRemotePort := int2oct(p_PortNumber, 2)
    }
  };

  template (value) PacketFilterComponent cs_PktFilterCompRemotePortRange(UInt16_Type p_PortLow,
                                                                         UInt16_Type p_PortHigh) :=
  { // 3 octets
    /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, UTRAN) */
    id := '51'O, // Remote port range
    packetFilterComponentValue := {
      remotePortRange := int2oct(p_PortLow, 2) & int2oct(p_PortHigh, 2)
    }
  };

  template (value) PacketFilterComponent cs_PktFilterCompTOSTrafficClass(O2_Type p_TOSTrafficClass) :=
  { // 3 octets
    /* @status    APPROVED (LTE, NBIOT, UTRAN) */
    id := '70'O, // Type of service / Traffic class type
    packetFilterComponentValue := {
      typeOfServiceTrafficClass := p_TOSTrafficClass
    }
  };

  template (value) PacketFilterComponent cs_PktFilterCompIPSecSPI(O4_Type p_IPSecSPI) :=
  { // 5 octets
    /* @status    APPROVED (LTE, NBIOT, UTRAN) */
    id := '60'O, // Security parameter index type
    packetFilterComponentValue := {
      securityParameterIndex := p_IPSecSPI
    }
  };

  template (value) PacketFilterComponent cs_PktFilterCompFlowLabel(O3_Type p_FlowLabel) :=
  { // 4 octets
    /* @status    APPROVED (LTE, NBIOT, UTRAN) */
    id := '80'O, // Flow label type
    packetFilterComponentValue := {
      flowLabel := p_FlowLabel
    }
  };

  /*
   * @desc      Calculate Packet Filters applied in test case 10.9.1 of 36.523-1
   * @param     p_PacketFilterByRef (by reference)
   * @param     p_PacketFilterLengthByRef (by reference)
   * @param     p_IpTypeIsIPv4
   * @param     p_PacketFilterID
   * @status    APPROVED (LTE, NBIOT, UTRAN)
   */
  function f_Get_PacketFilter_10_9_1(out template (value) PacketFilter p_PacketFilterByRef,
                                     out integer p_PacketFilterLengthByRef,
                                     boolean p_IpTypeIsIPv4,
                                     integer p_PacketFilterID)
  {
    var charstring v_IPv4RemoteAddress := "172.168.8.0"; // @sic R5s110776 sic@
    var O4_Type  v_IPv4SubnetMask := 'FFFFFF00'O;
    var charstring v_IPv6RemoteAddress := "2001:0ba0::";  // @sic R5s110776 sic@
    var O16_Type  v_IPv6SubnetMask := 'FFFFFFFF000000000000000000000000'O;  // @sic R5s110776 sic@

    var integer v_FilterCount := 0;
    var template (value) PacketFilter v_Filter;
        
    select (p_PacketFilterID) {  // @sic R5-110779 sic@
      case (1) {
        // UL only filter, ID=1
        v_Filter.spare       := '00'B; //  @sic R5s130195 Baseline Moving sic@
        v_Filter.direction   := '10'B; //  @sic R5s130195 Baseline Moving sic@
        v_Filter.iei         := '1'H;  //  @sic R5s130195 Baseline Moving sic@
        v_Filter.precedence  := int2bit(6, 8);
        v_Filter.contents[0] := cs_PktFilterCompProtocolIdNextHeaderUDP;
        v_FilterCount := v_FilterCount + 2;
        if (p_IpTypeIsIPv4) {
          v_Filter.contents[1] := cs_PktFilterCompIPv4RemoteAddress(v_IPv4RemoteAddress, v_IPv4SubnetMask);
          v_FilterCount := v_FilterCount + 9;
        }
        else { // IPv6
          v_Filter.contents[1] := cs_PktFilterCompIPv6RemoteAddress(v_IPv6RemoteAddress, v_IPv6SubnetMask);
          v_FilterCount := v_FilterCount + 33;
        }
        v_Filter.contents[2] := cs_PktFilterCompSingleLocalPort(60001);
        v_FilterCount := v_FilterCount + 3;
        v_Filter.contents[3] := cs_PktFilterCompRemotePortRange(60350, 60450);
        v_FilterCount := v_FilterCount + 5;
        v_Filter.contents[4] := cs_PktFilterCompTOSTrafficClass('A8FC'O);
        v_FilterCount := v_FilterCount + 3;
      }
      case (2) {
        v_Filter.spare       := '00'B; //  @sic R5s130195 Baseline Moving sic@
        v_Filter.direction   := '10'B; //  @sic R5s130195 Baseline Moving sic@
        v_Filter.iei         := '2'H;  //  @sic R5s130195 Baseline Moving sic@
        v_Filter.precedence  := int2bit(7, 8);
        v_Filter.contents[0] := cs_PktFilterCompProtocolIdNextHeaderUDP;
        v_FilterCount := v_FilterCount + 2;
        if (p_IpTypeIsIPv4) {
          v_Filter.contents[1] := cs_PktFilterCompIPv4RemoteAddress(v_IPv4RemoteAddress, v_IPv4SubnetMask);
          v_FilterCount := v_FilterCount + 9;
        }
        else { // IPv6
          v_Filter.contents[1] := cs_PktFilterCompIPv6RemoteAddress(v_IPv6RemoteAddress, v_IPv6SubnetMask);
          v_FilterCount := v_FilterCount + 33;
        }
        v_Filter.contents[2] := cs_PktFilterCompLocalPortRange(60000, 60100);
        v_FilterCount := v_FilterCount + 5;
        v_Filter.contents[3] := cs_PktFilterCompSingleRemotePort(60350);
        v_FilterCount := v_FilterCount + 3;
        v_Filter.contents[4] := cs_PktFilterCompTOSTrafficClass('A8FC'O);
        v_FilterCount := v_FilterCount + 3;
      }
      case (3) {
        v_Filter.spare       := '00'B; //  @sic R5s130195 Baseline Moving sic@
        v_Filter.direction   := '10'B; //  @sic R5s130195 Baseline Moving sic@
        v_Filter.iei         := '3'H;  //  @sic R5s130195 Baseline Moving sic@
        v_Filter.precedence  := int2bit(5, 8);
        v_Filter.contents[0] := cs_PktFilterCompProtocolIdNextHeaderIPSec;
        v_FilterCount := v_FilterCount + 2;
        if (p_IpTypeIsIPv4) {
          v_Filter.contents[1] := cs_PktFilterCompIPv4RemoteAddress(v_IPv4RemoteAddress, v_IPv4SubnetMask);
          v_FilterCount := v_FilterCount + 9;
        }
        else { // IPv6
          v_Filter.contents[1] := cs_PktFilterCompIPv6RemoteAddress(v_IPv6RemoteAddress, v_IPv6SubnetMask);
          v_FilterCount := v_FilterCount + 33;
        }
        v_Filter.contents[2] := cs_PktFilterCompIPSecSPI('0F80F000'O); // @sic R5s110778 sic@
        v_FilterCount := v_FilterCount + 5;
        v_Filter.contents[3] := cs_PktFilterCompTOSTrafficClass('A0FC'O);
        v_FilterCount := v_FilterCount + 3;
      }
      case (4) {
        v_Filter.spare       := '00'B; //  @sic R5s130195 Baseline Moving sic@
        v_Filter.direction   := '10'B; //  @sic R5s130195 Baseline Moving sic@
        v_Filter.iei         := '4'H;  //  @sic R5s130195 Baseline Moving sic@
        v_Filter.precedence  := int2bit(2, 8);
        if (p_IpTypeIsIPv4) {
          v_Filter.contents[0] := cs_PktFilterCompIPv4RemoteAddress(v_IPv4RemoteAddress, v_IPv4SubnetMask);
          v_FilterCount := v_FilterCount + 9;
        }
        else { // IPv6
          v_Filter.contents[0] := cs_PktFilterCompIPv6RemoteAddress(v_IPv6RemoteAddress, v_IPv6SubnetMask);
          v_FilterCount := v_FilterCount + 33;
        }
        v_Filter.contents[1] := cs_PktFilterCompTOSTrafficClass('B0FC'O);
        v_FilterCount := v_FilterCount + 3;
        v_Filter.contents[2] := cs_PktFilterCompFlowLabel('000005'O);
        v_FilterCount := v_FilterCount + 4;
      }
      case (5) {
        v_Filter.spare       := '00'B; //  @sic R5s130195 Baseline Moving sic@
        v_Filter.direction   := '10'B; //  @sic R5s130195 Baseline Moving sic@
        v_Filter.iei         := '5'H;  //  @sic R5s130195 Baseline Moving sic@
        v_Filter.precedence  := int2bit(255, 8);
        if (p_IpTypeIsIPv4) {
          v_Filter.contents[0] := cs_PktFilterCompIPv4RemoteAddress(v_IPv4RemoteAddress, v_IPv4SubnetMask);
          v_FilterCount := v_FilterCount + 9;
        }
        else { // IPv6
          v_Filter.contents[0] := cs_PktFilterCompIPv6RemoteAddress(v_IPv6RemoteAddress, v_IPv6SubnetMask);
          v_FilterCount := v_FilterCount + 33;
        }
      }
      case else {
        // out of supported range
        FatalError(__FILE__, __LINE__, "unsupported packet filter id");
      }
    }
    v_Filter.iel := int2oct(v_FilterCount, 1);

    p_PacketFilterByRef := v_Filter;
    p_PacketFilterLengthByRef := v_FilterCount + 3;
  }

   template (present) Extd_EPS_QOS cr_Extd_EPS_QOS_Any :=
   { /* @status    APPROVED (IMS, LTE, LTE_A_IRAT, LTE_A_R10_R11, LTE_IRAT, NBIOT, POS, UTRAN) */
    iei               := '5C'O,
    iel               := ?,
    unitMaxBitRate    := ?,
    maxBitRateUl_1    := ?,
    maxBitRateUl_2    := ?,
    maxBitRateDl_1    := ?,
    maxBitRateDl_2    := ?,
    unitGuaranteedBitRate    := ?,
    guaranteedBitRateUl_1    := ?,
    guaranteedBitRateUl_2    := ?,
    guaranteedBitRateDl_1    := ?,
    guaranteedBitRateDl_2    := ?
  };

  const B1_Type tsc_NasKsi_NativeSecurityContext := '0'B; /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

  template (value) NAS_KeySetIdentifier cs_NAS_KeySetIdentifier_lv(NAS_KsiValue p_NasKeySetId,
                                                                   B1_Type p_Tsc) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    iei := omit,
    tsc := p_Tsc,
    nasKeySetId := p_NasKeySetId
  };

  template (present) NAS_KeySetIdentifier cr_NAS_KeySetIdentifier(template (present) NAS_KsiValue p_KsiValue,
                                                                  template (present) B1_Type p_Tsc) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    iei := omit,
    tsc := p_Tsc,
    nasKeySetId := p_KsiValue
  };

  template (present) AuthenticationResponseParameter cr_AuthenticationResponseParameter_lv(template (present) B32_128_Type p_ExpectedRES) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    iei := omit,
    iel := ?,        /* RES has length of 32..128 bits i.e. 4..16 octets */
    res := p_ExpectedRES
  };

  template (value) IMEISV_Request cs_IMEISV_Request_WithIEI(B3_Type p_Value) :=
  { /* @status    APPROVED (LTE, NBIOT) */
    iei             := 'C'H, //@sic R5s090210 sic@
    spare           := '0'B,
    requestValue    := p_Value
  };

  template (value) NAS_SecurityAlgorithms cs_NAS_SecurityAlgorithms(B3_Type p_CipheringType,
                                                                    B3_Type p_IntegrityType) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    iei := omit,
    spare1 := tsc_Spare1,
    cipheringType := p_CipheringType,
    spare2 := tsc_Spare1,
    integrityType := p_IntegrityType
  };

  template (value) TimeZoneAndTime cs_TimeZoneAndTime (O1_Type p_Year,
                                                       O1_Type p_Month,
                                                       O1_Type p_Day,
                                                       O1_Type p_Hour,
                                                       O1_Type p_Minute,
                                                       O1_Type p_Second,
                                                       O1_Type p_TimeZone):=
  { /* @status    APPROVED (LTE, SSNITZ) */
    iei      := '47'O, // @sic R5s110439 sic@
    year     := p_Year,
    month    := p_Month,
    day      := p_Day,
    hour     := p_Hour,
    minute   := p_Minute,
    second   := p_Second,
    timeZone := p_TimeZone
  };

  template (value) TimeZone cs_TimeZone (O1_Type p_TimeZone):=
  { /* @status    APPROVED (LTE, SSNITZ) */
    iei      := '46'O,
    timeZone := p_TimeZone
  };
  
  template (value) DaylightSavingTime cs_DaylightSavingTime_tlv (B2_Type p_DaylightSavingTime) :=
  { /* 24.301 cl. 9.9.3.6; */
    /* @status    APPROVED (LTE, SSNITZ) */
    iei   := '49'O,
    iel   := '01'O, // @sic R5s120508 sic@
    spare := tsc_Spare6,
    val   := p_DaylightSavingTime
  };
    
  template (value) ExtdProtocolConfigOptions cs_ExtdPCO(Type6Length_Type p_Length,
                                                        template (omit) NAS_ExtdProtocolConfigOptions_Type p_ProtocolContainers) :=
  { /* 24.301 cl. 9.9.4.26 */
    /* @status    APPROVED (LTE_A_PRO, NBIOT) */
    iei         := '7B'O,
    iel         := p_Length,
    ext         := '1'B,
    spare       := tsc_Spare4,
    configProtocol := tsc_Spare3,
    pco         := p_ProtocolContainers
  };

  template (value) ExtdProtocolConfigOptions.pco cs_vz_ProtocolContainer_Common(O2_Type p_ContainerId,
                                                                 integer p_ContainerLength := 0,
                                                                 template (omit) octetstring p_Content := omit) :=
  { // @status    APPROVED (IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, POS, UTRAN) 
      {
        protocolID := p_ContainerId,
        protocolLength := int2oct(p_ContainerLength, 1),
        content := p_Content
      }
  };
    
  /*
   * @desc      To convert the maximum bit rate for the QoS
   * @param     p_Val
   * @return    integer
   * @status    APPROVED (LTE, LTE_A_IRAT, LTE_A_R10_R11, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN)
   */
  function f_QoS_MaximumBitRate(B8_Type p_Val) return integer
  {
    var integer v_Val := bit2int(p_Val);
    if ((v_Val >= bit2int('00000001'B)) and (v_Val <= bit2int('00111111'B))) {
      return v_Val;
    }
    if ((v_Val >= bit2int('01000000'B)) and (v_Val <= bit2int('01111111'B))) {
      return (64 + ((v_Val - 64)*8));
    }
    if ((v_Val >= bit2int('10000000'B)) and (v_Val <= bit2int('11111110'B))) {
      return (576 + ((v_Val - 128)*64));
    }
    if (v_Val == bit2int('11111111'B)) {
      return 0;
    }
    return 0;
  }

}
