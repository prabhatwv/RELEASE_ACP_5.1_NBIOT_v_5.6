/******************************************************************************/
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3 v15.3.0
// $Date: 2018-12-16 11:45:57 +0100 (Sun, 16 Dec 2018) $
// $Rev: 23491 $
/******************************************************************************/

module EUTRA_NB_RRC_Templates {

  import from EUTRA_RRC_ASN1_Definitions language "ASN.1:2002" all with {encode "UNALIGNED_PER_OctetAligned"};
  import from EUTRA_NB_CommonDefs all;
  import from EUTRA_NB_Parameters all;

  const ResumeIdentity_r13 tsc_CIOT_ResumeIdentity_Def := int2bit(42, 40);  /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */

  template (value) SecurityAlgorithmConfig cs_SecurityAlgorithmConfig(IntegrityProtAlgorithm_Type    p_IntegrityProtAlgorithm := px_RRC_IntegrityProtAlgorithm,
                                                                      CipheringAlgorithm_r12         p_CipheringAlgorithm := px_RRC_CipheringAlgorithm) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    /* @sic BASELINE MOVING 2015: CipheringAlgorithm_Type -> CipheringAlgorithm_r12 sic@ */
    cipheringAlgorithm     := p_CipheringAlgorithm,
    integrityProtAlgorithm := p_IntegrityProtAlgorithm
  };

  template (value) PagingUE_Identity cs_PagingUE_Identity_IMSI ( IMSI p_IMSI ) :=
  { /* @status    APPROVED (LTE, NBIOT) */
    imsi := p_IMSI
  };

  template (value) PagingUE_Identity cs_PagingUE_Identity_S_TMSI(MMEC p_Mmec,
                                                                 M_TMSI_Type p_M_Tmsi) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS) */
    s_TMSI := {
      mmec := p_Mmec,
      m_TMSI := p_M_Tmsi
    }
  };

  template (value) IntraFreqNeighCellInfo cs_IntraFreqNeighCellInfo(PhysCellId p_PhysCellId,
                                                                    Q_OffsetRange p_Q_OffsetRange) :=
  { /* @status    APPROVED (LTE, LTE_A_PRO, LTE_A_R10_R11, NBIOT) */
    physCellId   := p_PhysCellId,
    q_OffsetCell := p_Q_OffsetRange
  };

  template (value) PhysCellIdRange cs_PhysCellIdRange(PhysCellId p_Start,
                                                      template (omit) PhysCellIdRange_Type p_Range) :=
  { /* @status    APPROVED (LTE, LTE_IRAT, NBIOT) */
    start_ := p_Start,
    range := p_Range
  };

}
