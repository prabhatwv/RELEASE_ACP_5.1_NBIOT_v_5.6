/******************************************************************************/
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3 v15.3.0
// $Date: 2018-12-12 20:47:43 +0100 (Wed, 12 Dec 2018) $
// $Rev: 23475 $
/******************************************************************************/

module NBIOT_AspCommon_Templates {

  import from NBIOT_RRC_ASN1_Definitions language "ASN.1:2002" all with {encode "UNALIGNED_PER_OctetAligned"};
  import from Common4G5G_Templates all;
  import from CommonAspDefs all;
  import from CommonDefs all;
  import from EUTRA_NB_ASP_L2DataDefs all;
  import from NBIOT_ASP_L2DataDefs all;
  import from NBIOT_ASP_TypeDefs all;
  import from EUTRA_NB_CommonDefs all;
  import from NBIOT_CommonDefs all;

  const NPdcchSearchSpaceCandidateIndex_Type tsc_NPdcchSearchSpaceCandidateIndex_0 := 0;          /* @status    APPROVED (NBIOT) */

  template (present) NB_CnfAspCommonPart_Type cr_NB_CnfAspCommonPart_CellCfg(NBIOT_CellId_Type p_CellId) :=
  { /* @status    APPROVED (NBIOT) */
    CellId := p_CellId,
    RoutingInfo := { None := true },
    TimingInfo := ?,
    Result := { Success := true }
  };

  template (value) NB_ReqAspCommonPart_Type cs_NB_ReqAspCommonPart_CellCfg(NBIOT_CellId_Type p_CellId,
                                                                           template (value) TimingInfo_Type p_TimingInfo := cs_TimingInfo_Now,
                                                                           template (omit) boolean p_CnfFlag := omit) :=
  { /* @status    APPROVED (NBIOT) */
    CellId := p_CellId,
    RoutingInfo := { None := true },
    TimingInfo := p_TimingInfo,
    ControlInfo := {
      CnfFlag := f_CnfFlag_Set(p_TimingInfo, p_CnfFlag),// VZW NBIOT: Commenting to aviod cnf for enquiretimeinflo
      FollowOnFlag := false
    }
  };

  template (value) NB_ReqAspCommonPart_Type cs_NB_ReqAspCommonPart_RB(NBIOT_CellId_Type p_CellId,
                                                                      NB_RadioBearerId_Type p_RB_Id,
                                                                      template (value) TimingInfo_Type p_TimingInfo := cs_TimingInfo_Now,
                                                                      boolean p_CnfFlag := tsc_NoCnfReq) :=
  { /* @status    APPROVED (NBIOT) */
    CellId := p_CellId,
    RoutingInfo := {
      RadioBearerId := p_RB_Id
    },
    TimingInfo := p_TimingInfo,
    ControlInfo := {
      CnfFlag := p_CnfFlag,
      FollowOnFlag := false
    }
  };

  template (present) NB_RoutingInfo_Type cr_NB_RoutingInfo_None := { None := true };                                                                                          /* @status    APPROVED (NBIOT) */

  template (present) NB_RoutingInfo_Type cr_NB_RoutingInfo_RadioBearerId(template (present) NB_RadioBearerId_Type p_RadioBearerId) := { RadioBearerId := p_RadioBearerId };   /* @status    APPROVED (NBIOT) */

  template (value) NB_RoutingInfo_Type cs_NB_RoutingInfo_L2Test := { L2Test := true };                                                                                        /* @status    APPROVED (NBIOT) */

  template (present) NB_IndAspCommonPart_Type cr_NB_IndAspCommonPart_Common(template (present) NBIOT_CellId_Type p_CellId,
                                                                            template (present) NB_RoutingInfo_Type p_RoutingInfo,
                                                                            template (present) TimingInfo_Type p_TimingInfo := cr_TimingInfo_Any) :=
  { /* @status    APPROVED (NBIOT) */
    CellId      :=  p_CellId,
    RoutingInfo := p_RoutingInfo,
    TimingInfo  := p_TimingInfo,
    Status      := { Ok := true }
  };

  template (present) NB_IndAspCommonPart_Type cr_NB_IndAspCommonPart_SysInd(template (present) NBIOT_CellId_Type p_CellId,
                                                                            template (present) TimingInfo_Type p_TimingInfo := cr_TimingInfo_Any) :=
  /* @status    APPROVED (NBIOT) */
    cr_NB_IndAspCommonPart_Common(p_CellId, cr_NB_RoutingInfo_None, p_TimingInfo);

  template (present) NB_IndAspCommonPart_Type cr_NB_IndAspCommonPart_RB(template (present) NBIOT_CellId_Type p_CellId,
                                                                        template (present) NB_RadioBearerId_Type p_RbId,
                                                                        template (present) TimingInfo_Type p_TimingInfo := cr_TimingInfo_Any) :=
  /* @status    APPROVED (NBIOT) */
    cr_NB_IndAspCommonPart_Common(p_CellId, cr_NB_RoutingInfo_RadioBearerId(p_RbId), p_TimingInfo);

  template (present) NB_SYSTEM_CTRL_CNF car_NB_CellConfig_Power_CNF :=
  { /* @status    APPROVED (NBIOT) */
    Common := cr_NB_CnfAspCommonPart_CellCfg(nbiot_Cell_NonSpecific),
    Confirm := {
      CellAttenuationList := true
    }
  };

  template (present) NB_SYSTEM_CTRL_CNF car_NB_CellConfig_CNF(NBIOT_CellId_Type p_CellId) :=
  { /* @status    APPROVED (NBIOT) */
    Common := cr_NB_CnfAspCommonPart_CellCfg(p_CellId),
    Confirm := {
      Cell := true
    }
  };

  template (present) NB_SYSTEM_CTRL_CNF car_NB_EnquireTiming(NBIOT_CellId_Type p_CellId) :=
  { /* @status    APPROVED (NBIOT) */
    Common := cr_NB_CnfAspCommonPart_CellCfg(p_CellId),
    Confirm := {
      EnquireTiming := true
    }
  };

  template (present) NB_SYSTEM_CTRL_CNF car_NB_SYSTEM_CTRL_L1MACInd_CNF(NBIOT_CellId_Type p_CellId) :=
  { /* @status    APPROVED (NBIOT) */
    Common := cr_NB_CnfAspCommonPart_CellCfg(p_CellId),
    Confirm := {
      L1MacIndCtrl := true
    }
  };

  template (value) NB_SYSTEM_CTRL_REQ cas_NB_EnquireTiming(NBIOT_CellId_Type p_CellId) :=
  { /* @status    APPROVED (NBIOT) */
    Common := cs_NB_ReqAspCommonPart_CellCfg(p_CellId),
    Request := {
      EnquireTiming := true
    }
  };

  template (value) NB_SYSTEM_CTRL_REQ cas_NB_ReleaseCell_REQ(NBIOT_CellId_Type p_CellId,
                                                             template (value) TimingInfo_Type p_TimingInfo) :=
  { /* @status    APPROVED (NBIOT) */
    Common := cs_NB_ReqAspCommonPart_CellCfg( p_CellId, p_TimingInfo, tsc_NoCnfReq), // Don't request a confirmation
    Request := {
      Cell := {
        Release := true
      }
    }
  };

  template (value) NB_L1Mac_IndicationControl_Type cs_NB_EnableUL_HARQ_Req(IndicationAndControlMode_Type p_Mode) :=
  { /* @status    APPROVED (NBIOT) */
    RachPreamble := omit,
    DPR := omit,
    HarqError := omit,
    UL_HARQ   := p_Mode
  };

  template (value) NB_L1Mac_IndicationControl_Type cs_NB_EnableRachPreamble_Req(IndicationAndControlMode_Type p_Mode) :=
  { /* @status    APPROVED (NBIOT) */
    RachPreamble := p_Mode,
    DPR := omit,
    HarqError := omit,
    UL_HARQ   := omit
  };

  template (value) NB_L1Mac_IndicationControl_Type cs_NB_EnableDPR_Req(IndicationAndControlMode_Type p_Mode) :=
  { /* @status    APPROVED (NBIOT) */
    RachPreamble := omit,
    DPR := p_Mode,
    HarqError := omit,
    UL_HARQ   := omit
  };

  template (value) NB_SYSTEM_CTRL_REQ cas_NB_Common_IndConfig_REQ(NBIOT_CellId_Type p_CellId,
                                                                  template (value) NB_L1Mac_IndicationControl_Type p_IndicationControl,
                                                                  template (value) TimingInfo_Type p_TimingInfo := cs_TimingInfo_Now,
                                                                  template (omit) boolean p_CnfFlag := omit) :=
  { /* @status    APPROVED (NBIOT) */
    Common := cs_NB_ReqAspCommonPart_CellCfg(p_CellId, p_TimingInfo, p_CnfFlag),
    Request := {
      L1MacIndCtrl := p_IndicationControl
    }
  };

  template (value) L2Data_Request_Type cs_L2Data_Request_PdcpSdu(template (value) PDCP_SDU_Type p_PDCP_SDU) :=
  { /* @status    APPROVED (NBIOT) */
    SubframeDataList := {
      {
        SubframeOffset := tsc_NPdcchSearchSpaceCandidateIndex_0,
        HarqProcess := omit,
        PduSduList := {
          PdcpSdu := {
            p_PDCP_SDU
          }
        }
      }
    }
  };

  template (present) L2Data_Indication_Type cr_L2Data_Indication_PdcpSdu(template (present) PDCP_SDU_Type p_PDCP_SDU) :=
  { /* @status    APPROVED (NBIOT) */
    SubframeData := {
      PduSduList := {
        PdcpSdu := {
          p_PDCP_SDU
        }
      },
      NoOfTTIs   := ?
    }
  };

  template (value) NB_L2_DATA_REQ cas_NB_L2_DATA_REQ(template (value) NB_ReqAspCommonPart_Type p_NB_ReqAspCommonPart,
                                                     template (value) L2Data_Request_Type p_L2Data_Request) :=
  { /* @status    APPROVED (NBIOT) */
    Common := p_NB_ReqAspCommonPart,
    L2Data := p_L2Data_Request
  };

  template (present) NB_L2_DATA_IND car_NB_L2_DATA_IND(template (present) NB_IndAspCommonPart_Type p_NB_IndAspCommonPart,
                                                       template (present) L2Data_Indication_Type p_L2Data_Indication) :=
  { /* @status    APPROVED (NBIOT) */
    Common := p_NB_IndAspCommonPart,
    L2Data := p_L2Data_Indication
  };

  template (value) NPRACH_Config_Type cs_NPRACH_Config_r13(template (value) NPRACH_ConfigSIB_NB_r13 p_NPRACH_Config) :=
  { /* @status    APPROVED (NBIOT) */
    R13 := p_NPRACH_Config
  };

  template (value) NPUSCH_ConfigCommon_Type cs_NPUSCH_ConfigCommon_r13(template (value) NPUSCH_ConfigCommon_NB_r13 p_NPUSCH_ConfigCommon) :=
  { /* @status    APPROVED (NBIOT) */
    R13 := p_NPUSCH_ConfigCommon
  };

  template (value) NPUSCH_ConfigDedicated_Type cs_NPUSCH_ConfigDedicated_r13(template (value) NPUSCH_ConfigDedicated_NB_r13 p_NPUSCH_ConfigDedicated) :=
  { /* @status    APPROVED (NBIOT) */
    R13 := p_NPUSCH_ConfigDedicated
  };

  template (value) NB_RACH_ConfigCommon_Type cs_NB_RACH_ConfigCommon_r13(template (value) RACH_ConfigCommon_NB_r13 p_RACH_ConfigCommon) :=
  { /* @status    APPROVED (NBIOT) */
    R13 := p_RACH_ConfigCommon
  };

  template (value) NB_PDCP_Config_Type cs_NB_PDCP_Config_r13(template (value) PDCP_Config_NB_r13 p_PDCP_Config) :=
  { /* @status    APPROVED (NBIOT) */
    R13 := p_PDCP_Config
  };

  template (value) NB_UL_AM_RLC_Type cs_NB_UL_AM_RLC_r13(template (value) UL_AM_RLC_NB_r13 p_UL_AM_RLC) :=
  { /* @status    APPROVED (NBIOT) */
    R13 := p_UL_AM_RLC
  };

  template (value) NB_DL_AM_RLC_Type cs_NB_DL_AM_RLC_r13(template (value) DL_AM_RLC_NB_r13 p_DL_AM_RLC) :=
  { /* @status    APPROVED (NBIOT) */
    R13 := p_DL_AM_RLC
  };
  
    
  // ADDED BELOW TEMPLATES FOR NBIOT COMPATIBILITY START HERE -----
    
    template (value) NB_SYSTEM_CTRL_REQ cas_DRBTrafficControl_REQ (NBIOT_CellId_Type p_CellId,
                                                              DRB_Traffic_ControlMode_Type p_ControlMode,
                                                              integer p_UE_ID,
                                                              charstring p_UE_IPV4,
                                                              template (omit) charstring p_UE_IPV6 := omit,
                                                              DRB_Traffic_Type p_Traffic_Type,
                                                              integer p_ue_category,
                                                              template (omit) integer p_Session_ID := omit,
                                                              template (omit) charstring p_FileName := omit,
                                                              template (omit) DRB_Traffic_Stats_Mode_Type p_StatsMode := DISABLE_STATS,
                                                              template (omit) integer p_Pause_Duration := 0,
                                                             /* DRB_Identity p_DRB_Id := tsc_DRB1, joni_modified*/
                                                              NB_SRB_Identity_Type p_SRB_Id := tsc_SRB1,
                                                              boolean p_Ipv6 := false,
                                                              boolean p_tun_down := false,
                                                              boolean p_CnfFLag := tsc_CnfReq,
                                                              boolean p_Internet_Switch := false,
                                                              charstring p_IOT_Service_Platform_IPv4_Start := "0.0.0.0",
                                                              charstring p_IOT_Service_Platform_IPv4_End := "0.0.0.0",
                                                              template (omit) charstring p_IOT_Service_Platform_IPv6_Start := omit,
                                                              template (omit) charstring p_IOT_Service_Platform_IPv6_End := omit,
                                                              template (omit) charstring p_IOT_Service_Platform_URL_List := omit,
                                                              template (omit) charstring p_IOT_Service_Platform_IPv4_List := omit,
                                                              template (omit) charstring p_IOT_Service_Platform_IPv6_List := omit,
                                                              boolean p_IsNatServerRunning := false) :=
  {
    Common := cs_NB_ReqAspCommonPart_CellCfg(p_CellId, cs_TimingInfo_Now, p_CnfFLag),
    //Common := cs_ReqAspCommonPart_CellCfg(p_CellId, cs_TimingInfo_Now, tsc_NoCnfReq),
    Request := {
      DRBTrafficCtrl := cs_DRBTrafficControl_Req(p_ControlMode,
                                                 p_UE_ID,
                                                 p_UE_IPV4,
                                                 p_UE_IPV6,
                                                 p_Traffic_Type,
                                                 p_ue_category,
                                                 p_Session_ID,
                                                 p_FileName,
                                                 p_StatsMode,
                                                 p_Pause_Duration,
                                                 /*p_DRB_Id,joni_modified*/
                                                 p_SRB_Id,
                                                 p_Ipv6,
                                                 p_tun_down,
                                                 p_Internet_Switch,
                                                 p_IOT_Service_Platform_IPv4_Start,
                                                 p_IOT_Service_Platform_IPv4_End,
                                                 p_IOT_Service_Platform_IPv6_Start,
                                                 p_IOT_Service_Platform_IPv6_End,
                                                 p_IOT_Service_Platform_URL_List,
                                                 p_IOT_Service_Platform_IPv4_List,
                                                 p_IOT_Service_Platform_IPv6_List,
                                                 p_IsNatServerRunning)
    }  
  };

  template (value) DRB_Traffic_Control_Type cs_DRBTrafficControl_Req(DRB_Traffic_ControlMode_Type p_ControlMode,
                                                                     integer p_UE_ID,
                                                                     charstring p_UE_IPV4,
                                                                     template (omit) charstring P_UE_IPV6 := omit,
                                                                     DRB_Traffic_Type p_Traffic_Type,
                                                                     integer p_ue_category,
                                                                     template (omit) integer p_Session_ID := omit,
                                                                     template (omit) charstring p_FileName := omit,
                                                                     template (omit) DRB_Traffic_Stats_Mode_Type p_StatsMode := DISABLE_STATS,
                                                                     template (omit) integer p_Pause_Duration := 0,
                                                                     /*DRB_Identity p_DRB_Id := tsc_DRB1,  joni modified*/
                                                                     NB_SRB_Identity_Type p_SRB_Id := tsc_SRB1,/*joni_modified this*/
                                                                     boolean p_Ipv6 := false,
                                                                     boolean p_tun_down := false,
                                                                     boolean p_Internet_Switch := false,
                                                                     charstring p_IOT_Service_Platform_IPv4_Start := "0.0.0.0",
                                                                     charstring p_IOT_Service_Platform_IPv4_End := "0.0.0.0",
                                                                     template (omit) charstring p_IOT_Service_Platform_IPv6_Start := omit,
                                                                     template (omit) charstring p_IOT_Service_Platform_IPv6_End := omit,
                                                                     template (omit) charstring p_IOT_Service_Platform_URL_List := omit,
                                                                     template (omit) charstring p_IOT_Service_Platform_IPv4_List := omit,
                                                                     template (omit) charstring p_IOT_Service_Platform_IPv6_List := omit,
                                                                     boolean p_IsNatServerRunning := false) :=
  {
    ControlMode := p_ControlMode,
    UE_ID := p_UE_ID,
    UE_IP := p_UE_IPV4,
    UE_IPV6 := P_UE_IPV6,
    Traffic_Type := p_Traffic_Type,
    Ue_Category := p_ue_category,
    Session_ID := p_Session_ID,
    FileName := p_FileName,
    StatsMode:= p_StatsMode,
    PauseDuration := p_Pause_Duration,
    /*DRB_Id        := p_DRB_Id,joni_modified*/
    SRB_Id        := p_SRB_Id, /*joni_modified this*/
    IS_IPV6 := p_Ipv6,
    Tun_Down := p_tun_down,
    Internet_Switch := p_Internet_Switch,
    IOT_Service_Platform_IPv4_Start := p_IOT_Service_Platform_IPv4_Start,
    IOT_Service_Platform_IPv4_End := p_IOT_Service_Platform_IPv4_End,
    IOT_Service_Platform_IPv6_Start := p_IOT_Service_Platform_IPv6_Start,
    IOT_Service_Platform_IPv6_End := p_IOT_Service_Platform_IPv6_End,
    IOT_Service_Platform_URL_List := p_IOT_Service_Platform_URL_List,
    IOT_Service_Platform_IPv4_List := p_IOT_Service_Platform_IPv4_List,
    IOT_Service_Platform_IPv6_List := p_IOT_Service_Platform_IPv6_List,
    IsNatServerRunning := p_IsNatServerRunning
  };
    
    
  template (present) NB_SYSTEM_CTRL_CNF car_SYSTEM_CTRL_DRBTrafficControl_CNF(NBIOT_CellId_Type p_CellId) :=
  {
    Common := cr_CnfAspCommonPart_CellCfg(p_CellId),
    Confirm := {
      DRBTrafficCtrl := {
          DRBTrafficCtrlCnf := true,
          DRBTrafficCtrlInfo := ?
    }
  }
  };
    
   template (present) NB_CnfAspCommonPart_Type cr_CnfAspCommonPart_CellCfg(NBIOT_CellId_Type p_CellId) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, POS) */
    CellId := p_CellId,
    RoutingInfo := { None := true },
    TimingInfo := ?,
    Result := { Success := true }
  };
    
    template NB_SYSTEM_CTRL_CNF car_SYSTEM_CTRL_L1MACCfg_CNF(NBIOT_CellId_Type p_CellId) :=
  { /* @status    APPROVED */
    Common := cr_CnfAspCommonPart_CellCfg(p_CellId),
    Confirm := {
      L1MacCtrlCfg := true
    }
  };
    
    template (value) NB_SYSTEM_CTRL_REQ cas_NB_PMIReportConfig_REQ(NBIOT_CellId_Type p_CellId,
                                                                 L1Mac_ConfigurationMode_Type p_PMIReportConfigMode) :=
  { /* @status    APPROVED */
    Common := cs_NB_ReqAspCommonPart_CellCfg(p_CellId, cs_TimingInfo_Now, tsc_NoCnfReq),
    Request := {
      L1MacCtrlCfg := cs_NB_PMIReportConfig_Req ( p_PMIReportConfigMode)
    }
  };
    
    template (value) NB_L1Mac_ControlConfiguration_Type cs_NB_PMIReportConfig_Req(L1Mac_ConfigurationMode_Type p_PMIReportConfigMode) :=
  { /* @status    APPROVED */
    RachIgnore := omit,
    ULTPCConfig := omit,
    PMIReportConfig :=  p_PMIReportConfigMode /* To enable/disable Ignoring RACH preamble from UE. */
  };
    //JONI ADDED ABOVE TEMPLATES FOR NBIOT COMPATIBILITY END HERE -----
    
   group L1_MAC_Control_Configuration {    /* ADDED THIS ALSO   ---Primitive for control of L1/MAC configuration for special purposes */

  type enumerated L1Mac_ConfigurationMode_Type {enable, disable};
  type enumerated L1Mac_ULTPC_ConfigValue_Type {zero, one, two, three};
      
  type record L1Mac_ULTPC_Configuration_Type {
      L1Mac_ConfigurationMode_Type         ULTPCConfigMode,              /* To enable/disable Uplink TPC configuration. */
      L1Mac_ULTPC_ConfigValue_Type         ULTPC               optional  /* Uplink TPC value. */
  }
}
    
    type record NB_L1Mac_ControlConfiguration_Type {
    /* NOTE:
       Initially all configurations are disabled in SS (i.e. it shall not be nacessary in 'normal' test cases to use this primitive but only if a specific indication is needed); omit means configuration mode is not changed */
    L1Mac_ConfigurationMode_Type           RachIgnore          optional, /* To enable/disable reporting of PRACH preamble received. */
    L1Mac_ULTPC_Configuration_Type         ULTPCConfig         optional, /* Uplink TPC configuration with a value. */
    L1Mac_ConfigurationMode_Type           PMIReportConfig     optional  /* To enable/disable PMI Report. */
    };
    
    
}
