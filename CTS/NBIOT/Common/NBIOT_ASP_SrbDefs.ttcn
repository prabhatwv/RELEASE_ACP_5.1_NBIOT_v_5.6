/******************************************************************************/
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3 v15.3.0
// $Date: 2018-02-20 16:07:38 +0100 (Tue, 20 Feb 2018) $
// $Rev: 20533 $
/******************************************************************************/

module NBIOT_ASP_SrbDefs {
  import from NBIOT_CommonDefs all;
  import from EPS_NAS_MsgContainers all;

  //****************************************************************************

  group SRB_DATA_ASPs {                         /* ASP Definitions to send/receive peer-to-peer messages on SRBs */

  type record NB_C_Plane_Request_Type {                         /* RRC and/or NAS PDU to be send to the UE;
                                                                   Note: it may be necessary to allow more than one NAS PDU (-> "record of") */

    NB_RRC_MSG_Request_Type     Rrc                   optional, /* omit:    NAS message shall be present; NAS message shall be sent in DLInformationTransfer
                                                                 * present: if NAS message is present also, (piggybacked) NAS PDU shall be security protected
                                                                 *          (if necessary) and inserted in RRC PDU's DedicatedInfoNAS */
    NAS_MSG_RequestList_Type    Nas                   optional  /* omit:    RRC message shall be present; RRC message does not contain (piggybacked) NAS PDU
                                                                 * present: if RRC message is omitted => NAS message shall be sent embedded in DLInformationTransfer
                                                                 *          if RRC message is present => NAS message is piggybacked in RRC message
                                                                 * in case of RRC message is sent on CCCH, NAS message shall be omitted */
  };

  type record NB_C_Plane_Indication_Type {                      /* RRC and/or NAS PDU to be received from the UE;
                                                                   Note: it may be necessary to allow more than one NAS PDU (-> "record of") */

    NB_RRC_MSG_Indication_Type  Rrc                   optional, /* omit:    NAS message shall be present; NAS message is received in ULInformationTransfer
                                                                 * present: if NAS message is present also, DedicatedInfoNAS contains unstructured and
                                                                 *          ciphered NAS message and the NAS message is the deciphered message in structured format */
    NAS_MSG_IndicationList_Type Nas                   optional  /* omit:    RRC message shall be present; RRC message does not contain (piggybacked) NAS PDU
                                                                 * present: if RRC message is omitted => NAS message has been received in ULInformationTransfer
                                                                 *          if RRC message is present => NAS message has been piggybacked in RRC message */
  };

  type record NB_SRB_COMMON_REQ {                               /* common ASP to send PDUs to SRB0, SRB1 or SRB1bis */
    NB_ReqAspCommonPart_Type       Common,                      /* CellId           identifier of the cell
                                                                 * RoutingInfo      SRB0, SRB1, SRB1bis
                                                                 * TimingInfo       Now in normal cases;
                                                                 *                  For latency tests TimingInfo can be set to the SFN/subframe
                                                                 *                  in which the RRC messages shall be sent out (in this case and
                                                                 *                  if the RRC PDU is too long to be sent in one TTI
                                                                 *                  the TimingInfo corresponds to the first TTI)
                                                                 * ControlInfo
                                                                 *   CnfFlag:=false;
                                                                 *   FollowOnFlag
                                                                 *     true: Indicates that the message(s) to be sent on the same TTI will follow
                                                                 *           NOTE 1: When FollowOnFlag is true, TimingInfo shall always be "Now". Otherwise SS shall produce an error
                                                                 *           NOTE 2: the follow on flag applies only for messages of the same SRB
                                                                 *     false: Indicates that no more message(s) will follow
                                                                 */
    NB_C_Plane_Request_Type        Signalling
  };

  type record NB_SRB_COMMON_IND {                               /* common ASP to receive PDUs from SRB0, SRB1 or SRB1bis */
    NB_IndAspCommonPart_Type       Common,                      /* CellId           identifier of the cell
                                                                 * RoutingInfo      SRB0, SRB1, SRB1bis
                                                                 * TimingInfo       time when message has been received
                                                                 *                  (as received from the SS by the NAS emulator) */
    NB_C_Plane_Indication_Type     Signalling
  };

  } // End group SRB_DATA_ASPs

  //****************************************************************************

  group Port_Definitions {

  type port NBIOT_SRB_PORT message {            /* NBIOT PTC: Port for Sending/Receiving data on SRBs */
    out NB_SRB_COMMON_REQ;
    in  NB_SRB_COMMON_IND;
  };

  type port NASEMU_NBIOT_SRB_PORT message {     /* NASEMU PTC: Port for Sending/Receiving data on SRBs (interface to NBIOT PTC) */
    out NB_SRB_COMMON_IND;
    in  NB_SRB_COMMON_REQ;
  };

  } // End group Port_Definitions
}
