/******************************************************************************/
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3 v15.3.0
// $Date: 2019-02-06 17:32:12 +0100 (Wed, 06 Feb 2019) $
// $Rev: 23724 $
/******************************************************************************/

module NBIOT_RRC_UserPlane {

  import from NBIOT_RRC_ASN1_Definitions language "ASN.1:2002" all with {encode "UNALIGNED_PER_OctetAligned"};
  import from CIOT_NASTemplates all;
  import from Common4G5G_Templates all;
  import from CommonAspDefs all;
  import from CommonDefs all;
  import from EPS_NAS_Constants all;
  import from EPS_NAS_MsgContainers all;
  import from EPS_NAS_Templates all;
  import from EUTRA_NB_ASP_Templates all;
  import from EUTRA_NB_AuxiliaryFunctions all;
  import from EUTRA_NB_CommonDefs all;
  import from EUTRA_NB_RRC_Templates all;
  import from EUTRA_NB_SecurityFunctions all;
  import from NAS_AuxiliaryDefsAndFunctions all;
  import from NAS_CommonTemplates all;
  import from NAS_CommonTypeDefs all;
  import from NBIOT_ASP_TypeDefs all;
  import from NBIOT_CellCfg_Templates all;
  import from NBIOT_CellInfo all;
  import from NBIOT_CommonProcedures all;
  import from NBIOT_Component all;
  import from NBIOT_ConfigurationSteps all;
  import from NBIOT_Imported_EUTRA_ASN1_Types all;
  import from NBIOT_NASSteps all;
  import from NBIOT_Paging all;
  import from NBIOT_RRCSteps all;
  import from NBIOT_RRC_Common all;
  import from NBIOT_RRC_Templates all;
  import from NBIOT_SRB_DRB_Templates all;
  import from NBIOT_SecurityFunctions all;
  import from NBIOT_SecuritySteps all;
  import from NBIOT_Timing all;
  import from UpperTesterFunctions all;

  template (value) SRB_ToAddModList_NB_r13 cs_508_SRB_ToAddModList_NB_RECONFIG :=
  { /* Defaule values according to 36.508 Table 8.1.6.3-13 and Table 8.1.6.3-12 */
    /* @status    APPROVED (NBIOT) */
    cs_SRB_ToAddMod_NB_RLC_Config(cs_UL_AM_RLC_NB_r13(ms15000, t6), // @sic R5-172850 sic@
                                  cs_DL_AM_RLC_NB_r13_NoGapReport)
  };

  template (value) RadioResourceConfigDedicated_NB_r13 cs_RadioResourceConfigDedicated_NB_SRBRECONFIG(template (value) SRB_ToAddModList_NB_r13 p_SRB_ToAddModList_NB_RECONFIG) :=
  { /* @status    APPROVED (NBIOT) */
    srb_ToAddModList_r13        := p_SRB_ToAddModList_NB_RECONFIG,
    drb_ToAddModList_r13        := omit,
    drb_ToReleaseList_r13       := omit,
    mac_MainConfig_r13          := omit,
    physicalConfigDedicated_r13 := omit,
    rlf_TimersAndConstants_r13  := omit,
    schedulingRequestConfig_r15 := omit           /* @sic R5s180552 BASELINE MOVING 2018 sic@ */
  };

  template (value) RLF_TimersAndConstants_NB_r13 cs_RLF_TimersAndConstants_Setup_UP := cs_RLF_TimersAndConstants_Setup(ms2500);  /* @status    APPROVED (NBIOT)
                                                                                                                                    @sic R5-173965: ms2500 sic@ */

  /*
   * @desc      REFERENCE TS 36.523-1 clause 22.4.15
   * @status    APPROVED (NBIOT)
   */
  function f_TC_22_4_15_NBIOT() runs on NBIOT_PTC
  {
    var EUTRA_ASN1_ResumeIdentity_r13_Type v_ResumeIdentityStep2 := tsc_CIOT_ResumeIdentity_Def;
    var EUTRA_ASN1_ResumeIdentity_r13_Type v_ResumeIdentityStep7 := not4b v_ResumeIdentityStep2;
    var EUTRA_ASN1_ShortMAC_I_Type v_ShortMAC_I;
    var template (value) NB_CellPowerList_Type v_CellPowerList_AtT0 := {
      cs_NB_CellPower(nbiot_Cell1, -85),
      cs_NB_CellPower(nbiot_Cell11, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    var template (value) NB_CellPowerList_Type v_CellPowerList_AtT1 := {
      cs_NB_CellPower(nbiot_Cell1, -85),
      cs_NB_CellPower(nbiot_Cell11, -73)
    };

    f_NBIOT_Init(c3, USER_PLANE);
    f_NBIOT_CellInfo_InitMaxReferencePower(nbiot_Cell11, -73);

    // Create and configure all cells
    f_NBIOT_CellConfig_Def(nbiot_Cell1, USER_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell11, USER_PLANE);

    f_NBIOT_Preamble(nbiot_Cell1, USER_PLANE);
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell1, USER_PLANE, RRC_CONNECTED);

    f_NBIOT_SetCellPowerList(v_CellPowerList_AtT0);  // @sic R5s170515 change 8.1 sic@

    f_NBIOT_TestBody_Set(true);

    //@siclog "Step 1" siclog@
    f_UT_SwitchOnUE(UT, false);
    f_NBIOT_InitialRegistration(nbiot_Cell1, USER_PLANE, NORMAL, STATE2_NB_CONNECTED_UPDATED);         // @sic R5s170515 additional change: no call of the preamble sic@

    //@siclog "Step 2" siclog@
    f_NBIOT_RRCConnectionSuspend(nbiot_Cell1, v_ResumeIdentityStep2);                                  /* suspend RRC connection;
                                                                                                          @sic R5-182302 change 4, R5w180105 sic@ */
    v_ShortMAC_I := f_NBIOT_Calculate_ShortMAC(nbiot_Cell1, -, tsc_VarShortMAC_ResumeDiscriminator);   // @sic R5s170515 change 8.4: tsc_VarShortMAC_ResumeDiscriminator sic@
    f_NBIOT_SS_ConfigDRB1AndRachProcedureMsg4_RRCConnResume(nbiot_Cell1, cs_RRCConnectionResume_NB);   /* reestablish security and set msg 4 to RRCConnectionResume ;
                                                                                                          @sic R5-182302 change 4, R5w180105 sic@ */

    //@siclog "Step 3" siclog@
    f_NBIOT_UE_Page(nbiot_Cell1);

    //@siclog "Step 4 - 6" siclog@
    f_NBIOT_RRCConnectionResume(nbiot_Cell1, v_ResumeIdentityStep2, v_ShortMAC_I, mt_Access, omit);    // RRC connection resume at cell 1

    //@siclog "Step 7" siclog@
    f_NBIOT_RRCConnectionSuspend(nbiot_Cell1, v_ResumeIdentityStep7);                                  // RRC connection suspend at cell 1
    v_ShortMAC_I := f_NBIOT_Calculate_ShortMAC(nbiot_Cell1, nbiot_Cell11, tsc_VarShortMAC_ResumeDiscriminator);   // @sic R5s170515 change 8.4: tsc_VarShortMAC_ResumeDiscriminator sic@

    //@siclog "Step 8" siclog@
    f_NBIOT_SetCellPowerList(v_CellPowerList_AtT1);
    f_NBIOT_SS_ConfigDRB1AndRachProcedureMsg4_RRCConnResume(nbiot_Cell11, cs_RRCConnectionResume_NB);  /* @sic R5-182302 change 4, R5w180105: reestablish security and set msg 4 to RRCConnectionResume for cell 11 sic@
                                                                                                          @sic R5s180469 additional change 1: Configuration not before cell 11 is turned on sic@
                                                                                                          @sic R5s180469 additional change 2: Configuration of DRB1 inside the function sic@ */
    //@siclog "Step 9" siclog@
    f_NBIOT_508CheckRRCConnectionResumeOnNewCell(nbiot_Cell11, v_ResumeIdentityStep7, v_ShortMAC_I, mo_Signalling);
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, " Step 9");

    f_NBIOT_TestBody_Set(false);
    
    //Switch/power off UE
    f_NBIOT_Postamble(nbiot_Cell11, USER_PLANE, N1_IDLE);    // @sic R5s170515 change 8.4: N1_IDLE instead of N2_CONNECTED sic@
  }

  /*
   * @desc      REFERENCE TS 36.523-1 clause 22.4.16
   * @status    APPROVED (NBIOT)
   */
  function f_TC_22_4_16_NBIOT() runs on NBIOT_PTC
  {
    var EUTRA_ASN1_ResumeIdentity_r13_Type v_ResumeIdentityStep2 := tsc_CIOT_ResumeIdentity_Def;
    var EUTRA_ASN1_ResumeIdentity_r13_Type v_ResumeIdentityStep14 := not4b v_ResumeIdentityStep2;
    var EUTRA_ASN1_ShortMAC_I_Type v_ShortMAC_I;
    var template (value) NB_CellPowerList_Type v_CellPowerList_AtT0 := {
      cs_NB_CellPower(nbiot_Cell1, -85),
      cs_NB_CellPower(nbiot_Cell11, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    var template (value) NB_CellPowerList_Type v_CellPowerList_AtT1 := {
      cs_NB_CellPower(nbiot_Cell1, -85),
      cs_NB_CellPower(nbiot_Cell11, -73)
    };

    f_NBIOT_Init(c3, USER_PLANE);
    f_NBIOT_CellInfo_InitMaxReferencePower(nbiot_Cell11, -73);

    // Create and configure all cells
    f_NBIOT_CellConfig_Def(nbiot_Cell1, USER_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell11, USER_PLANE);

    f_NBIOT_Preamble(nbiot_Cell1, USER_PLANE);
    f_NBIOT_UE_Detach_SwitchOffUe(nbiot_Cell1, USER_PLANE, RRC_CONNECTED);
    f_NBIOT_SetCellPowerList(v_CellPowerList_AtT0);  // @sic R5s170517 change 1.1 sic@

    f_NBIOT_TestBody_Set(true);

    //@siclog "Step 1" siclog@
    f_UT_SwitchOnUE(UT, false);
    f_NBIOT_InitialRegistration(nbiot_Cell1, USER_PLANE, NORMAL, STATE2_NB_CONNECTED_UPDATED);         // @sic R5s170517 change 1.1 sic@

    //@siclog "Step 2" siclog@
    f_NBIOT_RRCConnectionSuspend(nbiot_Cell1, v_ResumeIdentityStep2);
    v_ShortMAC_I := f_NBIOT_Calculate_ShortMAC(nbiot_Cell1, -, tsc_VarShortMAC_ResumeDiscriminator);   // @sic R5s170517 change 1.2: tsc_VarShortMAC_ResumeDiscriminator sic@
    f_NBIOT_SS_ConfigRachProcedureMsg4(nbiot_Cell1, cs_RRCConnectionReject_NB);                        /* Pre-configuration of Msg4 of RACH procedure (Step 5)
                                                                                                          @sic R5-182302 change 4, R5w180105: set msg 4 to RRCConnectionReject for cell 1 sic@ */
    
    //@siclog "Step 3" siclog@
    f_NBIOT_UE_Page(nbiot_Cell1);

    //@siclog "Step 4" siclog@
    SRB.receive(car_NB_SRB0_RrcPdu_IND(nbiot_Cell1, cr_RRCConnectionResumeRequest_NB(v_ResumeIdentityStep2, v_ShortMAC_I, mt_Access)));

    //@siclog "Step 5" siclog@
    // @sic R5-182302 change 4, R5w180105: RRCConnectionReject preconfigured at the SS before paging sic@
    
    f_Delay(0.5);                                                                                      // @sic R5s170517 change 1.3: Wait for reject to be sent out sic@
    f_NBIOT_SS_ConfigRachProcedureMsg4(nbiot_Cell1, f_NBIOT_508_RRCConnectionSetup());                 // @sic R5s170517 change 1.4: configure Msg4 back to the default RRC Conn Setup sic@

    //@siclog "Step 6 - 13" siclog@
    f_NBIOT_GenericRbEst(nbiot_Cell1, mt_Access);
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, " Step 7");

    //@siclog "Step 14" siclog@
    f_NBIOT_RRCConnectionSuspend(nbiot_Cell1, v_ResumeIdentityStep14);
    v_ShortMAC_I := f_NBIOT_Calculate_ShortMAC(nbiot_Cell1, nbiot_Cell11, tsc_VarShortMAC_ResumeDiscriminator);   // @sic R5s170517 change 1.2: tsc_VarShortMAC_ResumeDiscriminator sic@
    f_NBIOT_SS_ConfigRachProcedureMsg4(nbiot_Cell11, cs_RRCConnectionReject_NB(-, true_));              /* Pre-configuration of Msg4 of RACH procedure (Step 17)
                                                                                                           @sic R5-182302 change 4, R5w180105: set msg 4 to RRCConnectionReject for cell 11 sic@ */

    //@siclog "Step 15" siclog@
    f_NBIOT_SetCellPowerList(v_CellPowerList_AtT1);

    //@siclog "Step 16" siclog@
    SRB.receive(car_NB_SRB0_RrcPdu_IND(nbiot_Cell11, cr_RRCConnectionResumeRequest_NB(v_ResumeIdentityStep14, v_ShortMAC_I, mo_Signalling)));     // @sic R5s170517 change 1.6: nbiot_Cell11 sic@

    //@siclog "Step 17" siclog@
    // @sic R5-182302 change 4, R5w180105: RRCConnectionReject preconfigured at the SS before paging sic@

    //@siclog "Step 18" siclog@
    v_ShortMAC_I := f_NBIOT_Calculate_ShortMAC(nbiot_Cell1, nbiot_Cell11, tsc_VarShortMAC_ResumeDiscriminator);   /* @sic R5s170517 change 1.2: tsc_VarShortMAC_ResumeDiscriminator sic@ */
    f_NBIOT_SS_ConfigDRB1AndRachProcedureMsg4_RRCConnResume(nbiot_Cell11, cs_RRCConnectionResume_NB);             /* @sic R5-182302 change 4, R5w180105: reestablish security and set msg 4 to RRCConnectionResume for cell 11 sic@
                                                                                                                     @sic R5s180469 additional change 2: Configuration of DRB1 inside the function sic@ */

    f_NBIOT_508CheckRRCConnectionResumeOnNewCell(nbiot_Cell11, v_ResumeIdentityStep14, v_ShortMAC_I, mo_Signalling);
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, " Step 18");

    f_NBIOT_TestBody_Set(false);
    
    //Switch/power off UE
    f_NBIOT_Postamble(nbiot_Cell11, USER_PLANE, N1_IDLE);    // @sic R5s170517 change 1.7: N1_IDLE instead of N2_CONNECTED sic@
  }

  /*
   * @desc      REFERENCE TS 36.523-1 clause 22.4.18
   * @status    APPROVED (NBIOT)
   */
  function f_TC_22_4_18_NBIOT() runs on NBIOT_PTC
  {
    f_NBIOT_Init(c1, USER_PLANE);
    
    //Create and configure cell
    f_NBIOT_CellConfig_Def(nbiot_Cell1, USER_PLANE);
    
    /* Preamble to enter UE in State 2-NB, Attach Connected Mode */
    f_NBIOT_Preamble(nbiot_Cell1, USER_PLANE);
    
    f_NBIOT_TestBody_Set(true);
    
    //@siclog "Step 1" siclog@
    //The SS transmits an RRConnectionReconfiguration-NB message containing a radioResourceConfigDedicated with SRB reconfiguration
    SRB.send(cas_NB_SRB_RrcPdu_REQ(nbiot_Cell1,
                                   tsc_SRB1,
                                   cs_TimingInfo_Now,
                                   cs_RRCConnectionReconfiguration_NB(tsc_RRC_TI_Def,
                                                                      cs_RadioResourceConfigDedicated_NB_SRBRECONFIG(cs_508_SRB_ToAddModList_NB_RECONFIG))));
    
    //@siclog "Step 2" siclog@
    //Check: Does the UE transmit an RRCConnectionReconfigurationComplete-NB message?
    SRB.receive(car_NB_SRB_RrcPdu_IND(nbiot_Cell1, tsc_SRB1, cr_RRCConnectionReconfigurationComplete_NB(tsc_RRC_TI_Def)));
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Test Case 22.4.18 Step 2");
    
    f_NBIOT_TestBody_Set(false);
    
    /* Postamble */
    f_NBIOT_Postamble(nbiot_Cell1, USER_PLANE, N2_CONNECTED);
  }

  /*
   * @desc      REFERENCE TS 36.523-1 clause 22.4.20
   * @status    APPROVED (NBIOT)
   */
  function f_TC_22_4_20_NBIOT() runs on NBIOT_PTC
  { // NB-IoT / Radio link failure / RRC connection re-establishment reject
    var SystemInformationBlockType2_NB_r13 v_SIB2;
    var EUTRA_ASN1_ShortMAC_I_Type v_ShortMAC_I;
    var EUTRA_ASN1_PhysCellId_Type v_PhysCellId;
    var template (present) EUTRA_ASN1_ReestabUE_Identity_Type v_UE_Identity;
    var template (value) NB_RachProcedureList_Type v_RachProcedureList;
    var template (value) NB_CellPowerList_Type v_CellPowerList_Step1 := {
      cs_NB_CellPower(nbiot_Cell1, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell2, tsc_Suitable_NeighbourIntraFreq_CellRS_EPRE) // @sic R5s180277 sic@
    };
    
    f_NBIOT_Init(c2, USER_PLANE);
    
    // @sic R5s170523 change 1.1, R5-174301: Set the value of T311 timer in SIB2 for Ncell 1  sic@
    v_SIB2 := f_NBIOT_CellInfo_GetSIB2(nbiot_Cell1);
    v_SIB2.ue_TimersAndConstants_r13.t311_r13 := ms10000;
    f_NBIOT_CellInfo_SetSIB2 (nbiot_Cell1, v_SIB2);
    
    //Create and configure all cells
    f_NBIOT_CellConfig_Def(nbiot_Cell1, USER_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell2, CONTROL_PLANE); // @sic R5s180021 change 1.1: CONTROL_PLANE instead of USER_PLANE sic@

    //Bring UE to initial state
    f_NBIOT_Preamble(nbiot_Cell1, USER_PLANE);
    
    f_NBIOT_TestBody_Set(true);

    //Setup the RRC Connection Reestablishment Reject message to be sent in step 3 and the RRCConnectionSetup for the TAU procedure @sic R5s170523 change 1.5: preconfiguration of RRCConnectionSetup sic@
    v_RachProcedureList := {
      cs_NB_RachProcedure(cs_NB_RandomAccessResponseConfig_Def, cs_NB_ContentionResolutionCtrl_Def(cs_ContentionResolution_DlschSdu(f_RRC_DL_CCCH_NB_Encvalue(cs_RRCConnectionReestablishmentReject_NB)))),
      cs_NB_RachProcedure(cs_NB_RandomAccessResponseConfig_Def, cs_NB_ContentionResolutionCtrl_Def(cs_ContentionResolution_DlschSdu(f_RRC_DL_CCCH_NB_Encvalue(f_NBIOT_508_RRCConnectionSetup()))))
    };
    f_NBIOT_SS_CommonCellConfig(nbiot_Cell2, cads_NB_RachProcedure_Config_REQ(nbiot_Cell2, cs_TimingInfo_Now, -, -, v_RachProcedureList));  //@sic R5s170523 change 1.5: nbiot_Cell2 sic@
    
    //@siclog "Step 1" siclog@
    //The SS changes the power level of Ncell 1 to non-suitable "Off" and changes the power level of Ncell 2 to suitable according to TS 36.508 subclause 8.3.2.2.1-1 in order that the radio link quality of Ncell 1 is degraded.
    f_NBIOT_SetCellPowerList(v_CellPowerList_Step1);
    
    //@siclog "Step 2" siclog@
    //The UE sends RRCConnectionReestablishmentRequest-NB message on Ncell 2.
    v_PhysCellId := f_NBIOT_CellInfo_GetPhyCellId(nbiot_Cell1);               // @sic R5s170523 change 1.3: nbiot_Cell1 instead of nbiot_Cell2 sic@
    v_ShortMAC_I := f_NBIOT_Calculate_ShortMAC(nbiot_Cell1, nbiot_Cell2);     // @sic R5s170523 change 1.4: nbiot_Cell1, nbiot_Cell2 instead of nbiot_Cell2 sic@
    v_UE_Identity := cr_ReestabUE_Identity_NB(tsc_C_RNTI_Def, v_PhysCellId, v_ShortMAC_I);
    SRB.receive(car_NB_SRB0_RrcPdu_IND(nbiot_Cell2, cr_RRCConnectionReestablishmentRequest_NB(v_UE_Identity, otherFailure)));
    
    //@siclog "Step 3" siclog@
    //The SS transmits a RRCConnectionReestablishmentReject message.
    //Automatically sent by SS
    
    //@siclog "Step 4 - 9" siclog@
    //Check: Does the UE perform TAU procedure based on steps 1 to 5 of subclause 8.1.5A.5 in TS 36.508 on Ncell 2.
    //The SS transmits an RRCConnectionRelease-NB message to release RRC connection and move to RRC_IDLE.
    f_NBIOT_TrackingAreaUpdate(nbiot_Cell2, CONTROL_PLANE); // @sic R5s180551 sic@
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Steps 4 - 8");
       
    f_NBIOT_TestBody_Set(false);
    
    //Switch/power off UE
    f_NBIOT_Postamble(nbiot_Cell2, CONTROL_PLANE, N1_IDLE); // @sic R5s170681 Even though this is a UP test case, UE still in CP on Ncell 2 sic@
  }

  /*
   * @desc      REFERENCE TS 36.523-1 clause 22.4.21
   * @status    APPROVED (NBIOT)
   */
  function f_TC_22_4_21_NBIOT() runs on NBIOT_PTC
  {
    var SystemInformationBlockType2_NB_r13 v_SIB2;
    
    f_NBIOT_Init(c1, USER_PLANE);
    
    //Set the value of T310 timer in SIB2
    v_SIB2 := f_NBIOT_CellInfo_GetSIB2(nbiot_Cell1);
    v_SIB2.ue_TimersAndConstants_r13.t310_r13 := ms2000;
    f_NBIOT_CellInfo_SetSIB2(nbiot_Cell1, v_SIB2);
    
    //Create and configure all cells
    f_NBIOT_CellConfig_Def(nbiot_Cell1, USER_PLANE);

    //Bring UE to initial state
    f_NBIOT_Preamble(nbiot_Cell1, USER_PLANE);

    f_NBIOT_TestBody_Set(true);

    //@siclog "Step 1" siclog@
    //The SS changes Ncell 1 levels according to row "T1" in Table 22.4.21.3.2-1.
    f_NBIOT_SetCellPower(nbiot_Cell1, tsc_NonSuitableOffNBIOTCellRS_EPRE);

    //@siclog "Step 2" siclog@
    //Wait for 1.5 s.
    f_Delay(1.5);

    //@siclog "Step 3" siclog@
    //The SS changes Ncell 1 levels according to row "T0" in Table 22.4.21.3.2-1.
    f_NBIOT_SetCellPower(nbiot_Cell1, -85);

    //@siclog "Step 4" siclog@
    //Wait for 5s.
    // If the UE transmits any signalling message, this will be picked up in the Default Behaviour
    f_Delay(5.0);

    //@siclog "Step 5" siclog@
    f_NBIOT_Capability(nbiot_Cell1, USER_PLANE);
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 5");

    f_NBIOT_TestBody_Set(false);
    
    //Switch/power off UE
    f_NBIOT_Postamble(nbiot_Cell1, USER_PLANE, N2_CONNECTED);
  }

  /*
   * @desc      REFERENCE TS 36.523-1 clause 22.4.22
   * @status    APPROVED (NBIOT)
   */
  function f_TC_22_4_22_NBIOT() runs on NBIOT_PTC
  {
    var template (value) NB_CellPowerList_Type v_CellPowerList_AtT1;
    var template (value) NB_CellPowerList_Type v_CellPowerList_AtT2;
    var template (value) NB_CellPowerList_Type v_CellPowerList_AtT3;
    var SystemInformationBlockType2_NB_r13 v_SIB2;
    var EUTRA_ASN1_ShortMAC_I_Type v_ShortMAC_I;
    var EUTRA_ASN1_PhysCellId_Type v_PhysCellId;
    var template (present) EUTRA_ASN1_ReestabUE_Identity_Type v_UE_Identity;
    var NBIOT_SecurityParams_Type v_SecurityParams;
    var NAS_MSG_Indication_Type v_NAS_Ind;
    var template (value) NAS_MSG_Request_Type v_NAS_MSG_Request;
    var boolean v_IPv4AllocationViaNasFlag := false;
    var template (omit) ExtdProtocolConfigOptions v_PcoToUE := omit;
    var template (omit) ExtdProtocolConfigOptions v_PcoFromUE := omit;
    var template (value) PDN_Address v_PDN_Address;
    var NBIOT_PDN_Type v_PDN;
    var GutiParameters_Type v_GutiParams;
    var template (value) MobileIdentity v_Guti;
    
    timer t_Wait;
    
    v_CellPowerList_AtT1 := {
      cs_NB_CellPower(nbiot_Cell1, tsc_NonSuitableOffNBIOTCellRS_EPRE),
      cs_NB_CellPower(nbiot_Cell5, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    v_CellPowerList_AtT2 := {
      cs_NB_CellPower(nbiot_Cell5, -85)
    };
    v_CellPowerList_AtT3 := {
      cs_NB_CellPower(nbiot_Cell1, -85),
      cs_NB_CellPower(nbiot_Cell5, tsc_NonSuitableOffNBIOTCellRS_EPRE)
    };
    
    f_NBIOT_Init(c2, USER_PLANE);  // @sic R5-176139 sic@
    
    //Set the value of T311 timer in SIB2 for Ncell 1, Ncell 5
    v_SIB2 := f_NBIOT_CellInfo_GetSIB2(nbiot_Cell1);
    v_SIB2.ue_TimersAndConstants_r13.t301_r13 := ms2500; // @sic R5-176139 sic@
    v_SIB2.ue_TimersAndConstants_r13.t311_r13 := ms30000;
    f_NBIOT_CellInfo_SetSIB2 (nbiot_Cell1, v_SIB2);
    
    v_SIB2 := f_NBIOT_CellInfo_GetSIB2(nbiot_Cell5);
    v_SIB2.ue_TimersAndConstants_r13.t301_r13 := ms2500; // @sic R5-176139 sic@
    v_SIB2.ue_TimersAndConstants_r13.t311_r13 := ms30000;
    f_NBIOT_CellInfo_SetSIB2 (nbiot_Cell5, v_SIB2);
    
    //Create and configure all cells
    f_NBIOT_CellConfig_Def(nbiot_Cell1, USER_PLANE);
    f_NBIOT_CellConfig_Def(nbiot_Cell5, USER_PLANE); // @sic R5-176139 sic@

    //Bring UE to initial state @sic R5s170536 sic@
    f_NBIOT_SetCellPower(nbiot_Cell1, tsc_ServingCellRS_EPRE);

    // Switch on UE
    f_UT_SwitchOnUE(UT, false);

    v_GutiParams := f_NBIOT_CellInfo_GetGuti(nbiot_Cell1);
    v_Guti := f_GutiParameters2MobileIdentity(tsc_IEI_Guti, v_GutiParams);
    v_NAS_Ind := f_NBIOT_InitialRegistration_Step2_4 (nbiot_Cell1, USER_PLANE, PREAMBLE);
    f_NBIOT_InitialRegistration_Step5_12(nbiot_Cell1, USER_PLANE, STATE2_NB_CONNECTED_UPDATED, v_NAS_Ind);
    v_PDN := f_NBIOT_MobileInfo_GetAssignedPdn(0);  // This is registration, so this is the first PDN
    v_PcoFromUE := v_PDN.protocolConfigurationOptions;
    
    if (isvalue(v_PcoFromUE)){
      v_IPv4AllocationViaNasFlag := f_CheckExtdPCOforIPallocationViaNas(v_PcoFromUE);
    }
    v_PcoToUE := f_GetDefaultExtdProtocolConfigOptions(v_PcoFromUE);
    v_PDN_Address := f_CIOT_GetPDNAddress(v_PDN.assignedPdnType, v_IPv4AllocationViaNasFlag, -, pdnTypeAsSupportedByUE); // @sic R5s170597 sic@
    
    v_NAS_MSG_Request := cs_NAS_RequestWithPiggybacking(tsc_SHT_IntegrityProtected_Ciphered,
                                                        cs_ATTACH_ACCEPT_Common(tsc_EAttachType_EpsOnly,
                                                                                cs_GprsTimer_v_deact,
                                                                                cs_TAIListNonConsecutive_lv(f_Asn2Nas_PlmnId (v_GutiParams.PLMN_Identity), {bit2oct(f_NBIOT_CellInfo_GetTAC(nbiot_Cell1))}),
                                                                                v_Guti,
                                                                                omit,
                                                                                omit,
                                                                                omit,
                                                                                omit,
                                                                                omit,
                                                                                omit,
                                                                                omit,
                                                                                cs_EPS_NwkFtSup_UP,
                                                                                f_GetNBIOTAdditionalUpdateResult(v_NAS_Ind.Pdu.Msg.aTTACH_REQUEST.addUpdateType),
                                                                                omit,
                                                                                omit),
                                                        cs_CIOT_ActivateDefEpsBearerContextRequest(tsc_EpsDefaultBearerId,
                                                                                                   v_PDN.pti,
                                                                                                   v_PDN.accessPointName,
                                                                                                   v_PDN_Address,
                                                                                                   v_PcoToUE,
                                                                                                   omit,
                                                                                                   omit));
    // Send specific message contents in RRC Connection Reconfiguration message
    SRB.send(cas_NB_SRB1_RrcNasPduList_REQ(nbiot_Cell1,
                                           cs_TimingInfo_Now,
                                           cs_RRCConnectionReconfiguration_NB(tsc_RRC_TI_Def, cs_RadioResourceConfigDedicated_NB_DrbConfig({ cs_508_NB_DRB_ToAddMod_DEFAULT(tsc_DRB1) },
                                                                                                                                           -,
                                                                                                                                           cs_RLF_TimersAndConstants_Setup_UP)),
                                           {v_NAS_MSG_Request}));
    
    SRB.receive(car_NB_SRB_RrcPdu_IND(nbiot_Cell1, tsc_SRB1, cr_RRCConnectionReconfigurationComplete_NB(tsc_RRC_TI_Def)));
    
    // Now finish preamble
    f_NBIOT_NAS_AttachComplete_UP(nbiot_Cell1, tsc_EpsDefaultBearerId);
    
    f_NBIOT_TestBody_Set(true);
    
    //@siclog "Step 1" siclog@
    //The SS changes Ncell 1 levels according to row "T1" in Table 22.4.22.3.2-1.
    f_NBIOT_SetCellPowerList(v_CellPowerList_AtT1);
    
    //@siclog "Step 2" siclog@
    //Wait for 10 s.
    f_Delay(10.0);
    
    //@siclog "Step 3" siclog@
    //The SS changes Ncell 2 levels according to row "T2" in Table 22.4.22.3.2-1.
    f_NBIOT_SetCellPowerList(v_CellPowerList_AtT2);
    
    //@siclog "Step 4-9" siclog@
    f_NBIOT_TrackingAreaUpdate(nbiot_Cell5, USER_PLANE); // @sic R5s180550, R5s190015 sic@
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 4");
    
    //@siclog "Step 10" siclog@
    //Wait for 5 s.
    f_Delay(5.0);
    
    //@siclog "Step 11" siclog@
    //The generic test procedure in TS 36.508 subclause 8.1.5A.2.3 is performed on Ncell 2
    f_NBIOT_GenericRbEst(nbiot_Cell5, mt_Access, -, -, cs_RLF_TimersAndConstants_Setup_UP); // @sic R5s170885 sic@
    
    //@siclog "Step 12" siclog@
    //The SS transmits an RRCConnectionReconfiguration-NB message on Ncell 2
    SRB.send(cas_NB_SRB_RrcPdu_REQ(nbiot_Cell5,
                                   tsc_SRB1,
                                   cs_TimingInfo_Now,
                                   cs_RRCConnectionReconfiguration_NB(tsc_RRC_TI_Def,
                                                                      cs_RadioResourceConfigDedicated_NB_DrbConfig(omit,
                                                                                                                   omit,
                                                                                                                   cs_RLF_TimersAndConstants_Release))));
    
    //@siclog "Step 13" siclog@
    SRB.receive(car_NB_SRB_RrcPdu_IND(nbiot_Cell5, tsc_SRB1, cr_RRCConnectionReconfigurationComplete_NB(tsc_RRC_TI_Def)));
    
    //@siclog "Step 14" siclog@
    //The SS changes Ncell 2 levels according to row "T1" in Table 22.4.22.3.2-1.
    f_NBIOT_SetCellPowerList(v_CellPowerList_AtT1);
    
    //@siclog "Step 15" siclog@
    //Wait for 10 s.
    f_Delay(10.0);
    
    //Release RRC security, SRBs and DRBs. Configure the SRBs and DRBs.
    f_NBIOT_SS_RRC_ReleaseSecurity(nbiot_Cell1);
    f_NBIOT_SS_SRBs_DRBs_Reset(nbiot_Cell1, USER_PLANE);
    
    f_NBIOT_SS_ConfigRachProcedureWithNoMsg4(nbiot_Cell1);    // @sic R5s180217, R5-187773 sic@
    //@siclog "Step 16" siclog@
    //The SS changes Ncell 1 levels according to row "T3" in Table 22.4.22.3.2-1
    f_NBIOT_SetCellPowerList(v_CellPowerList_AtT3);

    //@siclog "Step 17" siclog@
    v_PhysCellId := f_NBIOT_CellInfo_GetPhyCellId(nbiot_Cell5); // @sic R5s170536 sic@
    v_ShortMAC_I := f_NBIOT_Calculate_ShortMAC(nbiot_Cell5, nbiot_Cell1); // @sic R5s170536 sic@
    v_UE_Identity := cr_ReestabUE_Identity_NB(tsc_C_RNTI_Def, v_PhysCellId, v_ShortMAC_I);
    SRB.receive(car_NB_SRB0_RrcPdu_IND(nbiot_Cell1, cr_RRCConnectionReestablishmentRequest_NB(v_UE_Identity, otherFailure)));
    
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 17");
    
     //@siclog "Step 18-21 Void" siclog@
    //@siclog "Step 22" siclog@
    //The SS does not respond for 2.5 seconds (T301)
    t_Wait.start(f_NBIOT_SetTimerToleranceMin(rrcTimer, 2.5)); // @sic R5-176139 sic@
    alt { // @sic R5s180217 sic@
      [] SRB.receive(car_NB_SRB0_RrcPdu_IND(nbiot_Cell1, cr_RRCConnectionReestablishmentRequest_NB(v_UE_Identity, otherFailure)))
        {repeat;}
      [] t_Wait.timeout {}
    }
    f_NBIOT_SS_SRBs_DRBs_Reset(nbiot_Cell1, USER_PLANE);
    f_NBIOT_SS_ConfigRachProcedureMsg4(nbiot_Cell1, f_NBIOT_508_RRCConnectionSetup());    // @sic R5s180217 sic@
   
    //Activate RRC security
    v_SecurityParams := f_NBIOT_Security_Get();
    v_SecurityParams := f_NBIOT_SS_AS_ReestablishResumeSecurity(nbiot_Cell1, v_SecurityParams, rrcConnectionReestablishment);
    f_NBIOT_Security_Set(v_SecurityParams);
    
   //@siclog "Step 23-28" siclog@
    // Check: Does the UE perform TAU on Ncell1
    f_NBIOT_TrackingAreaUpdate(nbiot_Cell1, USER_PLANE);  // @sic R5-176139, R5s180550, R5s190015 sic@
    f_NBIOT_PreliminaryPass(__FILE__, __LINE__, "Step 28");
    

    f_NBIOT_TestBody_Set(false);
    
    //Switch/power off UE
    f_NBIOT_Postamble(nbiot_Cell1, USER_PLANE, N1_IDLE); // @sic R5-176139 sic@
  }

}
