/******************************************************************************/
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3 v15.3.0
// $Date: 2019-03-16 19:54:08 +0100 (Sat, 16 Mar 2019) $
// $Rev: 24094 $
/******************************************************************************/

module UpperTesterCommon {


  group TypeDefs_Common {

  type record Ut_Parameter_Type {               /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    charstring Name,            // name of the parameter/attribute
    charstring Value            // value (may need to be converted e.g. to integer)
  };

  type record of Ut_Parameter_Type Ut_ParameterList_Type;       /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */

  type enumerated Ut_CnfReq_Type {              /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    NO_CNF_REQUIRED,
    CNF_REQUIRED,               /* to request CNF as got from the UE */
    LOCAL_CNF_REQUIRED          /* to request immediate CNF after SS has submitted the command to the UE (SS shall not wait for the UE is responding)
                                   @sic R5s110176 BASELINE MOVING 2011 sic@ */
  };

  type record UT_COMMON_CNF {                   /* Common confirmation triggered by the UE;
                                                   used at the system interface as well as at the inter PTC interface;
                                                   @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    boolean         Result,                     // true: success; false: failure
    charstring      ResultString  optional      // contains response from the UE (if there is any)
  };

  } // end of group TypeDefs_Common

  group TypeDefs_UT_System {

  type record MMI_Cmd_Type {                            /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    charstring Cmd,                                     /* commands corresponding to Ut_Common_Req_Type (e.g. "SelectPLMN");
                                                           it is a charstring rather than a enumerated to allow generic implementation in the system adaptor */
    Ut_ParameterList_Type ParameterList optional        /* additional information to perform the MMI:
                                                           e.g. for "SelectPLMN" this is {"MCC" <MCC value>}, {"MNC" <MNC value>} */

  };

  type union Ut_System_Cmd_Type {                       /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    charstring    AT,                                   /* to carry mandatory and optional AT commands */
    MMI_Cmd_Type  MMI                                   /* to carry MMI commands and optional AT commands */
  };

  type record UT_SYSTEM_REQ {                           /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    Ut_System_Cmd_Type  Cmd,
    Ut_CnfReq_Type      CnfRequired                     /* Notes: a confirmation shall only be requested in cases when there is no signalling
                                                         *        from the UE being triggered by the MMI/AT command
                                                         * @sic R5s110176 BASELINE MOVING 2011 sic@ */
  };

  } // end of group TypeDefs_UT_System

  type port MTC_System_Ut message {     /* Upper Tester: Port at MTC to be connected with system
                                           @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    out UT_SYSTEM_REQ;
    in  UT_COMMON_CNF;
  };

  template (present) UT_COMMON_CNF car_UT_COMMON_CNF :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    Result          := ?,  // result is a mandatory field
    ResultString    := *
  };

  template (value) UT_SYSTEM_REQ cas_UT_SYSTEM_REQ(template (value) Ut_System_Cmd_Type p_ATorMMI_Cmd,
                                                   Ut_CnfReq_Type p_CnfRequired) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    Cmd := p_ATorMMI_Cmd,
    CnfRequired := p_CnfRequired
  };

  template (value) Ut_Parameter_Type cs_Ut_Parameter_Common(charstring p_Name,
                                                            template (value) charstring p_Value) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    Name := p_Name,
    Value := p_Value
  };

  template (value) Ut_System_Cmd_Type cs_AT_Cmd(charstring p_AtCmd) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    AT := p_AtCmd
  };

  template (value) Ut_System_Cmd_Type cs_MMI_Cmd(charstring p_MmiCmd,
                                                 template (omit) Ut_ParameterList_Type p_ParamList) :=
  { /* @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN) */
    MMI := {
      Cmd := p_MmiCmd,
      ParameterList := p_ParamList
    }
  };

  /*
   * @desc      Check if a UT command is confirmed as expected
   * @param     p_CnfReq
   * @return    boolean
   * @status    APPROVED (ENDC, IMS, IMS_IRAT, LTE, LTE_A_IRAT, LTE_A_PRO, LTE_A_R10_R11, LTE_A_R12, LTE_IRAT, NBIOT, POS, SSNITZ, UTRAN)
   */
  function f_UT_CommandRequiresCnf(template (value) Ut_CnfReq_Type p_CnfReq) return boolean
  {
    return (match(CNF_REQUIRED, p_CnfReq) or match(LOCAL_CNF_REQUIRED, p_CnfReq)); // @sic R5-151792 sic@
  }

}
