/******************************************************************************/
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3 v15.3.0
// $Date: 2018-09-06 11:29:18 +0200 (Thu, 06 Sep 2018) $
// $Rev: 22180 $
/******************************************************************************/

module NR_PDCP_TypeDefs {
  import from CommonDefs all;
  import from CommonAspDefs all;

  group NR_PDCP_Config_Parameters {                                     /* Parameters defined in or related to NR ASN.1 type PDCP-Config */

  type enumerated NR_PDCP_SN_Size_Type {
                                                                        /* PDCP Sequence Number */
    PDCP_SNLength12,                                                    /* TS 38.323 clause 6.2.2.1 and clause 6.2.2.2 */
    PDCP_SNLength18                                                     /* TS 38.323 clause 6.2.2.3 */
  };

  type union NR_PDCP_DRB_HeaderCompression_Type {
  /* place holder for header compression */
    Null_Type                           None
  };
  
  type record NR_PDCP_DRB_Config_Parameters_Type {                      /* parameters corrsponding to NR ASN.1 PDCP-Config.drb;
                                                                           the following parameter are not included and may be added if needed:
                                                                           - integer DiscardTimer   (timer value in milliseconds)
                                                                           - boolean StatusReportRequired
                                                                           - boolean OutOfOrderDelivery  */
    NR_PDCP_SN_Size_Type                SN_SizeUL,                      /* PDCP-Config.drb.pdcp-SN-SizeUL */
    NR_PDCP_SN_Size_Type                SN_SizeDL,                      /* PDCP-Config.drb.pdcp-SN-SizeDL */
    NR_PDCP_DRB_HeaderCompression_Type  HeaderCompression,              /* PDCP-Config.drb.headerCompression */
    boolean                             IntegrityProtectionEnabled      /* PDCP-Config.drb.integrityProtection */
  };

  
  type union NR_PDCP_RB_Config_Parameters_Type {
    Null_Type                           Srb,                            /* no SRB specific parameters in NR ASN.1 PDCP-Config */
    NR_PDCP_DRB_Config_Parameters_Type  Drb                             /* DRB specific parameters corrsponding to NR ASN.1 PDCP-Config.drb */
  };
  
  type record NR_PDCP_Config_Parameters_Type {
                                                                       /* parameters corrsponding to NR ASN.1 PDCP-Config:
                                                                           the following parameter are not included and may be added if needed:
                                                                           - integer TReorderingTimer   (timer value in milliseconds) */
    NR_PDCP_RB_Config_Parameters_Type   Rb
  };
  
  } // End group NR_PDCP_Config_Parameters

  //----------------------------------------------------------------------------

  group NR_PDCP_Configuration {
  
  type record NR_PDCP_TransparentMode {
      NR_PDCP_SN_Size_Type               SN_Size
  };

  type union NR_PDCP_RbConfig_Type {
    NR_PDCP_Config_Parameters_Type      Params,                         /* PDCP configuration parameters corresponding to UE configuration */
    NR_PDCP_TransparentMode             TransparentMode                 /* PDCP configuration for transparent (test) mode:
                                                                         * used for PDCP tests (TS 38.523-3, cl. 5.1.2.1):
                                                                         * the SS does not apply ciphering, not apply integrity protection and
                                                                         * does not maintain PDCP sequence numbers and state variables;
                                                                         * ROHC is not not applied by the SS.
                                                                         * Note:
                                                                         * a reconfiguration of a RB from transparent mode to 'normal' mode is not foreseen
                                                                         * (i.e. there is no mechanism to restore Ciphering, PDCP sequence numbers and state variables at the SS)
                                                                         * (in UL PDCP PDUs are decoded depending on SN_Size)*/
  };

  type record NR_PDCP_RBTerminating_Type {                              /* RB terminating PDCP configuration: the PDCP may be linked
                                                                           - to a local RLC bearer: RLC bearer is configured for the same cell
                                                                           - to the RLC bearer of some other cell group: LinkToOtherCellGroup is not "None"
                                                                           - the both (in case of split bearer): RLC bearer is configured for the same cell and LinkToOtherCellGroup is not "None" */
    NR_PDCP_RbConfig_Type               RbConfig              optional, /* mandatory for initial configuration; omit means "keep as it is" */
    DC_RlcBearerRouting_Type            LinkToOtherCellGroup  optional  /* mandatory for initial configuration; omit means "keep as it is"
                                                                           None:  no link to other cell group (normal case, non-split bearer)
                                                                           RAT/cellId:  PDCP is linked to RLC bearer of another cell group (same or other RAT): split bearer or PDCP and RLC bearer being configured at different cells
                                                                           NOTE: applicable also for PDCP split bearer test cases when PDCP is in transparent mode => test case body may be implemented at one PTC */
  };

  type record NR_PDCP_Proxy_Type {                                      /* proxy to route PDCP data between terminating PDCP entity and RLC bearer of another cell (group) */
    DC_RlcBearerRouting_Type            LinkToOtherNode                 /* RAT/cellId to address the radio bearer terminating node (PDCP)
                                                                           (None is not applicable) */
  };

  type union NR_PDCP_Configuration_Type {
    Null_Type                           None,                           /* for SRB0 no PDCP is configured; furthermore the PDCP may not be configured e.g. for DRBs tested in RLC or MAC test cases */
    NR_PDCP_RBTerminating_Type          RBTerminating,                  /* PDCP entity at the terminating node: handling of PDCP protocol for the given bearer (normal or split beaerer) */
    NR_PDCP_Proxy_Type                  Proxy                           /* proxy to be configured above RLC instead of a normal PDCP entity when the RLC bearer is not in the same cell (group) as the terminating PDCP entity */
  };

  } // End group NR_PDCP_Configuration

  //----------------------------------------------------------------------------

  group NR_PDCP_DrbDefs {

  type octetstring NR_PDCP_SDU_Type;
  type record of NR_PDCP_SDU_Type NR_PDCP_SDUList_Type;

  type record NR_PDCP_DataPduSN12Bits_Type {                            /* Data PDU for DRBs with 12 bits PDCP SN (TS 38.323, clause 6.2.2.2) */
    B1_Type                             D_C,                            /* 1 bit, '1'B for Data PDU */
    B3_Type                             Reserved,                       /* 3 bits reserved */
    B12_Type                            SequenceNumber,                 /* 12 bits sequence number */
    NR_PDCP_SDU_Type                    SDU,                            /* content (octetstring) */
    B32_Type                            MAC_I                 optional  /* message authentication code according to TS 38.323, clause 6.3.4;
                                                                           MAC-I field is present only when the DRB is configured with integrity protection;
                                                                           in this case it is up to TTCN to provide the valid MAC_I in DL and to check it in UL */
  };

  type record NR_PDCP_DataPduSN18Bits_Type {                            /* Data PDU for DRBs with 18 bits PDCP SN (TS 38.323, clause 6.2.2.3) */
    B1_Type                             D_C,                            /* 1 bit, '1'B for Data PDU */
    B5_Type                             Reserved,                       /* 5 bits reserved */
    B18_Type                            SequenceNumber,                 /* 18 bits sequence number */
    NR_PDCP_SDU_Type                    SDU,                            /* content (octetstring) */
    B32_Type                            MAC_I                 optional  /* message authentication code according to TS 38.323, clause 6.3.4;
                                                                           MAC-I field is present only when the DRB is configured with integrity protection;
                                                                           in this case it is up to TTCN to provide the valid MAC_I in DL and to check it in UL  */
  };

  type B3_Type NR_PDCP_CtrlPduType_Type;                                /* PDU type according to TS 38.323 clause 6.3.8:
                                                                         * 000  PDCP status report
                                                                         * 001  Interspersed ROHC feedback
                                                                         * 010-111   Reserved */

  type record NR_PDCP_CtrlPduStatus_Type {                              /* Control PDU for PDCP status report (TS 38.323, clause 6.2.3.1) */
    B1_Type                             D_C,                            /* 1 bit,  '0'B for Ctrl PDU */
    NR_PDCP_CtrlPduType_Type            PDU_Type,                       /* 3 bits, '000'B for PDCP status report */
    B4_Type                             Reserved,                       /* 4 bits reserved */
    B32_Type                            FirstMissingCount,              /* 32 bits, TS 38.323, clause 6.3.9 FMC */
    octetstring                         Bitmap                optional  /* Bitmap according to TS 38.323, clause 6.3.10 */
  };

  type record NR_PDCP_CtrlPduRohcFeedback_Type {                        /* Control PDU for Interspersed ROHC feedback (TS 38.323, clause 6.2.3.2) */
    B1_Type                             D_C,                            /* 1 bit,  '0'B for Ctrl PDU */
    NR_PDCP_CtrlPduType_Type            PDU_Type,                       /* 3 bits, '001'B for Interspersed ROHC feedback */
    B4_Type                             Reserved,                       /* 4 bits reserved */
    octetstring                         RohcFeedback                    /* ROHC packet that is not associated with a PDCP SDU */
  };

  type union NR_PDCP_PDU_Type {
    NR_PDCP_DataPduSN12Bits_Type        DataPduSN12Bits,
    NR_PDCP_DataPduSN18Bits_Type        DataPduSN18Bits,
    NR_PDCP_CtrlPduStatus_Type          CtrlPduStatus,
    NR_PDCP_CtrlPduRohcFeedback_Type    CtrlPduRohcFeedback
  }

  type record of NR_PDCP_PDU_Type NR_PDCP_PDUList_Type;

  } // End group NR_PDCP_DrbDefs
  
}
